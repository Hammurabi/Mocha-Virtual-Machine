//
// Created by Riverssen on 05.11.18.
//

#ifndef MVM_OPCODES_H
#define MVM_OPCODES_H
enum Op{
//    /**
//     * The following opcodes are not interpreted during runtime, they are used for positioning.
//     */
//    sfunc,
//    nfunc,
//    /**
//     * Interpreted opcodes start here
//     */
//    bsp,
//    sbp,
//    gbp,
//
//    sha256,
//    sha3,
//    ripemd160,
//    keccak256,


    mark,/** mark a specific location. **/
    jump,/** jump to a specific location. **/
    jumptomark,/** jump to a specific marked location. **/
    newline,/** print a \n character into the console. **/
    invokestatic,/** invoke a static method. **/
    invokedynamic,/** dynamically invoke a method using function pointers. **/
    invokenative,/** invoke a native method using function pointers. **/
    if_t,/** if true. **/
    if_f,/** if not true. **/
    amemcpy,/** copy memory to destination from source. **/
    bspmemcpy,/** copy memory to destination from base pointer. **/
    amemcpybsp,/** copy memory to pointer from source. **/
    amalloc,/** push a const pointer to the stack. **/
    acalloc,/** push a const pointer to the stack. **/
    amallocs,/** push a const pointer to the stack from size_int16_t. **/
    acallocs,/** push a const pointer to the stack from size_int16_t. **/
    abload,/** load an int_8 from a pointer. **/
    asload,/** load an int_16 from a pointer. **/
    aiload,/** load an int_32 from a pointer. **/
    alload,/** load an int_64 from a pointer. **/
    aliload,/** load an int_128 from a pointer. **/
    allload,/** load an int_256 from a pointer. **/
    afload,/** load an flt_32 from a pointer. **/
    adload,/** load an flt_64 from a pointer. **/
    adfload,/** load an flt_128 from a pointer. **/
    addload,/** load an flt_256 from a pointer. **/
    aaload,/** load a pointer from a pointer. **/
    abstore,/** store an int_8 in a pointer. **/
    asstore,/** store an int_16 in a pointer. **/
    aistore,/** store an int_32 in a pointer. **/
    alstore,/** store an int_64 in a pointer. **/
    alistore,/** store an int_128 in a pointer. **/
    allstore,/** store an int_256 in a pointer. **/
    afstore,/** store an flt_32 in a pointer. **/
    adstore,/** store an flt_64 in a pointer. **/
    adfstore,/** store an flt_128 in a pointer. **/
    addstore,/** store an flt_256 in a pointer. **/
    aastore,/** store a pointer in a pointer. **/
    baconst,/** push a byte array. **/
    baconsts,/** push a byte array using size_int16_t **/
    baconsti,/** push a byte array using size_int32_t **/
    bacast_a,/** cast a byte array into a pointer **/
    basizeof,/** push the size of a byte array to stack **/
    printba,/** print a byte array. **/
    bconst = 44         ,/** push a const int_8 into the stack. **/
    bconst_0 = 45       ,/** push a const int_8 into the stack (value = 0). **/
    bconst_1 = 46       ,/** push a const int_8 into the stack (value = 1). **/
    bconst_2 = 47       ,/** push a const int_8 into the stack (value = 2). **/
    bconst_3 = 48       ,/** push a const int_8 into the stack (value = 3). **/
    bconst_4 = 49       ,/** push a const int_8 into the stack (value = 4). **/
    bconst_5 = 50       ,/** push a const int_8 into the stack (value = 5). **/
    bconst_6 = 51       ,/** push a const int_8 into the stack (value = 6). **/
    bconst_9 = 52       ,/** push a const int_8 into the stack (value = 9). **/
    bconst_10 = 53      ,/** push a const int_8 into the stack (value = 10). **/
    bconst_11 = 54      ,/** push a const int_8 into the stack (value = 11). **/
    bconst_12 = 55      ,/** push a const int_8 into the stack (value = 12). **/
    bload = 56          ,/** load a int_8 into the stack from local variable. **/
    bload_0 = 57        ,/** load a int_8 into the stack from local variable 0. **/
    bload_1 = 58        ,/** load a int_8 into the stack from local variable 1. **/
    bload_2 = 59        ,/** load a int_8 into the stack from local variable 2. **/
    bload_3 = 60        ,/** load a int_8 into the stack from local variable 3. **/
    bload_4 = 61        ,/** load a int_8 into the stack from local variable 4. **/
    bstore = 62         ,/** store a int_8 from stack into local variable. **/
    bstore_0 = 63       ,/** store a int_8 from stack into local variable 0. **/
    bstore_1 = 64       ,/** store a int_8 from stack into local variable 1. **/
    bstore_2 = 65       ,/** store a int_8 from stack into local variable 2. **/
    bstore_3 = 66       ,/** store a int_8 from stack into local variable 3. **/
    bstore_4 = 67       ,/** store a int_8 from stack into local variable 4. **/
    bcast_b = 68        ,/** cast int_8 to type Byte. **/
    bucast_b = 69       ,/** cast unsigned uint_8 to type Byte. **/
    badd_b = 70         ,/** add int_8 with type Byte. **/
    buadd_b = 71        ,/** add unsigned uint_8 with type Byte. **/
    bsub_b = 72         ,/** subtract int_8 with type Byte. **/
    busub_b = 73        ,/** subtract unsigned uint_8 with type Byte. **/
    bmul_b = 74         ,/** multiply int_8 with type Byte. **/
    bumul_b = 75        ,/** multiply unsigned uint_8 with type Byte. **/
    bdiv_b = 76         ,/** divide int_8 with type Byte. **/
    budiv_b = 77        ,/** divide unsigned uint_8 with type Byte. **/
    bcmpl_b = 78        ,/** compare int_8 less than type Byte. **/
    bucmpl_b = 79       ,/** compare unsigned uint_8 less than type Byte. **/
    bcmpg_b = 80        ,/** compare int_8 greater than type Byte. **/
    bucmpg_b = 81       ,/** compare unsigned uint_8 greater than type Byte. **/
    bcmpe_b = 82        ,/** compare int_8 equal with type Byte. **/
    bucmpe_b = 83       ,/** compare unsigned uint_8 equal with type Byte. **/
    bcmple_b = 84       ,/** compare int_8 less than or equal to type Byte. **/
    bucmple_b = 85      ,/** compare unsigned uint_8 less than or equal to type Byte. **/
    bcmpge_b = 86       ,/** compare int_8 greater than or equal to type Byte. **/
    bucmpge_b = 87      ,/** compare unsigned uint_8 greater than or equal to type Byte. **/
    bcmpne_b = 88       ,/** compare int_8 not equal with type Byte. **/
    bucmpne_b = 89      ,/** compare unsigned uint_8 not equal with type Byte. **/
    bcast_s = 90        ,/** cast int_8 to type Short. **/
    bucast_s = 91       ,/** cast unsigned uint_8 to type Short. **/
    badd_s = 92         ,/** add int_8 with type Short. **/
    buadd_s = 93        ,/** add unsigned uint_8 with type Short. **/
    bsub_s = 94         ,/** subtract int_8 with type Short. **/
    busub_s = 95        ,/** subtract unsigned uint_8 with type Short. **/
    bmul_s = 96         ,/** multiply int_8 with type Short. **/
    bumul_s = 97        ,/** multiply unsigned uint_8 with type Short. **/
    bdiv_s = 98         ,/** divide int_8 with type Short. **/
    budiv_s = 99        ,/** divide unsigned uint_8 with type Short. **/
    bcmpl_s = 100       ,/** compare int_8 less than type Short. **/
    bucmpl_s = 101      ,/** compare unsigned uint_8 less than type Short. **/
    bcmpg_s = 102       ,/** compare int_8 greater than type Short. **/
    bucmpg_s = 103      ,/** compare unsigned uint_8 greater than type Short. **/
    bcmpe_s = 104       ,/** compare int_8 equal with type Short. **/
    bucmpe_s = 105      ,/** compare unsigned uint_8 equal with type Short. **/
    bcmple_s = 106      ,/** compare int_8 less than or equal to type Short. **/
    bucmple_s = 107     ,/** compare unsigned uint_8 less than or equal to type Short. **/
    bcmpge_s = 108      ,/** compare int_8 greater than or equal to type Short. **/
    bucmpge_s = 109     ,/** compare unsigned uint_8 greater than or equal to type Short. **/
    bcmpne_s = 110      ,/** compare int_8 not equal with type Short. **/
    bucmpne_s = 111     ,/** compare unsigned uint_8 not equal with type Short. **/
    bcast_i = 112       ,/** cast int_8 to type Int. **/
    bucast_i = 113      ,/** cast unsigned uint_8 to type Int. **/
    badd_i = 114        ,/** add int_8 with type Int. **/
    buadd_i = 115       ,/** add unsigned uint_8 with type Int. **/
    bsub_i = 116        ,/** subtract int_8 with type Int. **/
    busub_i = 117       ,/** subtract unsigned uint_8 with type Int. **/
    bmul_i = 118        ,/** multiply int_8 with type Int. **/
    bumul_i = 119       ,/** multiply unsigned uint_8 with type Int. **/
    bdiv_i = 120        ,/** divide int_8 with type Int. **/
    budiv_i = 121       ,/** divide unsigned uint_8 with type Int. **/
    bcmpl_i = 122       ,/** compare int_8 less than type Int. **/
    bucmpl_i = 123      ,/** compare unsigned uint_8 less than type Int. **/
    bcmpg_i = 124       ,/** compare int_8 greater than type Int. **/
    bucmpg_i = 125      ,/** compare unsigned uint_8 greater than type Int. **/
    bcmpe_i = 126       ,/** compare int_8 equal with type Int. **/
    bucmpe_i = 127      ,/** compare unsigned uint_8 equal with type Int. **/
    bcmple_i = 128      ,/** compare int_8 less than or equal to type Int. **/
    bucmple_i = 129     ,/** compare unsigned uint_8 less than or equal to type Int. **/
    bcmpge_i = 130      ,/** compare int_8 greater than or equal to type Int. **/
    bucmpge_i = 131     ,/** compare unsigned uint_8 greater than or equal to type Int. **/
    bcmpne_i = 132      ,/** compare int_8 not equal with type Int. **/
    bucmpne_i = 133     ,/** compare unsigned uint_8 not equal with type Int. **/
    bcast_l = 134       ,/** cast int_8 to type Long. **/
    bucast_l = 135      ,/** cast unsigned uint_8 to type Long. **/
    badd_l = 136        ,/** add int_8 with type Long. **/
    buadd_l = 137       ,/** add unsigned uint_8 with type Long. **/
    bsub_l = 138        ,/** subtract int_8 with type Long. **/
    busub_l = 139       ,/** subtract unsigned uint_8 with type Long. **/
    bmul_l = 140        ,/** multiply int_8 with type Long. **/
    bumul_l = 141       ,/** multiply unsigned uint_8 with type Long. **/
    bdiv_l = 142        ,/** divide int_8 with type Long. **/
    budiv_l = 143       ,/** divide unsigned uint_8 with type Long. **/
    bcmpl_l = 144       ,/** compare int_8 less than type Long. **/
    bucmpl_l = 145      ,/** compare unsigned uint_8 less than type Long. **/
    bcmpg_l = 146       ,/** compare int_8 greater than type Long. **/
    bucmpg_l = 147      ,/** compare unsigned uint_8 greater than type Long. **/
    bcmpe_l = 148       ,/** compare int_8 equal with type Long. **/
    bucmpe_l = 149      ,/** compare unsigned uint_8 equal with type Long. **/
    bcmple_l = 150      ,/** compare int_8 less than or equal to type Long. **/
    bucmple_l = 151     ,/** compare unsigned uint_8 less than or equal to type Long. **/
    bcmpge_l = 152      ,/** compare int_8 greater than or equal to type Long. **/
    bucmpge_l = 153     ,/** compare unsigned uint_8 greater than or equal to type Long. **/
    bcmpne_l = 154      ,/** compare int_8 not equal with type Long. **/
    bucmpne_l = 155     ,/** compare unsigned uint_8 not equal with type Long. **/
    bcast_li = 156      ,/** cast int_8 to type LongInt. **/
    bucast_li = 157     ,/** cast unsigned uint_8 to type LongInt. **/
    badd_li = 158       ,/** add int_8 with type LongInt. **/
    buadd_li = 159      ,/** add unsigned uint_8 with type LongInt. **/
    bsub_li = 160       ,/** subtract int_8 with type LongInt. **/
    busub_li = 161      ,/** subtract unsigned uint_8 with type LongInt. **/
    bmul_li = 162       ,/** multiply int_8 with type LongInt. **/
    bumul_li = 163      ,/** multiply unsigned uint_8 with type LongInt. **/
    bdiv_li = 164       ,/** divide int_8 with type LongInt. **/
    budiv_li = 165      ,/** divide unsigned uint_8 with type LongInt. **/
    bcmpl_li = 166      ,/** compare int_8 less than type LongInt. **/
    bucmpl_li = 167     ,/** compare unsigned uint_8 less than type LongInt. **/
    bcmpg_li = 168      ,/** compare int_8 greater than type LongInt. **/
    bucmpg_li = 169     ,/** compare unsigned uint_8 greater than type LongInt. **/
    bcmpe_li = 170      ,/** compare int_8 equal with type LongInt. **/
    bucmpe_li = 171     ,/** compare unsigned uint_8 equal with type LongInt. **/
    bcmple_li = 172     ,/** compare int_8 less than or equal to type LongInt. **/
    bucmple_li = 173    ,/** compare unsigned uint_8 less than or equal to type LongInt. **/
    bcmpge_li = 174     ,/** compare int_8 greater than or equal to type LongInt. **/
    bucmpge_li = 175    ,/** compare unsigned uint_8 greater than or equal to type LongInt. **/
    bcmpne_li = 176     ,/** compare int_8 not equal with type LongInt. **/
    bucmpne_li = 177    ,/** compare unsigned uint_8 not equal with type LongInt. **/
    bcast_ll = 178      ,/** cast int_8 to type LongLong. **/
    bucast_ll = 179     ,/** cast unsigned uint_8 to type LongLong. **/
    badd_ll = 180       ,/** add int_8 with type LongLong. **/
    buadd_ll = 181      ,/** add unsigned uint_8 with type LongLong. **/
    bsub_ll = 182       ,/** subtract int_8 with type LongLong. **/
    busub_ll = 183      ,/** subtract unsigned uint_8 with type LongLong. **/
    bmul_ll = 184       ,/** multiply int_8 with type LongLong. **/
    bumul_ll = 185      ,/** multiply unsigned uint_8 with type LongLong. **/
    bdiv_ll = 186       ,/** divide int_8 with type LongLong. **/
    budiv_ll = 187      ,/** divide unsigned uint_8 with type LongLong. **/
    bcmpl_ll = 188      ,/** compare int_8 less than type LongLong. **/
    bucmpl_ll = 189     ,/** compare unsigned uint_8 less than type LongLong. **/
    bcmpg_ll = 190      ,/** compare int_8 greater than type LongLong. **/
    bucmpg_ll = 191     ,/** compare unsigned uint_8 greater than type LongLong. **/
    bcmpe_ll = 192      ,/** compare int_8 equal with type LongLong. **/
    bucmpe_ll = 193     ,/** compare unsigned uint_8 equal with type LongLong. **/
    bcmple_ll = 194     ,/** compare int_8 less than or equal to type LongLong. **/
    bucmple_ll = 195    ,/** compare unsigned uint_8 less than or equal to type LongLong. **/
    bcmpge_ll = 196     ,/** compare int_8 greater than or equal to type LongLong. **/
    bucmpge_ll = 197    ,/** compare unsigned uint_8 greater than or equal to type LongLong. **/
    bcmpne_ll = 198     ,/** compare int_8 not equal with type LongLong. **/
    bucmpne_ll = 199    ,/** compare unsigned uint_8 not equal with type LongLong. **/
    bcast_f = 200       ,/** cast int_8 to type Float. **/
    bucast_f = 201      ,/** cast unsigned uint_8 to type Float. **/
    badd_f = 202        ,/** add int_8 with type Float. **/
    buadd_f = 203       ,/** add unsigned uint_8 with type Float. **/
    bsub_f = 204        ,/** subtract int_8 with type Float. **/
    busub_f = 205       ,/** subtract unsigned uint_8 with type Float. **/
    bmul_f = 206        ,/** multiply int_8 with type Float. **/
    bumul_f = 207       ,/** multiply unsigned uint_8 with type Float. **/
    bdiv_f = 208        ,/** divide int_8 with type Float. **/
    budiv_f = 209       ,/** divide unsigned uint_8 with type Float. **/
    bcmpl_f = 210       ,/** compare int_8 less than type Float. **/
    bucmpl_f = 211      ,/** compare unsigned uint_8 less than type Float. **/
    bcmpg_f = 212       ,/** compare int_8 greater than type Float. **/
    bucmpg_f = 213      ,/** compare unsigned uint_8 greater than type Float. **/
    bcmpe_f = 214       ,/** compare int_8 equal with type Float. **/
    bucmpe_f = 215      ,/** compare unsigned uint_8 equal with type Float. **/
    bcmple_f = 216      ,/** compare int_8 less than or equal to type Float. **/
    bucmple_f = 217     ,/** compare unsigned uint_8 less than or equal to type Float. **/
    bcmpge_f = 218      ,/** compare int_8 greater than or equal to type Float. **/
    bucmpge_f = 219     ,/** compare unsigned uint_8 greater than or equal to type Float. **/
    bcmpne_f = 220      ,/** compare int_8 not equal with type Float. **/
    bucmpne_f = 221     ,/** compare unsigned uint_8 not equal with type Float. **/
    bcast_d = 222       ,/** cast int_8 to type Double. **/
    bucast_d = 223      ,/** cast unsigned uint_8 to type Double. **/
    badd_d = 224        ,/** add int_8 with type Double. **/
    buadd_d = 225       ,/** add unsigned uint_8 with type Double. **/
    bsub_d = 226        ,/** subtract int_8 with type Double. **/
    busub_d = 227       ,/** subtract unsigned uint_8 with type Double. **/
    bmul_d = 228        ,/** multiply int_8 with type Double. **/
    bumul_d = 229       ,/** multiply unsigned uint_8 with type Double. **/
    bdiv_d = 230        ,/** divide int_8 with type Double. **/
    budiv_d = 231       ,/** divide unsigned uint_8 with type Double. **/
    bcmpl_d = 232       ,/** compare int_8 less than type Double. **/
    bucmpl_d = 233      ,/** compare unsigned uint_8 less than type Double. **/
    bcmpg_d = 234       ,/** compare int_8 greater than type Double. **/
    bucmpg_d = 235      ,/** compare unsigned uint_8 greater than type Double. **/
    bcmpe_d = 236       ,/** compare int_8 equal with type Double. **/
    bucmpe_d = 237      ,/** compare unsigned uint_8 equal with type Double. **/
    bcmple_d = 238      ,/** compare int_8 less than or equal to type Double. **/
    bucmple_d = 239     ,/** compare unsigned uint_8 less than or equal to type Double. **/
    bcmpge_d = 240      ,/** compare int_8 greater than or equal to type Double. **/
    bucmpge_d = 241     ,/** compare unsigned uint_8 greater than or equal to type Double. **/
    bcmpne_d = 242      ,/** compare int_8 not equal with type Double. **/
    bucmpne_d = 243     ,/** compare unsigned uint_8 not equal with type Double. **/
    bcast_df = 244      ,/** cast int_8 to type DoubleFloat. **/
    bucast_df = 245     ,/** cast unsigned uint_8 to type DoubleFloat. **/
    badd_df = 246       ,/** add int_8 with type DoubleFloat. **/
    buadd_df = 247      ,/** add unsigned uint_8 with type DoubleFloat. **/
    bsub_df = 248       ,/** subtract int_8 with type DoubleFloat. **/
    busub_df = 249      ,/** subtract unsigned uint_8 with type DoubleFloat. **/
    bmul_df = 250       ,/** multiply int_8 with type DoubleFloat. **/
    bumul_df = 251      ,/** multiply unsigned uint_8 with type DoubleFloat. **/
    bdiv_df = 252       ,/** divide int_8 with type DoubleFloat. **/
    budiv_df = 253      ,/** divide unsigned uint_8 with type DoubleFloat. **/
    bcmpl_df = 254      ,/** compare int_8 less than type DoubleFloat. **/
    bucmpl_df = 255     ,/** compare unsigned uint_8 less than type DoubleFloat. **/
    bcmpg_df = 256      ,/** compare int_8 greater than type DoubleFloat. **/
    bucmpg_df = 257     ,/** compare unsigned uint_8 greater than type DoubleFloat. **/
    bcmpe_df = 258      ,/** compare int_8 equal with type DoubleFloat. **/
    bucmpe_df = 259     ,/** compare unsigned uint_8 equal with type DoubleFloat. **/
    bcmple_df = 260     ,/** compare int_8 less than or equal to type DoubleFloat. **/
    bucmple_df = 261    ,/** compare unsigned uint_8 less than or equal to type DoubleFloat. **/
    bcmpge_df = 262     ,/** compare int_8 greater than or equal to type DoubleFloat. **/
    bucmpge_df = 263    ,/** compare unsigned uint_8 greater than or equal to type DoubleFloat. **/
    bcmpne_df = 264     ,/** compare int_8 not equal with type DoubleFloat. **/
    bucmpne_df = 265    ,/** compare unsigned uint_8 not equal with type DoubleFloat. **/
    bcast_dd = 266      ,/** cast int_8 to type DoubleDouble. **/
    bucast_dd = 267     ,/** cast unsigned uint_8 to type DoubleDouble. **/
    badd_dd = 268       ,/** add int_8 with type DoubleDouble. **/
    buadd_dd = 269      ,/** add unsigned uint_8 with type DoubleDouble. **/
    bsub_dd = 270       ,/** subtract int_8 with type DoubleDouble. **/
    busub_dd = 271      ,/** subtract unsigned uint_8 with type DoubleDouble. **/
    bmul_dd = 272       ,/** multiply int_8 with type DoubleDouble. **/
    bumul_dd = 273      ,/** multiply unsigned uint_8 with type DoubleDouble. **/
    bdiv_dd = 274       ,/** divide int_8 with type DoubleDouble. **/
    budiv_dd = 275      ,/** divide unsigned uint_8 with type DoubleDouble. **/
    bcmpl_dd = 276      ,/** compare int_8 less than type DoubleDouble. **/
    bucmpl_dd = 277     ,/** compare unsigned uint_8 less than type DoubleDouble. **/
    bcmpg_dd = 278      ,/** compare int_8 greater than type DoubleDouble. **/
    bucmpg_dd = 279     ,/** compare unsigned uint_8 greater than type DoubleDouble. **/
    bcmpe_dd = 280      ,/** compare int_8 equal with type DoubleDouble. **/
    bucmpe_dd = 281     ,/** compare unsigned uint_8 equal with type DoubleDouble. **/
    bcmple_dd = 282     ,/** compare int_8 less than or equal to type DoubleDouble. **/
    bucmple_dd = 283    ,/** compare unsigned uint_8 less than or equal to type DoubleDouble. **/
    bcmpge_dd = 284     ,/** compare int_8 greater than or equal to type DoubleDouble. **/
    bucmpge_dd = 285    ,/** compare unsigned uint_8 greater than or equal to type DoubleDouble. **/
    bcmpne_dd = 286     ,/** compare int_8 not equal with type DoubleDouble. **/
    bucmpne_dd = 287    ,/** compare unsigned uint_8 not equal with type DoubleDouble. **/
    bmod_b = 288        ,/** modulo int_8 with type Byte. **/
    bcast_ub = 289      ,/** cast int_8 to unsigned type Byte. **/
    bucast_ub = 290     ,/** cast unsigned uint_8 to unsigned type Byte. **/
    badd_ub = 291       ,/** add int_8 with unsigned type Byte. **/
    buadd_ub = 292      ,/** add unsigned uint_8 with unsigned type Byte. **/
    bsub_ub = 293       ,/** subtract int_8 with unsigned type Byte. **/
    busub_ub = 294      ,/** subtract unsigned uint_8 with unsigned type Byte. **/
    bmul_ub = 295       ,/** multiply int_8 with unsigned type Byte. **/
    bumul_ub = 296      ,/** multiply unsigned uint_8 with unsigned type Byte. **/
    bdiv_ub = 297       ,/** divide int_8 with unsigned type Byte. **/
    budiv_ub = 298      ,/** divide unsigned uint_8 with unsigned type Byte. **/
    bcmpl_ub = 299      ,/** compare int_8 less than unsigned type Byte. **/
    bucmpl_ub = 300     ,/** compare unsigned uint_8 less than unsigned type Byte. **/
    bcmpg_ub = 301      ,/** compare int_8 greater than unsigned type Byte. **/
    bucmpg_ub = 302     ,/** compare unsigned uint_8 greater than unsigned type Byte. **/
    bcmpe_ub = 303      ,/** compare int_8 equal with unsigned type Byte. **/
    bucmpe_ub = 304     ,/** compare unsigned uint_8 equal with unsigned type Byte. **/
    bcmple_ub = 305     ,/** compare int_8 less than or equal to unsigned type Byte. **/
    bucmple_ub = 306    ,/** compare unsigned uint_8 less than or equal to unsigned type Byte. **/
    bcmpge_ub = 307     ,/** compare int_8 greater than or equal to unsigned type Byte. **/
    bucmpge_ub = 308    ,/** compare unsigned uint_8 greater than or equal to unsigned type Byte. **/
    bcmpne_ub = 309     ,/** compare int_8 not equal with unsigned type Byte. **/
    bucmpne_ub = 310    ,/** compare unsigned uint_8 not equal with unsigned type Byte. **/
    bmod_s = 311        ,/** modulo int_8 with type Short. **/
    bcast_us = 312      ,/** cast int_8 to unsigned type Short. **/
    bucast_us = 313     ,/** cast unsigned uint_8 to unsigned type Short. **/
    badd_us = 314       ,/** add int_8 with unsigned type Short. **/
    buadd_us = 315      ,/** add unsigned uint_8 with unsigned type Short. **/
    bsub_us = 316       ,/** subtract int_8 with unsigned type Short. **/
    busub_us = 317      ,/** subtract unsigned uint_8 with unsigned type Short. **/
    bmul_us = 318       ,/** multiply int_8 with unsigned type Short. **/
    bumul_us = 319      ,/** multiply unsigned uint_8 with unsigned type Short. **/
    bdiv_us = 320       ,/** divide int_8 with unsigned type Short. **/
    budiv_us = 321      ,/** divide unsigned uint_8 with unsigned type Short. **/
    bcmpl_us = 322      ,/** compare int_8 less than unsigned type Short. **/
    bucmpl_us = 323     ,/** compare unsigned uint_8 less than unsigned type Short. **/
    bcmpg_us = 324      ,/** compare int_8 greater than unsigned type Short. **/
    bucmpg_us = 325     ,/** compare unsigned uint_8 greater than unsigned type Short. **/
    bcmpe_us = 326      ,/** compare int_8 equal with unsigned type Short. **/
    bucmpe_us = 327     ,/** compare unsigned uint_8 equal with unsigned type Short. **/
    bcmple_us = 328     ,/** compare int_8 less than or equal to unsigned type Short. **/
    bucmple_us = 329    ,/** compare unsigned uint_8 less than or equal to unsigned type Short. **/
    bcmpge_us = 330     ,/** compare int_8 greater than or equal to unsigned type Short. **/
    bucmpge_us = 331    ,/** compare unsigned uint_8 greater than or equal to unsigned type Short. **/
    bcmpne_us = 332     ,/** compare int_8 not equal with unsigned type Short. **/
    bucmpne_us = 333    ,/** compare unsigned uint_8 not equal with unsigned type Short. **/
    bmod_i = 334        ,/** modulo int_8 with type Int. **/
    bcast_ui = 335      ,/** cast int_8 to unsigned type Int. **/
    bucast_ui = 336     ,/** cast unsigned uint_8 to unsigned type Int. **/
    badd_ui = 337       ,/** add int_8 with unsigned type Int. **/
    buadd_ui = 338      ,/** add unsigned uint_8 with unsigned type Int. **/
    bsub_ui = 339       ,/** subtract int_8 with unsigned type Int. **/
    busub_ui = 340      ,/** subtract unsigned uint_8 with unsigned type Int. **/
    bmul_ui = 341       ,/** multiply int_8 with unsigned type Int. **/
    bumul_ui = 342      ,/** multiply unsigned uint_8 with unsigned type Int. **/
    bdiv_ui = 343       ,/** divide int_8 with unsigned type Int. **/
    budiv_ui = 344      ,/** divide unsigned uint_8 with unsigned type Int. **/
    bcmpl_ui = 345      ,/** compare int_8 less than unsigned type Int. **/
    bucmpl_ui = 346     ,/** compare unsigned uint_8 less than unsigned type Int. **/
    bcmpg_ui = 347      ,/** compare int_8 greater than unsigned type Int. **/
    bucmpg_ui = 348     ,/** compare unsigned uint_8 greater than unsigned type Int. **/
    bcmpe_ui = 349      ,/** compare int_8 equal with unsigned type Int. **/
    bucmpe_ui = 350     ,/** compare unsigned uint_8 equal with unsigned type Int. **/
    bcmple_ui = 351     ,/** compare int_8 less than or equal to unsigned type Int. **/
    bucmple_ui = 352    ,/** compare unsigned uint_8 less than or equal to unsigned type Int. **/
    bcmpge_ui = 353     ,/** compare int_8 greater than or equal to unsigned type Int. **/
    bucmpge_ui = 354    ,/** compare unsigned uint_8 greater than or equal to unsigned type Int. **/
    bcmpne_ui = 355     ,/** compare int_8 not equal with unsigned type Int. **/
    bucmpne_ui = 356    ,/** compare unsigned uint_8 not equal with unsigned type Int. **/
    bmod_l = 357        ,/** modulo int_8 with type Long. **/
    bcast_ul = 358      ,/** cast int_8 to unsigned type Long. **/
    bucast_ul = 359     ,/** cast unsigned uint_8 to unsigned type Long. **/
    badd_ul = 360       ,/** add int_8 with unsigned type Long. **/
    buadd_ul = 361      ,/** add unsigned uint_8 with unsigned type Long. **/
    bsub_ul = 362       ,/** subtract int_8 with unsigned type Long. **/
    busub_ul = 363      ,/** subtract unsigned uint_8 with unsigned type Long. **/
    bmul_ul = 364       ,/** multiply int_8 with unsigned type Long. **/
    bumul_ul = 365      ,/** multiply unsigned uint_8 with unsigned type Long. **/
    bdiv_ul = 366       ,/** divide int_8 with unsigned type Long. **/
    budiv_ul = 367      ,/** divide unsigned uint_8 with unsigned type Long. **/
    bcmpl_ul = 368      ,/** compare int_8 less than unsigned type Long. **/
    bucmpl_ul = 369     ,/** compare unsigned uint_8 less than unsigned type Long. **/
    bcmpg_ul = 370      ,/** compare int_8 greater than unsigned type Long. **/
    bucmpg_ul = 371     ,/** compare unsigned uint_8 greater than unsigned type Long. **/
    bcmpe_ul = 372      ,/** compare int_8 equal with unsigned type Long. **/
    bucmpe_ul = 373     ,/** compare unsigned uint_8 equal with unsigned type Long. **/
    bcmple_ul = 374     ,/** compare int_8 less than or equal to unsigned type Long. **/
    bucmple_ul = 375    ,/** compare unsigned uint_8 less than or equal to unsigned type Long. **/
    bcmpge_ul = 376     ,/** compare int_8 greater than or equal to unsigned type Long. **/
    bucmpge_ul = 377    ,/** compare unsigned uint_8 greater than or equal to unsigned type Long. **/
    bcmpne_ul = 378     ,/** compare int_8 not equal with unsigned type Long. **/
    bucmpne_ul = 379    ,/** compare unsigned uint_8 not equal with unsigned type Long. **/
    bmod_li = 380       ,/** modulo int_8 with type LongInt. **/
    bcast_uli = 381     ,/** cast int_8 to unsigned type LongInt. **/
    bucast_uli = 382    ,/** cast unsigned uint_8 to unsigned type LongInt. **/
    badd_uli = 383      ,/** add int_8 with unsigned type LongInt. **/
    buadd_uli = 384     ,/** add unsigned uint_8 with unsigned type LongInt. **/
    bsub_uli = 385      ,/** subtract int_8 with unsigned type LongInt. **/
    busub_uli = 386     ,/** subtract unsigned uint_8 with unsigned type LongInt. **/
    bmul_uli = 387      ,/** multiply int_8 with unsigned type LongInt. **/
    bumul_uli = 388     ,/** multiply unsigned uint_8 with unsigned type LongInt. **/
    bdiv_uli = 389      ,/** divide int_8 with unsigned type LongInt. **/
    budiv_uli = 390     ,/** divide unsigned uint_8 with unsigned type LongInt. **/
    bcmpl_uli = 391     ,/** compare int_8 less than unsigned type LongInt. **/
    bucmpl_uli = 392    ,/** compare unsigned uint_8 less than unsigned type LongInt. **/
    bcmpg_uli = 393     ,/** compare int_8 greater than unsigned type LongInt. **/
    bucmpg_uli = 394    ,/** compare unsigned uint_8 greater than unsigned type LongInt. **/
    bcmpe_uli = 395     ,/** compare int_8 equal with unsigned type LongInt. **/
    bucmpe_uli = 396    ,/** compare unsigned uint_8 equal with unsigned type LongInt. **/
    bcmple_uli = 397    ,/** compare int_8 less than or equal to unsigned type LongInt. **/
    bucmple_uli = 398   ,/** compare unsigned uint_8 less than or equal to unsigned type LongInt. **/
    bcmpge_uli = 399    ,/** compare int_8 greater than or equal to unsigned type LongInt. **/
    bucmpge_uli = 400   ,/** compare unsigned uint_8 greater than or equal to unsigned type LongInt. **/
    bcmpne_uli = 401    ,/** compare int_8 not equal with unsigned type LongInt. **/
    bucmpne_uli = 402   ,/** compare unsigned uint_8 not equal with unsigned type LongInt. **/
    bmod_ll = 403       ,/** modulo int_8 with type LongLong. **/
    bcast_ull = 404     ,/** cast int_8 to unsigned type LongLong. **/
    bucast_ull = 405    ,/** cast unsigned uint_8 to unsigned type LongLong. **/
    badd_ull = 406      ,/** add int_8 with unsigned type LongLong. **/
    buadd_ull = 407     ,/** add unsigned uint_8 with unsigned type LongLong. **/
    bsub_ull = 408      ,/** subtract int_8 with unsigned type LongLong. **/
    busub_ull = 409     ,/** subtract unsigned uint_8 with unsigned type LongLong. **/
    bmul_ull = 410      ,/** multiply int_8 with unsigned type LongLong. **/
    bumul_ull = 411     ,/** multiply unsigned uint_8 with unsigned type LongLong. **/
    bdiv_ull = 412      ,/** divide int_8 with unsigned type LongLong. **/
    budiv_ull = 413     ,/** divide unsigned uint_8 with unsigned type LongLong. **/
    bcmpl_ull = 414     ,/** compare int_8 less than unsigned type LongLong. **/
    bucmpl_ull = 415    ,/** compare unsigned uint_8 less than unsigned type LongLong. **/
    bcmpg_ull = 416     ,/** compare int_8 greater than unsigned type LongLong. **/
    bucmpg_ull = 417    ,/** compare unsigned uint_8 greater than unsigned type LongLong. **/
    bcmpe_ull = 418     ,/** compare int_8 equal with unsigned type LongLong. **/
    bucmpe_ull = 419    ,/** compare unsigned uint_8 equal with unsigned type LongLong. **/
    bcmple_ull = 420    ,/** compare int_8 less than or equal to unsigned type LongLong. **/
    bucmple_ull = 421   ,/** compare unsigned uint_8 less than or equal to unsigned type LongLong. **/
    bcmpge_ull = 422    ,/** compare int_8 greater than or equal to unsigned type LongLong. **/
    bucmpge_ull = 423   ,/** compare unsigned uint_8 greater than or equal to unsigned type LongLong. **/
    bcmpne_ull = 424    ,/** compare int_8 not equal with unsigned type LongLong. **/
    bucmpne_ull = 425   ,/** compare unsigned uint_8 not equal with unsigned type LongLong. **/
    band_b = 426        ,/** bitwise and int_8 with type Byte. **/
    bor_b = 427         ,/** bitwise or int_8 with type Byte. **/
    bxor_b = 428        ,/** bitwise xor int_8 with type Byte. **/
    bshftr_b = 429      ,/** shift right int_8 with type Byte. **/
    bshftl_b = 430      ,/** shift left xor int_8 with type Byte. **/
    band_s = 431        ,/** bitwise and int_8 with type Short. **/
    bor_s = 432         ,/** bitwise or int_8 with type Short. **/
    bxor_s = 433        ,/** bitwise xor int_8 with type Short. **/
    bshftr_s = 434      ,/** shift right int_8 with type Short. **/
    bshftl_s = 435      ,/** shift left xor int_8 with type Short. **/
    band_i = 436        ,/** bitwise and int_8 with type Int. **/
    bor_i = 437         ,/** bitwise or int_8 with type Int. **/
    bxor_i = 438        ,/** bitwise xor int_8 with type Int. **/
    bshftr_i = 439      ,/** shift right int_8 with type Int. **/
    bshftl_i = 440      ,/** shift left xor int_8 with type Int. **/
    band_l = 441        ,/** bitwise and int_8 with type Long. **/
    bor_l = 442         ,/** bitwise or int_8 with type Long. **/
    bxor_l = 443        ,/** bitwise xor int_8 with type Long. **/
    bshftr_l = 444      ,/** shift right int_8 with type Long. **/
    bshftl_l = 445      ,/** shift left xor int_8 with type Long. **/
    band_li = 446       ,/** bitwise and int_8 with type LongInt. **/
    bor_li = 447        ,/** bitwise or int_8 with type LongInt. **/
    bxor_li = 448       ,/** bitwise xor int_8 with type LongInt. **/
    bshftr_li = 449     ,/** shift right int_8 with type LongInt. **/
    bshftl_li = 450     ,/** shift left xor int_8 with type LongInt. **/
    band_ll = 451       ,/** bitwise and int_8 with type LongLong. **/
    bor_ll = 452        ,/** bitwise or int_8 with type LongLong. **/
    bxor_ll = 453       ,/** bitwise xor int_8 with type LongLong. **/
    bshftr_ll = 454     ,/** shift right int_8 with type LongLong. **/
    bshftl_ll = 455     ,/** shift left xor int_8 with type LongLong. **/
    bdup = 456          ,/** duplicate a int_8 on the stack. **/
    bdup2 = 457         ,/** duplicate a int_8 2 times on the stack. **/
    bdup3 = 458         ,/** duplicate a int_8 3 times on the stack. **/
    bdup4 = 459         ,/** duplicate a int_8 4 times on the stack. **/
    bdup5 = 460         ,/** duplicate a int_8 5 times on the stack. **/
    bset = 461          ,/** set a int_8 from stack into a field on base pointer. **/
    bget = 462          ,/** get a int_8 from a field on base pointer to stack. **/
    bvset = 463         ,/** set a int_8 from value into a field on base pointer. **/
    bsget = 464         ,/** get a int_8 from a field on base pointer to stack using address from stack. **/
    bsset = 465         ,/** set a int_8 from stack into a field on base pointer using address from stack. **/
    bsetl = 466         ,/** set a int_8 from local variable into a field on base pointer. **/
    binc_1 = 467        ,/** increment int_8 by 1 on stack. **/
    binc_2 = 468        ,/** increment int_8 by 2 on stack. **/
    bstinc_1 = 469      ,/** increment int_8 by 1 on stack. **/
    bstinc_2 = 470      ,/** increment int_8 by 2 on stack. **/
    breturn = 471       ,/** return a int_8 into the main stack. **/
    bmainst = 472       ,/** store a int_8 from main stack in a local variable.. **/
    bmainst_0 = 473     ,/** store a int_8 from main stack in local variable 0. **/
    bmainst_1 = 474     ,/** store a int_8 from main stack in local variable 1. **/
    bmainst_2 = 475     ,/** store a int_8 from main stack in local variable 2. **/
    bmainst_3 = 476     ,/** store a int_8 from main stack in local variable 3. **/
    bprint = 477        ,/** print a int_8 from stack. **/
    buprint = 478       ,/** print a unsigned uint_8 from stack. **/
    sconst = 479        ,/** push a const int_16 into the stack. **/
    sconst_0 = 480      ,/** push a const int_16 into the stack (value = 0). **/
    sconst_1 = 481      ,/** push a const int_16 into the stack (value = 1). **/
    sconst_2 = 482      ,/** push a const int_16 into the stack (value = 2). **/
    sconst_3 = 483      ,/** push a const int_16 into the stack (value = 3). **/
    sconst_4 = 484      ,/** push a const int_16 into the stack (value = 4). **/
    sconst_5 = 485      ,/** push a const int_16 into the stack (value = 5). **/
    sconst_6 = 486      ,/** push a const int_16 into the stack (value = 6). **/
    sconst_9 = 487      ,/** push a const int_16 into the stack (value = 9). **/
    sconst_10 = 488     ,/** push a const int_16 into the stack (value = 10). **/
    sconst_11 = 489     ,/** push a const int_16 into the stack (value = 11). **/
    sconst_12 = 490     ,/** push a const int_16 into the stack (value = 12). **/
    sload = 491         ,/** load a int_16 into the stack from local variable. **/
    sload_0 = 492       ,/** load a int_16 into the stack from local variable 0. **/
    sload_1 = 493       ,/** load a int_16 into the stack from local variable 1. **/
    sload_2 = 494       ,/** load a int_16 into the stack from local variable 2. **/
    sload_3 = 495       ,/** load a int_16 into the stack from local variable 3. **/
    sload_4 = 496       ,/** load a int_16 into the stack from local variable 4. **/
    sstore = 497        ,/** store a int_16 from stack into local variable. **/
    sstore_0 = 498      ,/** store a int_16 from stack into local variable 0. **/
    sstore_1 = 499      ,/** store a int_16 from stack into local variable 1. **/
    sstore_2 = 500      ,/** store a int_16 from stack into local variable 2. **/
    sstore_3 = 501      ,/** store a int_16 from stack into local variable 3. **/
    sstore_4 = 502      ,/** store a int_16 from stack into local variable 4. **/
    scast_b = 503       ,/** cast int_16 to type Byte. **/
    sucast_b = 504      ,/** cast unsigned uint_16 to type Byte. **/
    sadd_b = 505        ,/** add int_16 with type Byte. **/
    suadd_b = 506       ,/** add unsigned uint_16 with type Byte. **/
    ssub_b = 507        ,/** subtract int_16 with type Byte. **/
    susub_b = 508       ,/** subtract unsigned uint_16 with type Byte. **/
    smul_b = 509        ,/** multiply int_16 with type Byte. **/
    sumul_b = 510       ,/** multiply unsigned uint_16 with type Byte. **/
    sdiv_b = 511        ,/** divide int_16 with type Byte. **/
    sudiv_b = 512       ,/** divide unsigned uint_16 with type Byte. **/
    scmpl_b = 513       ,/** compare int_16 less than type Byte. **/
    sucmpl_b = 514      ,/** compare unsigned uint_16 less than type Byte. **/
    scmpg_b = 515       ,/** compare int_16 greater than type Byte. **/
    sucmpg_b = 516      ,/** compare unsigned uint_16 greater than type Byte. **/
    scmpe_b = 517       ,/** compare int_16 equal with type Byte. **/
    sucmpe_b = 518      ,/** compare unsigned uint_16 equal with type Byte. **/
    scmple_b = 519      ,/** compare int_16 less than or equal to type Byte. **/
    sucmple_b = 520     ,/** compare unsigned uint_16 less than or equal to type Byte. **/
    scmpge_b = 521      ,/** compare int_16 greater than or equal to type Byte. **/
    sucmpge_b = 522     ,/** compare unsigned uint_16 greater than or equal to type Byte. **/
    scmpne_b = 523      ,/** compare int_16 not equal with type Byte. **/
    sucmpne_b = 524     ,/** compare unsigned uint_16 not equal with type Byte. **/
    scast_s = 525       ,/** cast int_16 to type Short. **/
    sucast_s = 526      ,/** cast unsigned uint_16 to type Short. **/
    sadd_s = 527        ,/** add int_16 with type Short. **/
    suadd_s = 528       ,/** add unsigned uint_16 with type Short. **/
    ssub_s = 529        ,/** subtract int_16 with type Short. **/
    susub_s = 530       ,/** subtract unsigned uint_16 with type Short. **/
    smul_s = 531        ,/** multiply int_16 with type Short. **/
    sumul_s = 532       ,/** multiply unsigned uint_16 with type Short. **/
    sdiv_s = 533        ,/** divide int_16 with type Short. **/
    sudiv_s = 534       ,/** divide unsigned uint_16 with type Short. **/
    scmpl_s = 535       ,/** compare int_16 less than type Short. **/
    sucmpl_s = 536      ,/** compare unsigned uint_16 less than type Short. **/
    scmpg_s = 537       ,/** compare int_16 greater than type Short. **/
    sucmpg_s = 538      ,/** compare unsigned uint_16 greater than type Short. **/
    scmpe_s = 539       ,/** compare int_16 equal with type Short. **/
    sucmpe_s = 540      ,/** compare unsigned uint_16 equal with type Short. **/
    scmple_s = 541      ,/** compare int_16 less than or equal to type Short. **/
    sucmple_s = 542     ,/** compare unsigned uint_16 less than or equal to type Short. **/
    scmpge_s = 543      ,/** compare int_16 greater than or equal to type Short. **/
    sucmpge_s = 544     ,/** compare unsigned uint_16 greater than or equal to type Short. **/
    scmpne_s = 545      ,/** compare int_16 not equal with type Short. **/
    sucmpne_s = 546     ,/** compare unsigned uint_16 not equal with type Short. **/
    scast_i = 547       ,/** cast int_16 to type Int. **/
    sucast_i = 548      ,/** cast unsigned uint_16 to type Int. **/
    sadd_i = 549        ,/** add int_16 with type Int. **/
    suadd_i = 550       ,/** add unsigned uint_16 with type Int. **/
    ssub_i = 551        ,/** subtract int_16 with type Int. **/
    susub_i = 552       ,/** subtract unsigned uint_16 with type Int. **/
    smul_i = 553        ,/** multiply int_16 with type Int. **/
    sumul_i = 554       ,/** multiply unsigned uint_16 with type Int. **/
    sdiv_i = 555        ,/** divide int_16 with type Int. **/
    sudiv_i = 556       ,/** divide unsigned uint_16 with type Int. **/
    scmpl_i = 557       ,/** compare int_16 less than type Int. **/
    sucmpl_i = 558      ,/** compare unsigned uint_16 less than type Int. **/
    scmpg_i = 559       ,/** compare int_16 greater than type Int. **/
    sucmpg_i = 560      ,/** compare unsigned uint_16 greater than type Int. **/
    scmpe_i = 561       ,/** compare int_16 equal with type Int. **/
    sucmpe_i = 562      ,/** compare unsigned uint_16 equal with type Int. **/
    scmple_i = 563      ,/** compare int_16 less than or equal to type Int. **/
    sucmple_i = 564     ,/** compare unsigned uint_16 less than or equal to type Int. **/
    scmpge_i = 565      ,/** compare int_16 greater than or equal to type Int. **/
    sucmpge_i = 566     ,/** compare unsigned uint_16 greater than or equal to type Int. **/
    scmpne_i = 567      ,/** compare int_16 not equal with type Int. **/
    sucmpne_i = 568     ,/** compare unsigned uint_16 not equal with type Int. **/
    scast_l = 569       ,/** cast int_16 to type Long. **/
    sucast_l = 570      ,/** cast unsigned uint_16 to type Long. **/
    sadd_l = 571        ,/** add int_16 with type Long. **/
    suadd_l = 572       ,/** add unsigned uint_16 with type Long. **/
    ssub_l = 573        ,/** subtract int_16 with type Long. **/
    susub_l = 574       ,/** subtract unsigned uint_16 with type Long. **/
    smul_l = 575        ,/** multiply int_16 with type Long. **/
    sumul_l = 576       ,/** multiply unsigned uint_16 with type Long. **/
    sdiv_l = 577        ,/** divide int_16 with type Long. **/
    sudiv_l = 578       ,/** divide unsigned uint_16 with type Long. **/
    scmpl_l = 579       ,/** compare int_16 less than type Long. **/
    sucmpl_l = 580      ,/** compare unsigned uint_16 less than type Long. **/
    scmpg_l = 581       ,/** compare int_16 greater than type Long. **/
    sucmpg_l = 582      ,/** compare unsigned uint_16 greater than type Long. **/
    scmpe_l = 583       ,/** compare int_16 equal with type Long. **/
    sucmpe_l = 584      ,/** compare unsigned uint_16 equal with type Long. **/
    scmple_l = 585      ,/** compare int_16 less than or equal to type Long. **/
    sucmple_l = 586     ,/** compare unsigned uint_16 less than or equal to type Long. **/
    scmpge_l = 587      ,/** compare int_16 greater than or equal to type Long. **/
    sucmpge_l = 588     ,/** compare unsigned uint_16 greater than or equal to type Long. **/
    scmpne_l = 589      ,/** compare int_16 not equal with type Long. **/
    sucmpne_l = 590     ,/** compare unsigned uint_16 not equal with type Long. **/
    scast_li = 591      ,/** cast int_16 to type LongInt. **/
    sucast_li = 592     ,/** cast unsigned uint_16 to type LongInt. **/
    sadd_li = 593       ,/** add int_16 with type LongInt. **/
    suadd_li = 594      ,/** add unsigned uint_16 with type LongInt. **/
    ssub_li = 595       ,/** subtract int_16 with type LongInt. **/
    susub_li = 596      ,/** subtract unsigned uint_16 with type LongInt. **/
    smul_li = 597       ,/** multiply int_16 with type LongInt. **/
    sumul_li = 598      ,/** multiply unsigned uint_16 with type LongInt. **/
    sdiv_li = 599       ,/** divide int_16 with type LongInt. **/
    sudiv_li = 600      ,/** divide unsigned uint_16 with type LongInt. **/
    scmpl_li = 601      ,/** compare int_16 less than type LongInt. **/
    sucmpl_li = 602     ,/** compare unsigned uint_16 less than type LongInt. **/
    scmpg_li = 603      ,/** compare int_16 greater than type LongInt. **/
    sucmpg_li = 604     ,/** compare unsigned uint_16 greater than type LongInt. **/
    scmpe_li = 605      ,/** compare int_16 equal with type LongInt. **/
    sucmpe_li = 606     ,/** compare unsigned uint_16 equal with type LongInt. **/
    scmple_li = 607     ,/** compare int_16 less than or equal to type LongInt. **/
    sucmple_li = 608    ,/** compare unsigned uint_16 less than or equal to type LongInt. **/
    scmpge_li = 609     ,/** compare int_16 greater than or equal to type LongInt. **/
    sucmpge_li = 610    ,/** compare unsigned uint_16 greater than or equal to type LongInt. **/
    scmpne_li = 611     ,/** compare int_16 not equal with type LongInt. **/
    sucmpne_li = 612    ,/** compare unsigned uint_16 not equal with type LongInt. **/
    scast_ll = 613      ,/** cast int_16 to type LongLong. **/
    sucast_ll = 614     ,/** cast unsigned uint_16 to type LongLong. **/
    sadd_ll = 615       ,/** add int_16 with type LongLong. **/
    suadd_ll = 616      ,/** add unsigned uint_16 with type LongLong. **/
    ssub_ll = 617       ,/** subtract int_16 with type LongLong. **/
    susub_ll = 618      ,/** subtract unsigned uint_16 with type LongLong. **/
    smul_ll = 619       ,/** multiply int_16 with type LongLong. **/
    sumul_ll = 620      ,/** multiply unsigned uint_16 with type LongLong. **/
    sdiv_ll = 621       ,/** divide int_16 with type LongLong. **/
    sudiv_ll = 622      ,/** divide unsigned uint_16 with type LongLong. **/
    scmpl_ll = 623      ,/** compare int_16 less than type LongLong. **/
    sucmpl_ll = 624     ,/** compare unsigned uint_16 less than type LongLong. **/
    scmpg_ll = 625      ,/** compare int_16 greater than type LongLong. **/
    sucmpg_ll = 626     ,/** compare unsigned uint_16 greater than type LongLong. **/
    scmpe_ll = 627      ,/** compare int_16 equal with type LongLong. **/
    sucmpe_ll = 628     ,/** compare unsigned uint_16 equal with type LongLong. **/
    scmple_ll = 629     ,/** compare int_16 less than or equal to type LongLong. **/
    sucmple_ll = 630    ,/** compare unsigned uint_16 less than or equal to type LongLong. **/
    scmpge_ll = 631     ,/** compare int_16 greater than or equal to type LongLong. **/
    sucmpge_ll = 632    ,/** compare unsigned uint_16 greater than or equal to type LongLong. **/
    scmpne_ll = 633     ,/** compare int_16 not equal with type LongLong. **/
    sucmpne_ll = 634    ,/** compare unsigned uint_16 not equal with type LongLong. **/
    scast_f = 635       ,/** cast int_16 to type Float. **/
    sucast_f = 636      ,/** cast unsigned uint_16 to type Float. **/
    sadd_f = 637        ,/** add int_16 with type Float. **/
    suadd_f = 638       ,/** add unsigned uint_16 with type Float. **/
    ssub_f = 639        ,/** subtract int_16 with type Float. **/
    susub_f = 640       ,/** subtract unsigned uint_16 with type Float. **/
    smul_f = 641        ,/** multiply int_16 with type Float. **/
    sumul_f = 642       ,/** multiply unsigned uint_16 with type Float. **/
    sdiv_f = 643        ,/** divide int_16 with type Float. **/
    sudiv_f = 644       ,/** divide unsigned uint_16 with type Float. **/
    scmpl_f = 645       ,/** compare int_16 less than type Float. **/
    sucmpl_f = 646      ,/** compare unsigned uint_16 less than type Float. **/
    scmpg_f = 647       ,/** compare int_16 greater than type Float. **/
    sucmpg_f = 648      ,/** compare unsigned uint_16 greater than type Float. **/
    scmpe_f = 649       ,/** compare int_16 equal with type Float. **/
    sucmpe_f = 650      ,/** compare unsigned uint_16 equal with type Float. **/
    scmple_f = 651      ,/** compare int_16 less than or equal to type Float. **/
    sucmple_f = 652     ,/** compare unsigned uint_16 less than or equal to type Float. **/
    scmpge_f = 653      ,/** compare int_16 greater than or equal to type Float. **/
    sucmpge_f = 654     ,/** compare unsigned uint_16 greater than or equal to type Float. **/
    scmpne_f = 655      ,/** compare int_16 not equal with type Float. **/
    sucmpne_f = 656     ,/** compare unsigned uint_16 not equal with type Float. **/
    scast_d = 657       ,/** cast int_16 to type Double. **/
    sucast_d = 658      ,/** cast unsigned uint_16 to type Double. **/
    sadd_d = 659        ,/** add int_16 with type Double. **/
    suadd_d = 660       ,/** add unsigned uint_16 with type Double. **/
    ssub_d = 661        ,/** subtract int_16 with type Double. **/
    susub_d = 662       ,/** subtract unsigned uint_16 with type Double. **/
    smul_d = 663        ,/** multiply int_16 with type Double. **/
    sumul_d = 664       ,/** multiply unsigned uint_16 with type Double. **/
    sdiv_d = 665        ,/** divide int_16 with type Double. **/
    sudiv_d = 666       ,/** divide unsigned uint_16 with type Double. **/
    scmpl_d = 667       ,/** compare int_16 less than type Double. **/
    sucmpl_d = 668      ,/** compare unsigned uint_16 less than type Double. **/
    scmpg_d = 669       ,/** compare int_16 greater than type Double. **/
    sucmpg_d = 670      ,/** compare unsigned uint_16 greater than type Double. **/
    scmpe_d = 671       ,/** compare int_16 equal with type Double. **/
    sucmpe_d = 672      ,/** compare unsigned uint_16 equal with type Double. **/
    scmple_d = 673      ,/** compare int_16 less than or equal to type Double. **/
    sucmple_d = 674     ,/** compare unsigned uint_16 less than or equal to type Double. **/
    scmpge_d = 675      ,/** compare int_16 greater than or equal to type Double. **/
    sucmpge_d = 676     ,/** compare unsigned uint_16 greater than or equal to type Double. **/
    scmpne_d = 677      ,/** compare int_16 not equal with type Double. **/
    sucmpne_d = 678     ,/** compare unsigned uint_16 not equal with type Double. **/
    scast_df = 679      ,/** cast int_16 to type DoubleFloat. **/
    sucast_df = 680     ,/** cast unsigned uint_16 to type DoubleFloat. **/
    sadd_df = 681       ,/** add int_16 with type DoubleFloat. **/
    suadd_df = 682      ,/** add unsigned uint_16 with type DoubleFloat. **/
    ssub_df = 683       ,/** subtract int_16 with type DoubleFloat. **/
    susub_df = 684      ,/** subtract unsigned uint_16 with type DoubleFloat. **/
    smul_df = 685       ,/** multiply int_16 with type DoubleFloat. **/
    sumul_df = 686      ,/** multiply unsigned uint_16 with type DoubleFloat. **/
    sdiv_df = 687       ,/** divide int_16 with type DoubleFloat. **/
    sudiv_df = 688      ,/** divide unsigned uint_16 with type DoubleFloat. **/
    scmpl_df = 689      ,/** compare int_16 less than type DoubleFloat. **/
    sucmpl_df = 690     ,/** compare unsigned uint_16 less than type DoubleFloat. **/
    scmpg_df = 691      ,/** compare int_16 greater than type DoubleFloat. **/
    sucmpg_df = 692     ,/** compare unsigned uint_16 greater than type DoubleFloat. **/
    scmpe_df = 693      ,/** compare int_16 equal with type DoubleFloat. **/
    sucmpe_df = 694     ,/** compare unsigned uint_16 equal with type DoubleFloat. **/
    scmple_df = 695     ,/** compare int_16 less than or equal to type DoubleFloat. **/
    sucmple_df = 696    ,/** compare unsigned uint_16 less than or equal to type DoubleFloat. **/
    scmpge_df = 697     ,/** compare int_16 greater than or equal to type DoubleFloat. **/
    sucmpge_df = 698    ,/** compare unsigned uint_16 greater than or equal to type DoubleFloat. **/
    scmpne_df = 699     ,/** compare int_16 not equal with type DoubleFloat. **/
    sucmpne_df = 700    ,/** compare unsigned uint_16 not equal with type DoubleFloat. **/
    scast_dd = 701      ,/** cast int_16 to type DoubleDouble. **/
    sucast_dd = 702     ,/** cast unsigned uint_16 to type DoubleDouble. **/
    sadd_dd = 703       ,/** add int_16 with type DoubleDouble. **/
    suadd_dd = 704      ,/** add unsigned uint_16 with type DoubleDouble. **/
    ssub_dd = 705       ,/** subtract int_16 with type DoubleDouble. **/
    susub_dd = 706      ,/** subtract unsigned uint_16 with type DoubleDouble. **/
    smul_dd = 707       ,/** multiply int_16 with type DoubleDouble. **/
    sumul_dd = 708      ,/** multiply unsigned uint_16 with type DoubleDouble. **/
    sdiv_dd = 709       ,/** divide int_16 with type DoubleDouble. **/
    sudiv_dd = 710      ,/** divide unsigned uint_16 with type DoubleDouble. **/
    scmpl_dd = 711      ,/** compare int_16 less than type DoubleDouble. **/
    sucmpl_dd = 712     ,/** compare unsigned uint_16 less than type DoubleDouble. **/
    scmpg_dd = 713      ,/** compare int_16 greater than type DoubleDouble. **/
    sucmpg_dd = 714     ,/** compare unsigned uint_16 greater than type DoubleDouble. **/
    scmpe_dd = 715      ,/** compare int_16 equal with type DoubleDouble. **/
    sucmpe_dd = 716     ,/** compare unsigned uint_16 equal with type DoubleDouble. **/
    scmple_dd = 717     ,/** compare int_16 less than or equal to type DoubleDouble. **/
    sucmple_dd = 718    ,/** compare unsigned uint_16 less than or equal to type DoubleDouble. **/
    scmpge_dd = 719     ,/** compare int_16 greater than or equal to type DoubleDouble. **/
    sucmpge_dd = 720    ,/** compare unsigned uint_16 greater than or equal to type DoubleDouble. **/
    scmpne_dd = 721     ,/** compare int_16 not equal with type DoubleDouble. **/
    sucmpne_dd = 722    ,/** compare unsigned uint_16 not equal with type DoubleDouble. **/
    smod_b = 723        ,/** modulo int_16 with type Byte. **/
    scast_ub = 724      ,/** cast int_16 to unsigned type Byte. **/
    sucast_ub = 725     ,/** cast unsigned uint_16 to unsigned type Byte. **/
    sadd_ub = 726       ,/** add int_16 with unsigned type Byte. **/
    suadd_ub = 727      ,/** add unsigned uint_16 with unsigned type Byte. **/
    ssub_ub = 728       ,/** subtract int_16 with unsigned type Byte. **/
    susub_ub = 729      ,/** subtract unsigned uint_16 with unsigned type Byte. **/
    smul_ub = 730       ,/** multiply int_16 with unsigned type Byte. **/
    sumul_ub = 731      ,/** multiply unsigned uint_16 with unsigned type Byte. **/
    sdiv_ub = 732       ,/** divide int_16 with unsigned type Byte. **/
    sudiv_ub = 733      ,/** divide unsigned uint_16 with unsigned type Byte. **/
    scmpl_ub = 734      ,/** compare int_16 less than unsigned type Byte. **/
    sucmpl_ub = 735     ,/** compare unsigned uint_16 less than unsigned type Byte. **/
    scmpg_ub = 736      ,/** compare int_16 greater than unsigned type Byte. **/
    sucmpg_ub = 737     ,/** compare unsigned uint_16 greater than unsigned type Byte. **/
    scmpe_ub = 738      ,/** compare int_16 equal with unsigned type Byte. **/
    sucmpe_ub = 739     ,/** compare unsigned uint_16 equal with unsigned type Byte. **/
    scmple_ub = 740     ,/** compare int_16 less than or equal to unsigned type Byte. **/
    sucmple_ub = 741    ,/** compare unsigned uint_16 less than or equal to unsigned type Byte. **/
    scmpge_ub = 742     ,/** compare int_16 greater than or equal to unsigned type Byte. **/
    sucmpge_ub = 743    ,/** compare unsigned uint_16 greater than or equal to unsigned type Byte. **/
    scmpne_ub = 744     ,/** compare int_16 not equal with unsigned type Byte. **/
    sucmpne_ub = 745    ,/** compare unsigned uint_16 not equal with unsigned type Byte. **/
    smod_s = 746        ,/** modulo int_16 with type Short. **/
    scast_us = 747      ,/** cast int_16 to unsigned type Short. **/
    sucast_us = 748     ,/** cast unsigned uint_16 to unsigned type Short. **/
    sadd_us = 749       ,/** add int_16 with unsigned type Short. **/
    suadd_us = 750      ,/** add unsigned uint_16 with unsigned type Short. **/
    ssub_us = 751       ,/** subtract int_16 with unsigned type Short. **/
    susub_us = 752      ,/** subtract unsigned uint_16 with unsigned type Short. **/
    smul_us = 753       ,/** multiply int_16 with unsigned type Short. **/
    sumul_us = 754      ,/** multiply unsigned uint_16 with unsigned type Short. **/
    sdiv_us = 755       ,/** divide int_16 with unsigned type Short. **/
    sudiv_us = 756      ,/** divide unsigned uint_16 with unsigned type Short. **/
    scmpl_us = 757      ,/** compare int_16 less than unsigned type Short. **/
    sucmpl_us = 758     ,/** compare unsigned uint_16 less than unsigned type Short. **/
    scmpg_us = 759      ,/** compare int_16 greater than unsigned type Short. **/
    sucmpg_us = 760     ,/** compare unsigned uint_16 greater than unsigned type Short. **/
    scmpe_us = 761      ,/** compare int_16 equal with unsigned type Short. **/
    sucmpe_us = 762     ,/** compare unsigned uint_16 equal with unsigned type Short. **/
    scmple_us = 763     ,/** compare int_16 less than or equal to unsigned type Short. **/
    sucmple_us = 764    ,/** compare unsigned uint_16 less than or equal to unsigned type Short. **/
    scmpge_us = 765     ,/** compare int_16 greater than or equal to unsigned type Short. **/
    sucmpge_us = 766    ,/** compare unsigned uint_16 greater than or equal to unsigned type Short. **/
    scmpne_us = 767     ,/** compare int_16 not equal with unsigned type Short. **/
    sucmpne_us = 768    ,/** compare unsigned uint_16 not equal with unsigned type Short. **/
    smod_i = 769        ,/** modulo int_16 with type Int. **/
    scast_ui = 770      ,/** cast int_16 to unsigned type Int. **/
    sucast_ui = 771     ,/** cast unsigned uint_16 to unsigned type Int. **/
    sadd_ui = 772       ,/** add int_16 with unsigned type Int. **/
    suadd_ui = 773      ,/** add unsigned uint_16 with unsigned type Int. **/
    ssub_ui = 774       ,/** subtract int_16 with unsigned type Int. **/
    susub_ui = 775      ,/** subtract unsigned uint_16 with unsigned type Int. **/
    smul_ui = 776       ,/** multiply int_16 with unsigned type Int. **/
    sumul_ui = 777      ,/** multiply unsigned uint_16 with unsigned type Int. **/
    sdiv_ui = 778       ,/** divide int_16 with unsigned type Int. **/
    sudiv_ui = 779      ,/** divide unsigned uint_16 with unsigned type Int. **/
    scmpl_ui = 780      ,/** compare int_16 less than unsigned type Int. **/
    sucmpl_ui = 781     ,/** compare unsigned uint_16 less than unsigned type Int. **/
    scmpg_ui = 782      ,/** compare int_16 greater than unsigned type Int. **/
    sucmpg_ui = 783     ,/** compare unsigned uint_16 greater than unsigned type Int. **/
    scmpe_ui = 784      ,/** compare int_16 equal with unsigned type Int. **/
    sucmpe_ui = 785     ,/** compare unsigned uint_16 equal with unsigned type Int. **/
    scmple_ui = 786     ,/** compare int_16 less than or equal to unsigned type Int. **/
    sucmple_ui = 787    ,/** compare unsigned uint_16 less than or equal to unsigned type Int. **/
    scmpge_ui = 788     ,/** compare int_16 greater than or equal to unsigned type Int. **/
    sucmpge_ui = 789    ,/** compare unsigned uint_16 greater than or equal to unsigned type Int. **/
    scmpne_ui = 790     ,/** compare int_16 not equal with unsigned type Int. **/
    sucmpne_ui = 791    ,/** compare unsigned uint_16 not equal with unsigned type Int. **/
    smod_l = 792        ,/** modulo int_16 with type Long. **/
    scast_ul = 793      ,/** cast int_16 to unsigned type Long. **/
    sucast_ul = 794     ,/** cast unsigned uint_16 to unsigned type Long. **/
    sadd_ul = 795       ,/** add int_16 with unsigned type Long. **/
    suadd_ul = 796      ,/** add unsigned uint_16 with unsigned type Long. **/
    ssub_ul = 797       ,/** subtract int_16 with unsigned type Long. **/
    susub_ul = 798      ,/** subtract unsigned uint_16 with unsigned type Long. **/
    smul_ul = 799       ,/** multiply int_16 with unsigned type Long. **/
    sumul_ul = 800      ,/** multiply unsigned uint_16 with unsigned type Long. **/
    sdiv_ul = 801       ,/** divide int_16 with unsigned type Long. **/
    sudiv_ul = 802      ,/** divide unsigned uint_16 with unsigned type Long. **/
    scmpl_ul = 803      ,/** compare int_16 less than unsigned type Long. **/
    sucmpl_ul = 804     ,/** compare unsigned uint_16 less than unsigned type Long. **/
    scmpg_ul = 805      ,/** compare int_16 greater than unsigned type Long. **/
    sucmpg_ul = 806     ,/** compare unsigned uint_16 greater than unsigned type Long. **/
    scmpe_ul = 807      ,/** compare int_16 equal with unsigned type Long. **/
    sucmpe_ul = 808     ,/** compare unsigned uint_16 equal with unsigned type Long. **/
    scmple_ul = 809     ,/** compare int_16 less than or equal to unsigned type Long. **/
    sucmple_ul = 810    ,/** compare unsigned uint_16 less than or equal to unsigned type Long. **/
    scmpge_ul = 811     ,/** compare int_16 greater than or equal to unsigned type Long. **/
    sucmpge_ul = 812    ,/** compare unsigned uint_16 greater than or equal to unsigned type Long. **/
    scmpne_ul = 813     ,/** compare int_16 not equal with unsigned type Long. **/
    sucmpne_ul = 814    ,/** compare unsigned uint_16 not equal with unsigned type Long. **/
    smod_li = 815       ,/** modulo int_16 with type LongInt. **/
    scast_uli = 816     ,/** cast int_16 to unsigned type LongInt. **/
    sucast_uli = 817    ,/** cast unsigned uint_16 to unsigned type LongInt. **/
    sadd_uli = 818      ,/** add int_16 with unsigned type LongInt. **/
    suadd_uli = 819     ,/** add unsigned uint_16 with unsigned type LongInt. **/
    ssub_uli = 820      ,/** subtract int_16 with unsigned type LongInt. **/
    susub_uli = 821     ,/** subtract unsigned uint_16 with unsigned type LongInt. **/
    smul_uli = 822      ,/** multiply int_16 with unsigned type LongInt. **/
    sumul_uli = 823     ,/** multiply unsigned uint_16 with unsigned type LongInt. **/
    sdiv_uli = 824      ,/** divide int_16 with unsigned type LongInt. **/
    sudiv_uli = 825     ,/** divide unsigned uint_16 with unsigned type LongInt. **/
    scmpl_uli = 826     ,/** compare int_16 less than unsigned type LongInt. **/
    sucmpl_uli = 827    ,/** compare unsigned uint_16 less than unsigned type LongInt. **/
    scmpg_uli = 828     ,/** compare int_16 greater than unsigned type LongInt. **/
    sucmpg_uli = 829    ,/** compare unsigned uint_16 greater than unsigned type LongInt. **/
    scmpe_uli = 830     ,/** compare int_16 equal with unsigned type LongInt. **/
    sucmpe_uli = 831    ,/** compare unsigned uint_16 equal with unsigned type LongInt. **/
    scmple_uli = 832    ,/** compare int_16 less than or equal to unsigned type LongInt. **/
    sucmple_uli = 833   ,/** compare unsigned uint_16 less than or equal to unsigned type LongInt. **/
    scmpge_uli = 834    ,/** compare int_16 greater than or equal to unsigned type LongInt. **/
    sucmpge_uli = 835   ,/** compare unsigned uint_16 greater than or equal to unsigned type LongInt. **/
    scmpne_uli = 836    ,/** compare int_16 not equal with unsigned type LongInt. **/
    sucmpne_uli = 837   ,/** compare unsigned uint_16 not equal with unsigned type LongInt. **/
    smod_ll = 838       ,/** modulo int_16 with type LongLong. **/
    scast_ull = 839     ,/** cast int_16 to unsigned type LongLong. **/
    sucast_ull = 840    ,/** cast unsigned uint_16 to unsigned type LongLong. **/
    sadd_ull = 841      ,/** add int_16 with unsigned type LongLong. **/
    suadd_ull = 842     ,/** add unsigned uint_16 with unsigned type LongLong. **/
    ssub_ull = 843      ,/** subtract int_16 with unsigned type LongLong. **/
    susub_ull = 844     ,/** subtract unsigned uint_16 with unsigned type LongLong. **/
    smul_ull = 845      ,/** multiply int_16 with unsigned type LongLong. **/
    sumul_ull = 846     ,/** multiply unsigned uint_16 with unsigned type LongLong. **/
    sdiv_ull = 847      ,/** divide int_16 with unsigned type LongLong. **/
    sudiv_ull = 848     ,/** divide unsigned uint_16 with unsigned type LongLong. **/
    scmpl_ull = 849     ,/** compare int_16 less than unsigned type LongLong. **/
    sucmpl_ull = 850    ,/** compare unsigned uint_16 less than unsigned type LongLong. **/
    scmpg_ull = 851     ,/** compare int_16 greater than unsigned type LongLong. **/
    sucmpg_ull = 852    ,/** compare unsigned uint_16 greater than unsigned type LongLong. **/
    scmpe_ull = 853     ,/** compare int_16 equal with unsigned type LongLong. **/
    sucmpe_ull = 854    ,/** compare unsigned uint_16 equal with unsigned type LongLong. **/
    scmple_ull = 855    ,/** compare int_16 less than or equal to unsigned type LongLong. **/
    sucmple_ull = 856   ,/** compare unsigned uint_16 less than or equal to unsigned type LongLong. **/
    scmpge_ull = 857    ,/** compare int_16 greater than or equal to unsigned type LongLong. **/
    sucmpge_ull = 858   ,/** compare unsigned uint_16 greater than or equal to unsigned type LongLong. **/
    scmpne_ull = 859    ,/** compare int_16 not equal with unsigned type LongLong. **/
    sucmpne_ull = 860   ,/** compare unsigned uint_16 not equal with unsigned type LongLong. **/
    sand_b = 861        ,/** bitwise and int_16 with type Byte. **/
    sor_b = 862         ,/** bitwise or int_16 with type Byte. **/
    sxor_b = 863        ,/** bitwise xor int_16 with type Byte. **/
    sshftr_b = 864      ,/** shift right int_16 with type Byte. **/
    sshftl_b = 865      ,/** shift left xor int_16 with type Byte. **/
    sand_s = 866        ,/** bitwise and int_16 with type Short. **/
    sor_s = 867         ,/** bitwise or int_16 with type Short. **/
    sxor_s = 868        ,/** bitwise xor int_16 with type Short. **/
    sshftr_s = 869      ,/** shift right int_16 with type Short. **/
    sshftl_s = 870      ,/** shift left xor int_16 with type Short. **/
    sand_i = 871        ,/** bitwise and int_16 with type Int. **/
    sor_i = 872         ,/** bitwise or int_16 with type Int. **/
    sxor_i = 873        ,/** bitwise xor int_16 with type Int. **/
    sshftr_i = 874      ,/** shift right int_16 with type Int. **/
    sshftl_i = 875      ,/** shift left xor int_16 with type Int. **/
    sand_l = 876        ,/** bitwise and int_16 with type Long. **/
    sor_l = 877         ,/** bitwise or int_16 with type Long. **/
    sxor_l = 878        ,/** bitwise xor int_16 with type Long. **/
    sshftr_l = 879      ,/** shift right int_16 with type Long. **/
    sshftl_l = 880      ,/** shift left xor int_16 with type Long. **/
    sand_li = 881       ,/** bitwise and int_16 with type LongInt. **/
    sor_li = 882        ,/** bitwise or int_16 with type LongInt. **/
    sxor_li = 883       ,/** bitwise xor int_16 with type LongInt. **/
    sshftr_li = 884     ,/** shift right int_16 with type LongInt. **/
    sshftl_li = 885     ,/** shift left xor int_16 with type LongInt. **/
    sand_ll = 886       ,/** bitwise and int_16 with type LongLong. **/
    sor_ll = 887        ,/** bitwise or int_16 with type LongLong. **/
    sxor_ll = 888       ,/** bitwise xor int_16 with type LongLong. **/
    sshftr_ll = 889     ,/** shift right int_16 with type LongLong. **/
    sshftl_ll = 890     ,/** shift left xor int_16 with type LongLong. **/
    sdup = 891          ,/** duplicate a int_16 on the stack. **/
    sdup2 = 892         ,/** duplicate a int_16 2 times on the stack. **/
    sdup3 = 893         ,/** duplicate a int_16 3 times on the stack. **/
    sdup4 = 894         ,/** duplicate a int_16 4 times on the stack. **/
    sdup5 = 895         ,/** duplicate a int_16 5 times on the stack. **/
    sset = 896          ,/** set a int_16 from stack into a field on base pointer. **/
    sget = 897          ,/** get a int_16 from a field on base pointer to stack. **/
    svset = 898         ,/** set a int_16 from value into a field on base pointer. **/
    ssget = 899         ,/** get a int_16 from a field on base pointer to stack using address from stack. **/
    ssset = 900         ,/** set a int_16 from stack into a field on base pointer using address from stack. **/
    ssetl = 901         ,/** set a int_16 from local variable into a field on base pointer. **/
    sinc_1 = 902        ,/** increment int_16 by 1 on stack. **/
    sinc_2 = 903        ,/** increment int_16 by 2 on stack. **/
    sstinc_1 = 904      ,/** increment int_16 by 1 on stack. **/
    sstinc_2 = 905      ,/** increment int_16 by 2 on stack. **/
    sreturn = 906       ,/** return a int_16 into the main stack. **/
    smainst = 907       ,/** store a int_16 from main stack in a local variable.. **/
    smainst_0 = 908     ,/** store a int_16 from main stack in local variable 0. **/
    smainst_1 = 909     ,/** store a int_16 from main stack in local variable 1. **/
    smainst_2 = 910     ,/** store a int_16 from main stack in local variable 2. **/
    smainst_3 = 911     ,/** store a int_16 from main stack in local variable 3. **/
    sprint = 912        ,/** print a int_16 from stack. **/
    suprint = 913       ,/** print a unsigned uint_16 from stack. **/
    iconst = 914        ,/** push a const int_32 into the stack. **/
    iconst_0 = 915      ,/** push a const int_32 into the stack (value = 0). **/
    iconst_1 = 916      ,/** push a const int_32 into the stack (value = 1). **/
    iconst_2 = 917      ,/** push a const int_32 into the stack (value = 2). **/
    iconst_3 = 918      ,/** push a const int_32 into the stack (value = 3). **/
    iconst_4 = 919      ,/** push a const int_32 into the stack (value = 4). **/
    iconst_5 = 920      ,/** push a const int_32 into the stack (value = 5). **/
    iconst_6 = 921      ,/** push a const int_32 into the stack (value = 6). **/
    iconst_9 = 922      ,/** push a const int_32 into the stack (value = 9). **/
    iconst_10 = 923     ,/** push a const int_32 into the stack (value = 10). **/
    iconst_11 = 924     ,/** push a const int_32 into the stack (value = 11). **/
    iconst_12 = 925     ,/** push a const int_32 into the stack (value = 12). **/
    iload = 926         ,/** load a int_32 into the stack from local variable. **/
    iload_0 = 927       ,/** load a int_32 into the stack from local variable 0. **/
    iload_1 = 928       ,/** load a int_32 into the stack from local variable 1. **/
    iload_2 = 929       ,/** load a int_32 into the stack from local variable 2. **/
    iload_3 = 930       ,/** load a int_32 into the stack from local variable 3. **/
    iload_4 = 931       ,/** load a int_32 into the stack from local variable 4. **/
    istore = 932        ,/** store a int_32 from stack into local variable. **/
    istore_0 = 933      ,/** store a int_32 from stack into local variable 0. **/
    istore_1 = 934      ,/** store a int_32 from stack into local variable 1. **/
    istore_2 = 935      ,/** store a int_32 from stack into local variable 2. **/
    istore_3 = 936      ,/** store a int_32 from stack into local variable 3. **/
    istore_4 = 937      ,/** store a int_32 from stack into local variable 4. **/
    icast_b = 938       ,/** cast int_32 to type Byte. **/
    iucast_b = 939      ,/** cast unsigned uint_32 to type Byte. **/
    iadd_b = 940        ,/** add int_32 with type Byte. **/
    iuadd_b = 941       ,/** add unsigned uint_32 with type Byte. **/
    isub_b = 942        ,/** subtract int_32 with type Byte. **/
    iusub_b = 943       ,/** subtract unsigned uint_32 with type Byte. **/
    imul_b = 944        ,/** multiply int_32 with type Byte. **/
    iumul_b = 945       ,/** multiply unsigned uint_32 with type Byte. **/
    idiv_b = 946        ,/** divide int_32 with type Byte. **/
    iudiv_b = 947       ,/** divide unsigned uint_32 with type Byte. **/
    icmpl_b = 948       ,/** compare int_32 less than type Byte. **/
    iucmpl_b = 949      ,/** compare unsigned uint_32 less than type Byte. **/
    icmpg_b = 950       ,/** compare int_32 greater than type Byte. **/
    iucmpg_b = 951      ,/** compare unsigned uint_32 greater than type Byte. **/
    icmpe_b = 952       ,/** compare int_32 equal with type Byte. **/
    iucmpe_b = 953      ,/** compare unsigned uint_32 equal with type Byte. **/
    icmple_b = 954      ,/** compare int_32 less than or equal to type Byte. **/
    iucmple_b = 955     ,/** compare unsigned uint_32 less than or equal to type Byte. **/
    icmpge_b = 956      ,/** compare int_32 greater than or equal to type Byte. **/
    iucmpge_b = 957     ,/** compare unsigned uint_32 greater than or equal to type Byte. **/
    icmpne_b = 958      ,/** compare int_32 not equal with type Byte. **/
    iucmpne_b = 959     ,/** compare unsigned uint_32 not equal with type Byte. **/
    icast_s = 960       ,/** cast int_32 to type Short. **/
    iucast_s = 961      ,/** cast unsigned uint_32 to type Short. **/
    iadd_s = 962        ,/** add int_32 with type Short. **/
    iuadd_s = 963       ,/** add unsigned uint_32 with type Short. **/
    isub_s = 964        ,/** subtract int_32 with type Short. **/
    iusub_s = 965       ,/** subtract unsigned uint_32 with type Short. **/
    imul_s = 966        ,/** multiply int_32 with type Short. **/
    iumul_s = 967       ,/** multiply unsigned uint_32 with type Short. **/
    idiv_s = 968        ,/** divide int_32 with type Short. **/
    iudiv_s = 969       ,/** divide unsigned uint_32 with type Short. **/
    icmpl_s = 970       ,/** compare int_32 less than type Short. **/
    iucmpl_s = 971      ,/** compare unsigned uint_32 less than type Short. **/
    icmpg_s = 972       ,/** compare int_32 greater than type Short. **/
    iucmpg_s = 973      ,/** compare unsigned uint_32 greater than type Short. **/
    icmpe_s = 974       ,/** compare int_32 equal with type Short. **/
    iucmpe_s = 975      ,/** compare unsigned uint_32 equal with type Short. **/
    icmple_s = 976      ,/** compare int_32 less than or equal to type Short. **/
    iucmple_s = 977     ,/** compare unsigned uint_32 less than or equal to type Short. **/
    icmpge_s = 978      ,/** compare int_32 greater than or equal to type Short. **/
    iucmpge_s = 979     ,/** compare unsigned uint_32 greater than or equal to type Short. **/
    icmpne_s = 980      ,/** compare int_32 not equal with type Short. **/
    iucmpne_s = 981     ,/** compare unsigned uint_32 not equal with type Short. **/
    icast_i = 982       ,/** cast int_32 to type Int. **/
    iucast_i = 983      ,/** cast unsigned uint_32 to type Int. **/
    iadd_i = 984        ,/** add int_32 with type Int. **/
    iuadd_i = 985       ,/** add unsigned uint_32 with type Int. **/
    isub_i = 986        ,/** subtract int_32 with type Int. **/
    iusub_i = 987       ,/** subtract unsigned uint_32 with type Int. **/
    imul_i = 988        ,/** multiply int_32 with type Int. **/
    iumul_i = 989       ,/** multiply unsigned uint_32 with type Int. **/
    idiv_i = 990        ,/** divide int_32 with type Int. **/
    iudiv_i = 991       ,/** divide unsigned uint_32 with type Int. **/
    icmpl_i = 992       ,/** compare int_32 less than type Int. **/
    iucmpl_i = 993      ,/** compare unsigned uint_32 less than type Int. **/
    icmpg_i = 994       ,/** compare int_32 greater than type Int. **/
    iucmpg_i = 995      ,/** compare unsigned uint_32 greater than type Int. **/
    icmpe_i = 996       ,/** compare int_32 equal with type Int. **/
    iucmpe_i = 997      ,/** compare unsigned uint_32 equal with type Int. **/
    icmple_i = 998      ,/** compare int_32 less than or equal to type Int. **/
    iucmple_i = 999     ,/** compare unsigned uint_32 less than or equal to type Int. **/
    icmpge_i = 1000     ,/** compare int_32 greater than or equal to type Int. **/
    iucmpge_i = 1001    ,/** compare unsigned uint_32 greater than or equal to type Int. **/
    icmpne_i = 1002     ,/** compare int_32 not equal with type Int. **/
    iucmpne_i = 1003    ,/** compare unsigned uint_32 not equal with type Int. **/
    icast_l = 1004      ,/** cast int_32 to type Long. **/
    iucast_l = 1005     ,/** cast unsigned uint_32 to type Long. **/
    iadd_l = 1006       ,/** add int_32 with type Long. **/
    iuadd_l = 1007      ,/** add unsigned uint_32 with type Long. **/
    isub_l = 1008       ,/** subtract int_32 with type Long. **/
    iusub_l = 1009      ,/** subtract unsigned uint_32 with type Long. **/
    imul_l = 1010       ,/** multiply int_32 with type Long. **/
    iumul_l = 1011      ,/** multiply unsigned uint_32 with type Long. **/
    idiv_l = 1012       ,/** divide int_32 with type Long. **/
    iudiv_l = 1013      ,/** divide unsigned uint_32 with type Long. **/
    icmpl_l = 1014      ,/** compare int_32 less than type Long. **/
    iucmpl_l = 1015     ,/** compare unsigned uint_32 less than type Long. **/
    icmpg_l = 1016      ,/** compare int_32 greater than type Long. **/
    iucmpg_l = 1017     ,/** compare unsigned uint_32 greater than type Long. **/
    icmpe_l = 1018      ,/** compare int_32 equal with type Long. **/
    iucmpe_l = 1019     ,/** compare unsigned uint_32 equal with type Long. **/
    icmple_l = 1020     ,/** compare int_32 less than or equal to type Long. **/
    iucmple_l = 1021    ,/** compare unsigned uint_32 less than or equal to type Long. **/
    icmpge_l = 1022     ,/** compare int_32 greater than or equal to type Long. **/
    iucmpge_l = 1023    ,/** compare unsigned uint_32 greater than or equal to type Long. **/
    icmpne_l = 1024     ,/** compare int_32 not equal with type Long. **/
    iucmpne_l = 1025    ,/** compare unsigned uint_32 not equal with type Long. **/
    icast_li = 1026     ,/** cast int_32 to type LongInt. **/
    iucast_li = 1027    ,/** cast unsigned uint_32 to type LongInt. **/
    iadd_li = 1028      ,/** add int_32 with type LongInt. **/
    iuadd_li = 1029     ,/** add unsigned uint_32 with type LongInt. **/
    isub_li = 1030      ,/** subtract int_32 with type LongInt. **/
    iusub_li = 1031     ,/** subtract unsigned uint_32 with type LongInt. **/
    imul_li = 1032      ,/** multiply int_32 with type LongInt. **/
    iumul_li = 1033     ,/** multiply unsigned uint_32 with type LongInt. **/
    idiv_li = 1034      ,/** divide int_32 with type LongInt. **/
    iudiv_li = 1035     ,/** divide unsigned uint_32 with type LongInt. **/
    icmpl_li = 1036     ,/** compare int_32 less than type LongInt. **/
    iucmpl_li = 1037    ,/** compare unsigned uint_32 less than type LongInt. **/
    icmpg_li = 1038     ,/** compare int_32 greater than type LongInt. **/
    iucmpg_li = 1039    ,/** compare unsigned uint_32 greater than type LongInt. **/
    icmpe_li = 1040     ,/** compare int_32 equal with type LongInt. **/
    iucmpe_li = 1041    ,/** compare unsigned uint_32 equal with type LongInt. **/
    icmple_li = 1042    ,/** compare int_32 less than or equal to type LongInt. **/
    iucmple_li = 1043   ,/** compare unsigned uint_32 less than or equal to type LongInt. **/
    icmpge_li = 1044    ,/** compare int_32 greater than or equal to type LongInt. **/
    iucmpge_li = 1045   ,/** compare unsigned uint_32 greater than or equal to type LongInt. **/
    icmpne_li = 1046    ,/** compare int_32 not equal with type LongInt. **/
    iucmpne_li = 1047   ,/** compare unsigned uint_32 not equal with type LongInt. **/
    icast_ll = 1048     ,/** cast int_32 to type LongLong. **/
    iucast_ll = 1049    ,/** cast unsigned uint_32 to type LongLong. **/
    iadd_ll = 1050      ,/** add int_32 with type LongLong. **/
    iuadd_ll = 1051     ,/** add unsigned uint_32 with type LongLong. **/
    isub_ll = 1052      ,/** subtract int_32 with type LongLong. **/
    iusub_ll = 1053     ,/** subtract unsigned uint_32 with type LongLong. **/
    imul_ll = 1054      ,/** multiply int_32 with type LongLong. **/
    iumul_ll = 1055     ,/** multiply unsigned uint_32 with type LongLong. **/
    idiv_ll = 1056      ,/** divide int_32 with type LongLong. **/
    iudiv_ll = 1057     ,/** divide unsigned uint_32 with type LongLong. **/
    icmpl_ll = 1058     ,/** compare int_32 less than type LongLong. **/
    iucmpl_ll = 1059    ,/** compare unsigned uint_32 less than type LongLong. **/
    icmpg_ll = 1060     ,/** compare int_32 greater than type LongLong. **/
    iucmpg_ll = 1061    ,/** compare unsigned uint_32 greater than type LongLong. **/
    icmpe_ll = 1062     ,/** compare int_32 equal with type LongLong. **/
    iucmpe_ll = 1063    ,/** compare unsigned uint_32 equal with type LongLong. **/
    icmple_ll = 1064    ,/** compare int_32 less than or equal to type LongLong. **/
    iucmple_ll = 1065   ,/** compare unsigned uint_32 less than or equal to type LongLong. **/
    icmpge_ll = 1066    ,/** compare int_32 greater than or equal to type LongLong. **/
    iucmpge_ll = 1067   ,/** compare unsigned uint_32 greater than or equal to type LongLong. **/
    icmpne_ll = 1068    ,/** compare int_32 not equal with type LongLong. **/
    iucmpne_ll = 1069   ,/** compare unsigned uint_32 not equal with type LongLong. **/
    icast_f = 1070      ,/** cast int_32 to type Float. **/
    iucast_f = 1071     ,/** cast unsigned uint_32 to type Float. **/
    iadd_f = 1072       ,/** add int_32 with type Float. **/
    iuadd_f = 1073      ,/** add unsigned uint_32 with type Float. **/
    isub_f = 1074       ,/** subtract int_32 with type Float. **/
    iusub_f = 1075      ,/** subtract unsigned uint_32 with type Float. **/
    imul_f = 1076       ,/** multiply int_32 with type Float. **/
    iumul_f = 1077      ,/** multiply unsigned uint_32 with type Float. **/
    idiv_f = 1078       ,/** divide int_32 with type Float. **/
    iudiv_f = 1079      ,/** divide unsigned uint_32 with type Float. **/
    icmpl_f = 1080      ,/** compare int_32 less than type Float. **/
    iucmpl_f = 1081     ,/** compare unsigned uint_32 less than type Float. **/
    icmpg_f = 1082      ,/** compare int_32 greater than type Float. **/
    iucmpg_f = 1083     ,/** compare unsigned uint_32 greater than type Float. **/
    icmpe_f = 1084      ,/** compare int_32 equal with type Float. **/
    iucmpe_f = 1085     ,/** compare unsigned uint_32 equal with type Float. **/
    icmple_f = 1086     ,/** compare int_32 less than or equal to type Float. **/
    iucmple_f = 1087    ,/** compare unsigned uint_32 less than or equal to type Float. **/
    icmpge_f = 1088     ,/** compare int_32 greater than or equal to type Float. **/
    iucmpge_f = 1089    ,/** compare unsigned uint_32 greater than or equal to type Float. **/
    icmpne_f = 1090     ,/** compare int_32 not equal with type Float. **/
    iucmpne_f = 1091    ,/** compare unsigned uint_32 not equal with type Float. **/
    icast_d = 1092      ,/** cast int_32 to type Double. **/
    iucast_d = 1093     ,/** cast unsigned uint_32 to type Double. **/
    iadd_d = 1094       ,/** add int_32 with type Double. **/
    iuadd_d = 1095      ,/** add unsigned uint_32 with type Double. **/
    isub_d = 1096       ,/** subtract int_32 with type Double. **/
    iusub_d = 1097      ,/** subtract unsigned uint_32 with type Double. **/
    imul_d = 1098       ,/** multiply int_32 with type Double. **/
    iumul_d = 1099      ,/** multiply unsigned uint_32 with type Double. **/
    idiv_d = 1100       ,/** divide int_32 with type Double. **/
    iudiv_d = 1101      ,/** divide unsigned uint_32 with type Double. **/
    icmpl_d = 1102      ,/** compare int_32 less than type Double. **/
    iucmpl_d = 1103     ,/** compare unsigned uint_32 less than type Double. **/
    icmpg_d = 1104      ,/** compare int_32 greater than type Double. **/
    iucmpg_d = 1105     ,/** compare unsigned uint_32 greater than type Double. **/
    icmpe_d = 1106      ,/** compare int_32 equal with type Double. **/
    iucmpe_d = 1107     ,/** compare unsigned uint_32 equal with type Double. **/
    icmple_d = 1108     ,/** compare int_32 less than or equal to type Double. **/
    iucmple_d = 1109    ,/** compare unsigned uint_32 less than or equal to type Double. **/
    icmpge_d = 1110     ,/** compare int_32 greater than or equal to type Double. **/
    iucmpge_d = 1111    ,/** compare unsigned uint_32 greater than or equal to type Double. **/
    icmpne_d = 1112     ,/** compare int_32 not equal with type Double. **/
    iucmpne_d = 1113    ,/** compare unsigned uint_32 not equal with type Double. **/
    icast_df = 1114     ,/** cast int_32 to type DoubleFloat. **/
    iucast_df = 1115    ,/** cast unsigned uint_32 to type DoubleFloat. **/
    iadd_df = 1116      ,/** add int_32 with type DoubleFloat. **/
    iuadd_df = 1117     ,/** add unsigned uint_32 with type DoubleFloat. **/
    isub_df = 1118      ,/** subtract int_32 with type DoubleFloat. **/
    iusub_df = 1119     ,/** subtract unsigned uint_32 with type DoubleFloat. **/
    imul_df = 1120      ,/** multiply int_32 with type DoubleFloat. **/
    iumul_df = 1121     ,/** multiply unsigned uint_32 with type DoubleFloat. **/
    idiv_df = 1122      ,/** divide int_32 with type DoubleFloat. **/
    iudiv_df = 1123     ,/** divide unsigned uint_32 with type DoubleFloat. **/
    icmpl_df = 1124     ,/** compare int_32 less than type DoubleFloat. **/
    iucmpl_df = 1125    ,/** compare unsigned uint_32 less than type DoubleFloat. **/
    icmpg_df = 1126     ,/** compare int_32 greater than type DoubleFloat. **/
    iucmpg_df = 1127    ,/** compare unsigned uint_32 greater than type DoubleFloat. **/
    icmpe_df = 1128     ,/** compare int_32 equal with type DoubleFloat. **/
    iucmpe_df = 1129    ,/** compare unsigned uint_32 equal with type DoubleFloat. **/
    icmple_df = 1130    ,/** compare int_32 less than or equal to type DoubleFloat. **/
    iucmple_df = 1131   ,/** compare unsigned uint_32 less than or equal to type DoubleFloat. **/
    icmpge_df = 1132    ,/** compare int_32 greater than or equal to type DoubleFloat. **/
    iucmpge_df = 1133   ,/** compare unsigned uint_32 greater than or equal to type DoubleFloat. **/
    icmpne_df = 1134    ,/** compare int_32 not equal with type DoubleFloat. **/
    iucmpne_df = 1135   ,/** compare unsigned uint_32 not equal with type DoubleFloat. **/
    icast_dd = 1136     ,/** cast int_32 to type DoubleDouble. **/
    iucast_dd = 1137    ,/** cast unsigned uint_32 to type DoubleDouble. **/
    iadd_dd = 1138      ,/** add int_32 with type DoubleDouble. **/
    iuadd_dd = 1139     ,/** add unsigned uint_32 with type DoubleDouble. **/
    isub_dd = 1140      ,/** subtract int_32 with type DoubleDouble. **/
    iusub_dd = 1141     ,/** subtract unsigned uint_32 with type DoubleDouble. **/
    imul_dd = 1142      ,/** multiply int_32 with type DoubleDouble. **/
    iumul_dd = 1143     ,/** multiply unsigned uint_32 with type DoubleDouble. **/
    idiv_dd = 1144      ,/** divide int_32 with type DoubleDouble. **/
    iudiv_dd = 1145     ,/** divide unsigned uint_32 with type DoubleDouble. **/
    icmpl_dd = 1146     ,/** compare int_32 less than type DoubleDouble. **/
    iucmpl_dd = 1147    ,/** compare unsigned uint_32 less than type DoubleDouble. **/
    icmpg_dd = 1148     ,/** compare int_32 greater than type DoubleDouble. **/
    iucmpg_dd = 1149    ,/** compare unsigned uint_32 greater than type DoubleDouble. **/
    icmpe_dd = 1150     ,/** compare int_32 equal with type DoubleDouble. **/
    iucmpe_dd = 1151    ,/** compare unsigned uint_32 equal with type DoubleDouble. **/
    icmple_dd = 1152    ,/** compare int_32 less than or equal to type DoubleDouble. **/
    iucmple_dd = 1153   ,/** compare unsigned uint_32 less than or equal to type DoubleDouble. **/
    icmpge_dd = 1154    ,/** compare int_32 greater than or equal to type DoubleDouble. **/
    iucmpge_dd = 1155   ,/** compare unsigned uint_32 greater than or equal to type DoubleDouble. **/
    icmpne_dd = 1156    ,/** compare int_32 not equal with type DoubleDouble. **/
    iucmpne_dd = 1157   ,/** compare unsigned uint_32 not equal with type DoubleDouble. **/
    imod_b = 1158       ,/** modulo int_32 with type Byte. **/
    icast_ub = 1159     ,/** cast int_32 to unsigned type Byte. **/
    iucast_ub = 1160    ,/** cast unsigned uint_32 to unsigned type Byte. **/
    iadd_ub = 1161      ,/** add int_32 with unsigned type Byte. **/
    iuadd_ub = 1162     ,/** add unsigned uint_32 with unsigned type Byte. **/
    isub_ub = 1163      ,/** subtract int_32 with unsigned type Byte. **/
    iusub_ub = 1164     ,/** subtract unsigned uint_32 with unsigned type Byte. **/
    imul_ub = 1165      ,/** multiply int_32 with unsigned type Byte. **/
    iumul_ub = 1166     ,/** multiply unsigned uint_32 with unsigned type Byte. **/
    idiv_ub = 1167      ,/** divide int_32 with unsigned type Byte. **/
    iudiv_ub = 1168     ,/** divide unsigned uint_32 with unsigned type Byte. **/
    icmpl_ub = 1169     ,/** compare int_32 less than unsigned type Byte. **/
    iucmpl_ub = 1170    ,/** compare unsigned uint_32 less than unsigned type Byte. **/
    icmpg_ub = 1171     ,/** compare int_32 greater than unsigned type Byte. **/
    iucmpg_ub = 1172    ,/** compare unsigned uint_32 greater than unsigned type Byte. **/
    icmpe_ub = 1173     ,/** compare int_32 equal with unsigned type Byte. **/
    iucmpe_ub = 1174    ,/** compare unsigned uint_32 equal with unsigned type Byte. **/
    icmple_ub = 1175    ,/** compare int_32 less than or equal to unsigned type Byte. **/
    iucmple_ub = 1176   ,/** compare unsigned uint_32 less than or equal to unsigned type Byte. **/
    icmpge_ub = 1177    ,/** compare int_32 greater than or equal to unsigned type Byte. **/
    iucmpge_ub = 1178   ,/** compare unsigned uint_32 greater than or equal to unsigned type Byte. **/
    icmpne_ub = 1179    ,/** compare int_32 not equal with unsigned type Byte. **/
    iucmpne_ub = 1180   ,/** compare unsigned uint_32 not equal with unsigned type Byte. **/
    imod_s = 1181       ,/** modulo int_32 with type Short. **/
    icast_us = 1182     ,/** cast int_32 to unsigned type Short. **/
    iucast_us = 1183    ,/** cast unsigned uint_32 to unsigned type Short. **/
    iadd_us = 1184      ,/** add int_32 with unsigned type Short. **/
    iuadd_us = 1185     ,/** add unsigned uint_32 with unsigned type Short. **/
    isub_us = 1186      ,/** subtract int_32 with unsigned type Short. **/
    iusub_us = 1187     ,/** subtract unsigned uint_32 with unsigned type Short. **/
    imul_us = 1188      ,/** multiply int_32 with unsigned type Short. **/
    iumul_us = 1189     ,/** multiply unsigned uint_32 with unsigned type Short. **/
    idiv_us = 1190      ,/** divide int_32 with unsigned type Short. **/
    iudiv_us = 1191     ,/** divide unsigned uint_32 with unsigned type Short. **/
    icmpl_us = 1192     ,/** compare int_32 less than unsigned type Short. **/
    iucmpl_us = 1193    ,/** compare unsigned uint_32 less than unsigned type Short. **/
    icmpg_us = 1194     ,/** compare int_32 greater than unsigned type Short. **/
    iucmpg_us = 1195    ,/** compare unsigned uint_32 greater than unsigned type Short. **/
    icmpe_us = 1196     ,/** compare int_32 equal with unsigned type Short. **/
    iucmpe_us = 1197    ,/** compare unsigned uint_32 equal with unsigned type Short. **/
    icmple_us = 1198    ,/** compare int_32 less than or equal to unsigned type Short. **/
    iucmple_us = 1199   ,/** compare unsigned uint_32 less than or equal to unsigned type Short. **/
    icmpge_us = 1200    ,/** compare int_32 greater than or equal to unsigned type Short. **/
    iucmpge_us = 1201   ,/** compare unsigned uint_32 greater than or equal to unsigned type Short. **/
    icmpne_us = 1202    ,/** compare int_32 not equal with unsigned type Short. **/
    iucmpne_us = 1203   ,/** compare unsigned uint_32 not equal with unsigned type Short. **/
    imod_i = 1204       ,/** modulo int_32 with type Int. **/
    icast_ui = 1205     ,/** cast int_32 to unsigned type Int. **/
    iucast_ui = 1206    ,/** cast unsigned uint_32 to unsigned type Int. **/
    iadd_ui = 1207      ,/** add int_32 with unsigned type Int. **/
    iuadd_ui = 1208     ,/** add unsigned uint_32 with unsigned type Int. **/
    isub_ui = 1209      ,/** subtract int_32 with unsigned type Int. **/
    iusub_ui = 1210     ,/** subtract unsigned uint_32 with unsigned type Int. **/
    imul_ui = 1211      ,/** multiply int_32 with unsigned type Int. **/
    iumul_ui = 1212     ,/** multiply unsigned uint_32 with unsigned type Int. **/
    idiv_ui = 1213      ,/** divide int_32 with unsigned type Int. **/
    iudiv_ui = 1214     ,/** divide unsigned uint_32 with unsigned type Int. **/
    icmpl_ui = 1215     ,/** compare int_32 less than unsigned type Int. **/
    iucmpl_ui = 1216    ,/** compare unsigned uint_32 less than unsigned type Int. **/
    icmpg_ui = 1217     ,/** compare int_32 greater than unsigned type Int. **/
    iucmpg_ui = 1218    ,/** compare unsigned uint_32 greater than unsigned type Int. **/
    icmpe_ui = 1219     ,/** compare int_32 equal with unsigned type Int. **/
    iucmpe_ui = 1220    ,/** compare unsigned uint_32 equal with unsigned type Int. **/
    icmple_ui = 1221    ,/** compare int_32 less than or equal to unsigned type Int. **/
    iucmple_ui = 1222   ,/** compare unsigned uint_32 less than or equal to unsigned type Int. **/
    icmpge_ui = 1223    ,/** compare int_32 greater than or equal to unsigned type Int. **/
    iucmpge_ui = 1224   ,/** compare unsigned uint_32 greater than or equal to unsigned type Int. **/
    icmpne_ui = 1225    ,/** compare int_32 not equal with unsigned type Int. **/
    iucmpne_ui = 1226   ,/** compare unsigned uint_32 not equal with unsigned type Int. **/
    imod_l = 1227       ,/** modulo int_32 with type Long. **/
    icast_ul = 1228     ,/** cast int_32 to unsigned type Long. **/
    iucast_ul = 1229    ,/** cast unsigned uint_32 to unsigned type Long. **/
    iadd_ul = 1230      ,/** add int_32 with unsigned type Long. **/
    iuadd_ul = 1231     ,/** add unsigned uint_32 with unsigned type Long. **/
    isub_ul = 1232      ,/** subtract int_32 with unsigned type Long. **/
    iusub_ul = 1233     ,/** subtract unsigned uint_32 with unsigned type Long. **/
    imul_ul = 1234      ,/** multiply int_32 with unsigned type Long. **/
    iumul_ul = 1235     ,/** multiply unsigned uint_32 with unsigned type Long. **/
    idiv_ul = 1236      ,/** divide int_32 with unsigned type Long. **/
    iudiv_ul = 1237     ,/** divide unsigned uint_32 with unsigned type Long. **/
    icmpl_ul = 1238     ,/** compare int_32 less than unsigned type Long. **/
    iucmpl_ul = 1239    ,/** compare unsigned uint_32 less than unsigned type Long. **/
    icmpg_ul = 1240     ,/** compare int_32 greater than unsigned type Long. **/
    iucmpg_ul = 1241    ,/** compare unsigned uint_32 greater than unsigned type Long. **/
    icmpe_ul = 1242     ,/** compare int_32 equal with unsigned type Long. **/
    iucmpe_ul = 1243    ,/** compare unsigned uint_32 equal with unsigned type Long. **/
    icmple_ul = 1244    ,/** compare int_32 less than or equal to unsigned type Long. **/
    iucmple_ul = 1245   ,/** compare unsigned uint_32 less than or equal to unsigned type Long. **/
    icmpge_ul = 1246    ,/** compare int_32 greater than or equal to unsigned type Long. **/
    iucmpge_ul = 1247   ,/** compare unsigned uint_32 greater than or equal to unsigned type Long. **/
    icmpne_ul = 1248    ,/** compare int_32 not equal with unsigned type Long. **/
    iucmpne_ul = 1249   ,/** compare unsigned uint_32 not equal with unsigned type Long. **/
    imod_li = 1250      ,/** modulo int_32 with type LongInt. **/
    icast_uli = 1251    ,/** cast int_32 to unsigned type LongInt. **/
    iucast_uli = 1252   ,/** cast unsigned uint_32 to unsigned type LongInt. **/
    iadd_uli = 1253     ,/** add int_32 with unsigned type LongInt. **/
    iuadd_uli = 1254    ,/** add unsigned uint_32 with unsigned type LongInt. **/
    isub_uli = 1255     ,/** subtract int_32 with unsigned type LongInt. **/
    iusub_uli = 1256    ,/** subtract unsigned uint_32 with unsigned type LongInt. **/
    imul_uli = 1257     ,/** multiply int_32 with unsigned type LongInt. **/
    iumul_uli = 1258    ,/** multiply unsigned uint_32 with unsigned type LongInt. **/
    idiv_uli = 1259     ,/** divide int_32 with unsigned type LongInt. **/
    iudiv_uli = 1260    ,/** divide unsigned uint_32 with unsigned type LongInt. **/
    icmpl_uli = 1261    ,/** compare int_32 less than unsigned type LongInt. **/
    iucmpl_uli = 1262   ,/** compare unsigned uint_32 less than unsigned type LongInt. **/
    icmpg_uli = 1263    ,/** compare int_32 greater than unsigned type LongInt. **/
    iucmpg_uli = 1264   ,/** compare unsigned uint_32 greater than unsigned type LongInt. **/
    icmpe_uli = 1265    ,/** compare int_32 equal with unsigned type LongInt. **/
    iucmpe_uli = 1266   ,/** compare unsigned uint_32 equal with unsigned type LongInt. **/
    icmple_uli = 1267   ,/** compare int_32 less than or equal to unsigned type LongInt. **/
    iucmple_uli = 1268  ,/** compare unsigned uint_32 less than or equal to unsigned type LongInt. **/
    icmpge_uli = 1269   ,/** compare int_32 greater than or equal to unsigned type LongInt. **/
    iucmpge_uli = 1270  ,/** compare unsigned uint_32 greater than or equal to unsigned type LongInt. **/
    icmpne_uli = 1271   ,/** compare int_32 not equal with unsigned type LongInt. **/
    iucmpne_uli = 1272  ,/** compare unsigned uint_32 not equal with unsigned type LongInt. **/
    imod_ll = 1273      ,/** modulo int_32 with type LongLong. **/
    icast_ull = 1274    ,/** cast int_32 to unsigned type LongLong. **/
    iucast_ull = 1275   ,/** cast unsigned uint_32 to unsigned type LongLong. **/
    iadd_ull = 1276     ,/** add int_32 with unsigned type LongLong. **/
    iuadd_ull = 1277    ,/** add unsigned uint_32 with unsigned type LongLong. **/
    isub_ull = 1278     ,/** subtract int_32 with unsigned type LongLong. **/
    iusub_ull = 1279    ,/** subtract unsigned uint_32 with unsigned type LongLong. **/
    imul_ull = 1280     ,/** multiply int_32 with unsigned type LongLong. **/
    iumul_ull = 1281    ,/** multiply unsigned uint_32 with unsigned type LongLong. **/
    idiv_ull = 1282     ,/** divide int_32 with unsigned type LongLong. **/
    iudiv_ull = 1283    ,/** divide unsigned uint_32 with unsigned type LongLong. **/
    icmpl_ull = 1284    ,/** compare int_32 less than unsigned type LongLong. **/
    iucmpl_ull = 1285   ,/** compare unsigned uint_32 less than unsigned type LongLong. **/
    icmpg_ull = 1286    ,/** compare int_32 greater than unsigned type LongLong. **/
    iucmpg_ull = 1287   ,/** compare unsigned uint_32 greater than unsigned type LongLong. **/
    icmpe_ull = 1288    ,/** compare int_32 equal with unsigned type LongLong. **/
    iucmpe_ull = 1289   ,/** compare unsigned uint_32 equal with unsigned type LongLong. **/
    icmple_ull = 1290   ,/** compare int_32 less than or equal to unsigned type LongLong. **/
    iucmple_ull = 1291  ,/** compare unsigned uint_32 less than or equal to unsigned type LongLong. **/
    icmpge_ull = 1292   ,/** compare int_32 greater than or equal to unsigned type LongLong. **/
    iucmpge_ull = 1293  ,/** compare unsigned uint_32 greater than or equal to unsigned type LongLong. **/
    icmpne_ull = 1294   ,/** compare int_32 not equal with unsigned type LongLong. **/
    iucmpne_ull = 1295  ,/** compare unsigned uint_32 not equal with unsigned type LongLong. **/
    iand_b = 1296       ,/** bitwise and int_32 with type Byte. **/
    ior_b = 1297        ,/** bitwise or int_32 with type Byte. **/
    ixor_b = 1298       ,/** bitwise xor int_32 with type Byte. **/
    ishftr_b = 1299     ,/** shift right int_32 with type Byte. **/
    ishftl_b = 1300     ,/** shift left xor int_32 with type Byte. **/
    iand_s = 1301       ,/** bitwise and int_32 with type Short. **/
    ior_s = 1302        ,/** bitwise or int_32 with type Short. **/
    ixor_s = 1303       ,/** bitwise xor int_32 with type Short. **/
    ishftr_s = 1304     ,/** shift right int_32 with type Short. **/
    ishftl_s = 1305     ,/** shift left xor int_32 with type Short. **/
    iand_i = 1306       ,/** bitwise and int_32 with type Int. **/
    ior_i = 1307        ,/** bitwise or int_32 with type Int. **/
    ixor_i = 1308       ,/** bitwise xor int_32 with type Int. **/
    ishftr_i = 1309     ,/** shift right int_32 with type Int. **/
    ishftl_i = 1310     ,/** shift left xor int_32 with type Int. **/
    iand_l = 1311       ,/** bitwise and int_32 with type Long. **/
    ior_l = 1312        ,/** bitwise or int_32 with type Long. **/
    ixor_l = 1313       ,/** bitwise xor int_32 with type Long. **/
    ishftr_l = 1314     ,/** shift right int_32 with type Long. **/
    ishftl_l = 1315     ,/** shift left xor int_32 with type Long. **/
    iand_li = 1316      ,/** bitwise and int_32 with type LongInt. **/
    ior_li = 1317       ,/** bitwise or int_32 with type LongInt. **/
    ixor_li = 1318      ,/** bitwise xor int_32 with type LongInt. **/
    ishftr_li = 1319    ,/** shift right int_32 with type LongInt. **/
    ishftl_li = 1320    ,/** shift left xor int_32 with type LongInt. **/
    iand_ll = 1321      ,/** bitwise and int_32 with type LongLong. **/
    ior_ll = 1322       ,/** bitwise or int_32 with type LongLong. **/
    ixor_ll = 1323      ,/** bitwise xor int_32 with type LongLong. **/
    ishftr_ll = 1324    ,/** shift right int_32 with type LongLong. **/
    ishftl_ll = 1325    ,/** shift left xor int_32 with type LongLong. **/
    idup = 1326         ,/** duplicate a int_32 on the stack. **/
    idup2 = 1327        ,/** duplicate a int_32 2 times on the stack. **/
    idup3 = 1328        ,/** duplicate a int_32 3 times on the stack. **/
    idup4 = 1329        ,/** duplicate a int_32 4 times on the stack. **/
    idup5 = 1330        ,/** duplicate a int_32 5 times on the stack. **/
    iset = 1331         ,/** set a int_32 from stack into a field on base pointer. **/
    iget = 1332         ,/** get a int_32 from a field on base pointer to stack. **/
    ivset = 1333        ,/** set a int_32 from value into a field on base pointer. **/
    isget = 1334        ,/** get a int_32 from a field on base pointer to stack using address from stack. **/
    isset = 1335        ,/** set a int_32 from stack into a field on base pointer using address from stack. **/
    isetl = 1336        ,/** set a int_32 from local variable into a field on base pointer. **/
    iinc_1 = 1337       ,/** increment int_32 by 1 on stack. **/
    iinc_2 = 1338       ,/** increment int_32 by 2 on stack. **/
    istinc_1 = 1339     ,/** increment int_32 by 1 on stack. **/
    istinc_2 = 1340     ,/** increment int_32 by 2 on stack. **/
    ireturn = 1341      ,/** return a int_32 into the main stack. **/
    imainst = 1342      ,/** store a int_32 from main stack in a local variable.. **/
    imainst_0 = 1343    ,/** store a int_32 from main stack in local variable 0. **/
    imainst_1 = 1344    ,/** store a int_32 from main stack in local variable 1. **/
    imainst_2 = 1345    ,/** store a int_32 from main stack in local variable 2. **/
    imainst_3 = 1346    ,/** store a int_32 from main stack in local variable 3. **/
    iprint = 1347       ,/** print a int_32 from stack. **/
    iuprint = 1348      ,/** print a unsigned uint_32 from stack. **/
    lconst = 1349       ,/** push a const int_64 into the stack. **/
    lconst_0 = 1350     ,/** push a const int_64 into the stack (value = 0). **/
    lconst_1 = 1351     ,/** push a const int_64 into the stack (value = 1). **/
    lconst_2 = 1352     ,/** push a const int_64 into the stack (value = 2). **/
    lconst_3 = 1353     ,/** push a const int_64 into the stack (value = 3). **/
    lconst_4 = 1354     ,/** push a const int_64 into the stack (value = 4). **/
    lconst_5 = 1355     ,/** push a const int_64 into the stack (value = 5). **/
    lconst_6 = 1356     ,/** push a const int_64 into the stack (value = 6). **/
    lconst_9 = 1357     ,/** push a const int_64 into the stack (value = 9). **/
    lconst_10 = 1358    ,/** push a const int_64 into the stack (value = 10). **/
    lconst_11 = 1359    ,/** push a const int_64 into the stack (value = 11). **/
    lconst_12 = 1360    ,/** push a const int_64 into the stack (value = 12). **/
    lload = 1361        ,/** load a int_64 into the stack from local variable. **/
    lload_0 = 1362      ,/** load a int_64 into the stack from local variable 0. **/
    lload_1 = 1363      ,/** load a int_64 into the stack from local variable 1. **/
    lload_2 = 1364      ,/** load a int_64 into the stack from local variable 2. **/
    lload_3 = 1365      ,/** load a int_64 into the stack from local variable 3. **/
    lload_4 = 1366      ,/** load a int_64 into the stack from local variable 4. **/
    lstore = 1367       ,/** store a int_64 from stack into local variable. **/
    lstore_0 = 1368     ,/** store a int_64 from stack into local variable 0. **/
    lstore_1 = 1369     ,/** store a int_64 from stack into local variable 1. **/
    lstore_2 = 1370     ,/** store a int_64 from stack into local variable 2. **/
    lstore_3 = 1371     ,/** store a int_64 from stack into local variable 3. **/
    lstore_4 = 1372     ,/** store a int_64 from stack into local variable 4. **/
    lcast_b = 1373      ,/** cast int_64 to type Byte. **/
    lucast_b = 1374     ,/** cast unsigned uint_64 to type Byte. **/
    ladd_b = 1375       ,/** add int_64 with type Byte. **/
    luadd_b = 1376      ,/** add unsigned uint_64 with type Byte. **/
    lsub_b = 1377       ,/** subtract int_64 with type Byte. **/
    lusub_b = 1378      ,/** subtract unsigned uint_64 with type Byte. **/
    lmul_b = 1379       ,/** multiply int_64 with type Byte. **/
    lumul_b = 1380      ,/** multiply unsigned uint_64 with type Byte. **/
    ldiv_b = 1381       ,/** divide int_64 with type Byte. **/
    ludiv_b = 1382      ,/** divide unsigned uint_64 with type Byte. **/
    lcmpl_b = 1383      ,/** compare int_64 less than type Byte. **/
    lucmpl_b = 1384     ,/** compare unsigned uint_64 less than type Byte. **/
    lcmpg_b = 1385      ,/** compare int_64 greater than type Byte. **/
    lucmpg_b = 1386     ,/** compare unsigned uint_64 greater than type Byte. **/
    lcmpe_b = 1387      ,/** compare int_64 equal with type Byte. **/
    lucmpe_b = 1388     ,/** compare unsigned uint_64 equal with type Byte. **/
    lcmple_b = 1389     ,/** compare int_64 less than or equal to type Byte. **/
    lucmple_b = 1390    ,/** compare unsigned uint_64 less than or equal to type Byte. **/
    lcmpge_b = 1391     ,/** compare int_64 greater than or equal to type Byte. **/
    lucmpge_b = 1392    ,/** compare unsigned uint_64 greater than or equal to type Byte. **/
    lcmpne_b = 1393     ,/** compare int_64 not equal with type Byte. **/
    lucmpne_b = 1394    ,/** compare unsigned uint_64 not equal with type Byte. **/
    lcast_s = 1395      ,/** cast int_64 to type Short. **/
    lucast_s = 1396     ,/** cast unsigned uint_64 to type Short. **/
    ladd_s = 1397       ,/** add int_64 with type Short. **/
    luadd_s = 1398      ,/** add unsigned uint_64 with type Short. **/
    lsub_s = 1399       ,/** subtract int_64 with type Short. **/
    lusub_s = 1400      ,/** subtract unsigned uint_64 with type Short. **/
    lmul_s = 1401       ,/** multiply int_64 with type Short. **/
    lumul_s = 1402      ,/** multiply unsigned uint_64 with type Short. **/
    ldiv_s = 1403       ,/** divide int_64 with type Short. **/
    ludiv_s = 1404      ,/** divide unsigned uint_64 with type Short. **/
    lcmpl_s = 1405      ,/** compare int_64 less than type Short. **/
    lucmpl_s = 1406     ,/** compare unsigned uint_64 less than type Short. **/
    lcmpg_s = 1407      ,/** compare int_64 greater than type Short. **/
    lucmpg_s = 1408     ,/** compare unsigned uint_64 greater than type Short. **/
    lcmpe_s = 1409      ,/** compare int_64 equal with type Short. **/
    lucmpe_s = 1410     ,/** compare unsigned uint_64 equal with type Short. **/
    lcmple_s = 1411     ,/** compare int_64 less than or equal to type Short. **/
    lucmple_s = 1412    ,/** compare unsigned uint_64 less than or equal to type Short. **/
    lcmpge_s = 1413     ,/** compare int_64 greater than or equal to type Short. **/
    lucmpge_s = 1414    ,/** compare unsigned uint_64 greater than or equal to type Short. **/
    lcmpne_s = 1415     ,/** compare int_64 not equal with type Short. **/
    lucmpne_s = 1416    ,/** compare unsigned uint_64 not equal with type Short. **/
    lcast_i = 1417      ,/** cast int_64 to type Int. **/
    lucast_i = 1418     ,/** cast unsigned uint_64 to type Int. **/
    ladd_i = 1419       ,/** add int_64 with type Int. **/
    luadd_i = 1420      ,/** add unsigned uint_64 with type Int. **/
    lsub_i = 1421       ,/** subtract int_64 with type Int. **/
    lusub_i = 1422      ,/** subtract unsigned uint_64 with type Int. **/
    lmul_i = 1423       ,/** multiply int_64 with type Int. **/
    lumul_i = 1424      ,/** multiply unsigned uint_64 with type Int. **/
    ldiv_i = 1425       ,/** divide int_64 with type Int. **/
    ludiv_i = 1426      ,/** divide unsigned uint_64 with type Int. **/
    lcmpl_i = 1427      ,/** compare int_64 less than type Int. **/
    lucmpl_i = 1428     ,/** compare unsigned uint_64 less than type Int. **/
    lcmpg_i = 1429      ,/** compare int_64 greater than type Int. **/
    lucmpg_i = 1430     ,/** compare unsigned uint_64 greater than type Int. **/
    lcmpe_i = 1431      ,/** compare int_64 equal with type Int. **/
    lucmpe_i = 1432     ,/** compare unsigned uint_64 equal with type Int. **/
    lcmple_i = 1433     ,/** compare int_64 less than or equal to type Int. **/
    lucmple_i = 1434    ,/** compare unsigned uint_64 less than or equal to type Int. **/
    lcmpge_i = 1435     ,/** compare int_64 greater than or equal to type Int. **/
    lucmpge_i = 1436    ,/** compare unsigned uint_64 greater than or equal to type Int. **/
    lcmpne_i = 1437     ,/** compare int_64 not equal with type Int. **/
    lucmpne_i = 1438    ,/** compare unsigned uint_64 not equal with type Int. **/
    lcast_l = 1439      ,/** cast int_64 to type Long. **/
    lucast_l = 1440     ,/** cast unsigned uint_64 to type Long. **/
    ladd_l = 1441       ,/** add int_64 with type Long. **/
    luadd_l = 1442      ,/** add unsigned uint_64 with type Long. **/
    lsub_l = 1443       ,/** subtract int_64 with type Long. **/
    lusub_l = 1444      ,/** subtract unsigned uint_64 with type Long. **/
    lmul_l = 1445       ,/** multiply int_64 with type Long. **/
    lumul_l = 1446      ,/** multiply unsigned uint_64 with type Long. **/
    ldiv_l = 1447       ,/** divide int_64 with type Long. **/
    ludiv_l = 1448      ,/** divide unsigned uint_64 with type Long. **/
    lcmpl_l = 1449      ,/** compare int_64 less than type Long. **/
    lucmpl_l = 1450     ,/** compare unsigned uint_64 less than type Long. **/
    lcmpg_l = 1451      ,/** compare int_64 greater than type Long. **/
    lucmpg_l = 1452     ,/** compare unsigned uint_64 greater than type Long. **/
    lcmpe_l = 1453      ,/** compare int_64 equal with type Long. **/
    lucmpe_l = 1454     ,/** compare unsigned uint_64 equal with type Long. **/
    lcmple_l = 1455     ,/** compare int_64 less than or equal to type Long. **/
    lucmple_l = 1456    ,/** compare unsigned uint_64 less than or equal to type Long. **/
    lcmpge_l = 1457     ,/** compare int_64 greater than or equal to type Long. **/
    lucmpge_l = 1458    ,/** compare unsigned uint_64 greater than or equal to type Long. **/
    lcmpne_l = 1459     ,/** compare int_64 not equal with type Long. **/
    lucmpne_l = 1460    ,/** compare unsigned uint_64 not equal with type Long. **/
    lcast_li = 1461     ,/** cast int_64 to type LongInt. **/
    lucast_li = 1462    ,/** cast unsigned uint_64 to type LongInt. **/
    ladd_li = 1463      ,/** add int_64 with type LongInt. **/
    luadd_li = 1464     ,/** add unsigned uint_64 with type LongInt. **/
    lsub_li = 1465      ,/** subtract int_64 with type LongInt. **/
    lusub_li = 1466     ,/** subtract unsigned uint_64 with type LongInt. **/
    lmul_li = 1467      ,/** multiply int_64 with type LongInt. **/
    lumul_li = 1468     ,/** multiply unsigned uint_64 with type LongInt. **/
    ldiv_li = 1469      ,/** divide int_64 with type LongInt. **/
    ludiv_li = 1470     ,/** divide unsigned uint_64 with type LongInt. **/
    lcmpl_li = 1471     ,/** compare int_64 less than type LongInt. **/
    lucmpl_li = 1472    ,/** compare unsigned uint_64 less than type LongInt. **/
    lcmpg_li = 1473     ,/** compare int_64 greater than type LongInt. **/
    lucmpg_li = 1474    ,/** compare unsigned uint_64 greater than type LongInt. **/
    lcmpe_li = 1475     ,/** compare int_64 equal with type LongInt. **/
    lucmpe_li = 1476    ,/** compare unsigned uint_64 equal with type LongInt. **/
    lcmple_li = 1477    ,/** compare int_64 less than or equal to type LongInt. **/
    lucmple_li = 1478   ,/** compare unsigned uint_64 less than or equal to type LongInt. **/
    lcmpge_li = 1479    ,/** compare int_64 greater than or equal to type LongInt. **/
    lucmpge_li = 1480   ,/** compare unsigned uint_64 greater than or equal to type LongInt. **/
    lcmpne_li = 1481    ,/** compare int_64 not equal with type LongInt. **/
    lucmpne_li = 1482   ,/** compare unsigned uint_64 not equal with type LongInt. **/
    lcast_ll = 1483     ,/** cast int_64 to type LongLong. **/
    lucast_ll = 1484    ,/** cast unsigned uint_64 to type LongLong. **/
    ladd_ll = 1485      ,/** add int_64 with type LongLong. **/
    luadd_ll = 1486     ,/** add unsigned uint_64 with type LongLong. **/
    lsub_ll = 1487      ,/** subtract int_64 with type LongLong. **/
    lusub_ll = 1488     ,/** subtract unsigned uint_64 with type LongLong. **/
    lmul_ll = 1489      ,/** multiply int_64 with type LongLong. **/
    lumul_ll = 1490     ,/** multiply unsigned uint_64 with type LongLong. **/
    ldiv_ll = 1491      ,/** divide int_64 with type LongLong. **/
    ludiv_ll = 1492     ,/** divide unsigned uint_64 with type LongLong. **/
    lcmpl_ll = 1493     ,/** compare int_64 less than type LongLong. **/
    lucmpl_ll = 1494    ,/** compare unsigned uint_64 less than type LongLong. **/
    lcmpg_ll = 1495     ,/** compare int_64 greater than type LongLong. **/
    lucmpg_ll = 1496    ,/** compare unsigned uint_64 greater than type LongLong. **/
    lcmpe_ll = 1497     ,/** compare int_64 equal with type LongLong. **/
    lucmpe_ll = 1498    ,/** compare unsigned uint_64 equal with type LongLong. **/
    lcmple_ll = 1499    ,/** compare int_64 less than or equal to type LongLong. **/
    lucmple_ll = 1500   ,/** compare unsigned uint_64 less than or equal to type LongLong. **/
    lcmpge_ll = 1501    ,/** compare int_64 greater than or equal to type LongLong. **/
    lucmpge_ll = 1502   ,/** compare unsigned uint_64 greater than or equal to type LongLong. **/
    lcmpne_ll = 1503    ,/** compare int_64 not equal with type LongLong. **/
    lucmpne_ll = 1504   ,/** compare unsigned uint_64 not equal with type LongLong. **/
    lcast_f = 1505      ,/** cast int_64 to type Float. **/
    lucast_f = 1506     ,/** cast unsigned uint_64 to type Float. **/
    ladd_f = 1507       ,/** add int_64 with type Float. **/
    luadd_f = 1508      ,/** add unsigned uint_64 with type Float. **/
    lsub_f = 1509       ,/** subtract int_64 with type Float. **/
    lusub_f = 1510      ,/** subtract unsigned uint_64 with type Float. **/
    lmul_f = 1511       ,/** multiply int_64 with type Float. **/
    lumul_f = 1512      ,/** multiply unsigned uint_64 with type Float. **/
    ldiv_f = 1513       ,/** divide int_64 with type Float. **/
    ludiv_f = 1514      ,/** divide unsigned uint_64 with type Float. **/
    lcmpl_f = 1515      ,/** compare int_64 less than type Float. **/
    lucmpl_f = 1516     ,/** compare unsigned uint_64 less than type Float. **/
    lcmpg_f = 1517      ,/** compare int_64 greater than type Float. **/
    lucmpg_f = 1518     ,/** compare unsigned uint_64 greater than type Float. **/
    lcmpe_f = 1519      ,/** compare int_64 equal with type Float. **/
    lucmpe_f = 1520     ,/** compare unsigned uint_64 equal with type Float. **/
    lcmple_f = 1521     ,/** compare int_64 less than or equal to type Float. **/
    lucmple_f = 1522    ,/** compare unsigned uint_64 less than or equal to type Float. **/
    lcmpge_f = 1523     ,/** compare int_64 greater than or equal to type Float. **/
    lucmpge_f = 1524    ,/** compare unsigned uint_64 greater than or equal to type Float. **/
    lcmpne_f = 1525     ,/** compare int_64 not equal with type Float. **/
    lucmpne_f = 1526    ,/** compare unsigned uint_64 not equal with type Float. **/
    lcast_d = 1527      ,/** cast int_64 to type Double. **/
    lucast_d = 1528     ,/** cast unsigned uint_64 to type Double. **/
    ladd_d = 1529       ,/** add int_64 with type Double. **/
    luadd_d = 1530      ,/** add unsigned uint_64 with type Double. **/
    lsub_d = 1531       ,/** subtract int_64 with type Double. **/
    lusub_d = 1532      ,/** subtract unsigned uint_64 with type Double. **/
    lmul_d = 1533       ,/** multiply int_64 with type Double. **/
    lumul_d = 1534      ,/** multiply unsigned uint_64 with type Double. **/
    ldiv_d = 1535       ,/** divide int_64 with type Double. **/
    ludiv_d = 1536      ,/** divide unsigned uint_64 with type Double. **/
    lcmpl_d = 1537      ,/** compare int_64 less than type Double. **/
    lucmpl_d = 1538     ,/** compare unsigned uint_64 less than type Double. **/
    lcmpg_d = 1539      ,/** compare int_64 greater than type Double. **/
    lucmpg_d = 1540     ,/** compare unsigned uint_64 greater than type Double. **/
    lcmpe_d = 1541      ,/** compare int_64 equal with type Double. **/
    lucmpe_d = 1542     ,/** compare unsigned uint_64 equal with type Double. **/
    lcmple_d = 1543     ,/** compare int_64 less than or equal to type Double. **/
    lucmple_d = 1544    ,/** compare unsigned uint_64 less than or equal to type Double. **/
    lcmpge_d = 1545     ,/** compare int_64 greater than or equal to type Double. **/
    lucmpge_d = 1546    ,/** compare unsigned uint_64 greater than or equal to type Double. **/
    lcmpne_d = 1547     ,/** compare int_64 not equal with type Double. **/
    lucmpne_d = 1548    ,/** compare unsigned uint_64 not equal with type Double. **/
    lcast_df = 1549     ,/** cast int_64 to type DoubleFloat. **/
    lucast_df = 1550    ,/** cast unsigned uint_64 to type DoubleFloat. **/
    ladd_df = 1551      ,/** add int_64 with type DoubleFloat. **/
    luadd_df = 1552     ,/** add unsigned uint_64 with type DoubleFloat. **/
    lsub_df = 1553      ,/** subtract int_64 with type DoubleFloat. **/
    lusub_df = 1554     ,/** subtract unsigned uint_64 with type DoubleFloat. **/
    lmul_df = 1555      ,/** multiply int_64 with type DoubleFloat. **/
    lumul_df = 1556     ,/** multiply unsigned uint_64 with type DoubleFloat. **/
    ldiv_df = 1557      ,/** divide int_64 with type DoubleFloat. **/
    ludiv_df = 1558     ,/** divide unsigned uint_64 with type DoubleFloat. **/
    lcmpl_df = 1559     ,/** compare int_64 less than type DoubleFloat. **/
    lucmpl_df = 1560    ,/** compare unsigned uint_64 less than type DoubleFloat. **/
    lcmpg_df = 1561     ,/** compare int_64 greater than type DoubleFloat. **/
    lucmpg_df = 1562    ,/** compare unsigned uint_64 greater than type DoubleFloat. **/
    lcmpe_df = 1563     ,/** compare int_64 equal with type DoubleFloat. **/
    lucmpe_df = 1564    ,/** compare unsigned uint_64 equal with type DoubleFloat. **/
    lcmple_df = 1565    ,/** compare int_64 less than or equal to type DoubleFloat. **/
    lucmple_df = 1566   ,/** compare unsigned uint_64 less than or equal to type DoubleFloat. **/
    lcmpge_df = 1567    ,/** compare int_64 greater than or equal to type DoubleFloat. **/
    lucmpge_df = 1568   ,/** compare unsigned uint_64 greater than or equal to type DoubleFloat. **/
    lcmpne_df = 1569    ,/** compare int_64 not equal with type DoubleFloat. **/
    lucmpne_df = 1570   ,/** compare unsigned uint_64 not equal with type DoubleFloat. **/
    lcast_dd = 1571     ,/** cast int_64 to type DoubleDouble. **/
    lucast_dd = 1572    ,/** cast unsigned uint_64 to type DoubleDouble. **/
    ladd_dd = 1573      ,/** add int_64 with type DoubleDouble. **/
    luadd_dd = 1574     ,/** add unsigned uint_64 with type DoubleDouble. **/
    lsub_dd = 1575      ,/** subtract int_64 with type DoubleDouble. **/
    lusub_dd = 1576     ,/** subtract unsigned uint_64 with type DoubleDouble. **/
    lmul_dd = 1577      ,/** multiply int_64 with type DoubleDouble. **/
    lumul_dd = 1578     ,/** multiply unsigned uint_64 with type DoubleDouble. **/
    ldiv_dd = 1579      ,/** divide int_64 with type DoubleDouble. **/
    ludiv_dd = 1580     ,/** divide unsigned uint_64 with type DoubleDouble. **/
    lcmpl_dd = 1581     ,/** compare int_64 less than type DoubleDouble. **/
    lucmpl_dd = 1582    ,/** compare unsigned uint_64 less than type DoubleDouble. **/
    lcmpg_dd = 1583     ,/** compare int_64 greater than type DoubleDouble. **/
    lucmpg_dd = 1584    ,/** compare unsigned uint_64 greater than type DoubleDouble. **/
    lcmpe_dd = 1585     ,/** compare int_64 equal with type DoubleDouble. **/
    lucmpe_dd = 1586    ,/** compare unsigned uint_64 equal with type DoubleDouble. **/
    lcmple_dd = 1587    ,/** compare int_64 less than or equal to type DoubleDouble. **/
    lucmple_dd = 1588   ,/** compare unsigned uint_64 less than or equal to type DoubleDouble. **/
    lcmpge_dd = 1589    ,/** compare int_64 greater than or equal to type DoubleDouble. **/
    lucmpge_dd = 1590   ,/** compare unsigned uint_64 greater than or equal to type DoubleDouble. **/
    lcmpne_dd = 1591    ,/** compare int_64 not equal with type DoubleDouble. **/
    lucmpne_dd = 1592   ,/** compare unsigned uint_64 not equal with type DoubleDouble. **/
    lmod_b = 1593       ,/** modulo int_64 with type Byte. **/
    lcast_ub = 1594     ,/** cast int_64 to unsigned type Byte. **/
    lucast_ub = 1595    ,/** cast unsigned uint_64 to unsigned type Byte. **/
    ladd_ub = 1596      ,/** add int_64 with unsigned type Byte. **/
    luadd_ub = 1597     ,/** add unsigned uint_64 with unsigned type Byte. **/
    lsub_ub = 1598      ,/** subtract int_64 with unsigned type Byte. **/
    lusub_ub = 1599     ,/** subtract unsigned uint_64 with unsigned type Byte. **/
    lmul_ub = 1600      ,/** multiply int_64 with unsigned type Byte. **/
    lumul_ub = 1601     ,/** multiply unsigned uint_64 with unsigned type Byte. **/
    ldiv_ub = 1602      ,/** divide int_64 with unsigned type Byte. **/
    ludiv_ub = 1603     ,/** divide unsigned uint_64 with unsigned type Byte. **/
    lcmpl_ub = 1604     ,/** compare int_64 less than unsigned type Byte. **/
    lucmpl_ub = 1605    ,/** compare unsigned uint_64 less than unsigned type Byte. **/
    lcmpg_ub = 1606     ,/** compare int_64 greater than unsigned type Byte. **/
    lucmpg_ub = 1607    ,/** compare unsigned uint_64 greater than unsigned type Byte. **/
    lcmpe_ub = 1608     ,/** compare int_64 equal with unsigned type Byte. **/
    lucmpe_ub = 1609    ,/** compare unsigned uint_64 equal with unsigned type Byte. **/
    lcmple_ub = 1610    ,/** compare int_64 less than or equal to unsigned type Byte. **/
    lucmple_ub = 1611   ,/** compare unsigned uint_64 less than or equal to unsigned type Byte. **/
    lcmpge_ub = 1612    ,/** compare int_64 greater than or equal to unsigned type Byte. **/
    lucmpge_ub = 1613   ,/** compare unsigned uint_64 greater than or equal to unsigned type Byte. **/
    lcmpne_ub = 1614    ,/** compare int_64 not equal with unsigned type Byte. **/
    lucmpne_ub = 1615   ,/** compare unsigned uint_64 not equal with unsigned type Byte. **/
    lmod_s = 1616       ,/** modulo int_64 with type Short. **/
    lcast_us = 1617     ,/** cast int_64 to unsigned type Short. **/
    lucast_us = 1618    ,/** cast unsigned uint_64 to unsigned type Short. **/
    ladd_us = 1619      ,/** add int_64 with unsigned type Short. **/
    luadd_us = 1620     ,/** add unsigned uint_64 with unsigned type Short. **/
    lsub_us = 1621      ,/** subtract int_64 with unsigned type Short. **/
    lusub_us = 1622     ,/** subtract unsigned uint_64 with unsigned type Short. **/
    lmul_us = 1623      ,/** multiply int_64 with unsigned type Short. **/
    lumul_us = 1624     ,/** multiply unsigned uint_64 with unsigned type Short. **/
    ldiv_us = 1625      ,/** divide int_64 with unsigned type Short. **/
    ludiv_us = 1626     ,/** divide unsigned uint_64 with unsigned type Short. **/
    lcmpl_us = 1627     ,/** compare int_64 less than unsigned type Short. **/
    lucmpl_us = 1628    ,/** compare unsigned uint_64 less than unsigned type Short. **/
    lcmpg_us = 1629     ,/** compare int_64 greater than unsigned type Short. **/
    lucmpg_us = 1630    ,/** compare unsigned uint_64 greater than unsigned type Short. **/
    lcmpe_us = 1631     ,/** compare int_64 equal with unsigned type Short. **/
    lucmpe_us = 1632    ,/** compare unsigned uint_64 equal with unsigned type Short. **/
    lcmple_us = 1633    ,/** compare int_64 less than or equal to unsigned type Short. **/
    lucmple_us = 1634   ,/** compare unsigned uint_64 less than or equal to unsigned type Short. **/
    lcmpge_us = 1635    ,/** compare int_64 greater than or equal to unsigned type Short. **/
    lucmpge_us = 1636   ,/** compare unsigned uint_64 greater than or equal to unsigned type Short. **/
    lcmpne_us = 1637    ,/** compare int_64 not equal with unsigned type Short. **/
    lucmpne_us = 1638   ,/** compare unsigned uint_64 not equal with unsigned type Short. **/
    lmod_i = 1639       ,/** modulo int_64 with type Int. **/
    lcast_ui = 1640     ,/** cast int_64 to unsigned type Int. **/
    lucast_ui = 1641    ,/** cast unsigned uint_64 to unsigned type Int. **/
    ladd_ui = 1642      ,/** add int_64 with unsigned type Int. **/
    luadd_ui = 1643     ,/** add unsigned uint_64 with unsigned type Int. **/
    lsub_ui = 1644      ,/** subtract int_64 with unsigned type Int. **/
    lusub_ui = 1645     ,/** subtract unsigned uint_64 with unsigned type Int. **/
    lmul_ui = 1646      ,/** multiply int_64 with unsigned type Int. **/
    lumul_ui = 1647     ,/** multiply unsigned uint_64 with unsigned type Int. **/
    ldiv_ui = 1648      ,/** divide int_64 with unsigned type Int. **/
    ludiv_ui = 1649     ,/** divide unsigned uint_64 with unsigned type Int. **/
    lcmpl_ui = 1650     ,/** compare int_64 less than unsigned type Int. **/
    lucmpl_ui = 1651    ,/** compare unsigned uint_64 less than unsigned type Int. **/
    lcmpg_ui = 1652     ,/** compare int_64 greater than unsigned type Int. **/
    lucmpg_ui = 1653    ,/** compare unsigned uint_64 greater than unsigned type Int. **/
    lcmpe_ui = 1654     ,/** compare int_64 equal with unsigned type Int. **/
    lucmpe_ui = 1655    ,/** compare unsigned uint_64 equal with unsigned type Int. **/
    lcmple_ui = 1656    ,/** compare int_64 less than or equal to unsigned type Int. **/
    lucmple_ui = 1657   ,/** compare unsigned uint_64 less than or equal to unsigned type Int. **/
    lcmpge_ui = 1658    ,/** compare int_64 greater than or equal to unsigned type Int. **/
    lucmpge_ui = 1659   ,/** compare unsigned uint_64 greater than or equal to unsigned type Int. **/
    lcmpne_ui = 1660    ,/** compare int_64 not equal with unsigned type Int. **/
    lucmpne_ui = 1661   ,/** compare unsigned uint_64 not equal with unsigned type Int. **/
    lmod_l = 1662       ,/** modulo int_64 with type Long. **/
    lcast_ul = 1663     ,/** cast int_64 to unsigned type Long. **/
    lucast_ul = 1664    ,/** cast unsigned uint_64 to unsigned type Long. **/
    ladd_ul = 1665      ,/** add int_64 with unsigned type Long. **/
    luadd_ul = 1666     ,/** add unsigned uint_64 with unsigned type Long. **/
    lsub_ul = 1667      ,/** subtract int_64 with unsigned type Long. **/
    lusub_ul = 1668     ,/** subtract unsigned uint_64 with unsigned type Long. **/
    lmul_ul = 1669      ,/** multiply int_64 with unsigned type Long. **/
    lumul_ul = 1670     ,/** multiply unsigned uint_64 with unsigned type Long. **/
    ldiv_ul = 1671      ,/** divide int_64 with unsigned type Long. **/
    ludiv_ul = 1672     ,/** divide unsigned uint_64 with unsigned type Long. **/
    lcmpl_ul = 1673     ,/** compare int_64 less than unsigned type Long. **/
    lucmpl_ul = 1674    ,/** compare unsigned uint_64 less than unsigned type Long. **/
    lcmpg_ul = 1675     ,/** compare int_64 greater than unsigned type Long. **/
    lucmpg_ul = 1676    ,/** compare unsigned uint_64 greater than unsigned type Long. **/
    lcmpe_ul = 1677     ,/** compare int_64 equal with unsigned type Long. **/
    lucmpe_ul = 1678    ,/** compare unsigned uint_64 equal with unsigned type Long. **/
    lcmple_ul = 1679    ,/** compare int_64 less than or equal to unsigned type Long. **/
    lucmple_ul = 1680   ,/** compare unsigned uint_64 less than or equal to unsigned type Long. **/
    lcmpge_ul = 1681    ,/** compare int_64 greater than or equal to unsigned type Long. **/
    lucmpge_ul = 1682   ,/** compare unsigned uint_64 greater than or equal to unsigned type Long. **/
    lcmpne_ul = 1683    ,/** compare int_64 not equal with unsigned type Long. **/
    lucmpne_ul = 1684   ,/** compare unsigned uint_64 not equal with unsigned type Long. **/
    lmod_li = 1685      ,/** modulo int_64 with type LongInt. **/
    lcast_uli = 1686    ,/** cast int_64 to unsigned type LongInt. **/
    lucast_uli = 1687   ,/** cast unsigned uint_64 to unsigned type LongInt. **/
    ladd_uli = 1688     ,/** add int_64 with unsigned type LongInt. **/
    luadd_uli = 1689    ,/** add unsigned uint_64 with unsigned type LongInt. **/
    lsub_uli = 1690     ,/** subtract int_64 with unsigned type LongInt. **/
    lusub_uli = 1691    ,/** subtract unsigned uint_64 with unsigned type LongInt. **/
    lmul_uli = 1692     ,/** multiply int_64 with unsigned type LongInt. **/
    lumul_uli = 1693    ,/** multiply unsigned uint_64 with unsigned type LongInt. **/
    ldiv_uli = 1694     ,/** divide int_64 with unsigned type LongInt. **/
    ludiv_uli = 1695    ,/** divide unsigned uint_64 with unsigned type LongInt. **/
    lcmpl_uli = 1696    ,/** compare int_64 less than unsigned type LongInt. **/
    lucmpl_uli = 1697   ,/** compare unsigned uint_64 less than unsigned type LongInt. **/
    lcmpg_uli = 1698    ,/** compare int_64 greater than unsigned type LongInt. **/
    lucmpg_uli = 1699   ,/** compare unsigned uint_64 greater than unsigned type LongInt. **/
    lcmpe_uli = 1700    ,/** compare int_64 equal with unsigned type LongInt. **/
    lucmpe_uli = 1701   ,/** compare unsigned uint_64 equal with unsigned type LongInt. **/
    lcmple_uli = 1702   ,/** compare int_64 less than or equal to unsigned type LongInt. **/
    lucmple_uli = 1703  ,/** compare unsigned uint_64 less than or equal to unsigned type LongInt. **/
    lcmpge_uli = 1704   ,/** compare int_64 greater than or equal to unsigned type LongInt. **/
    lucmpge_uli = 1705  ,/** compare unsigned uint_64 greater than or equal to unsigned type LongInt. **/
    lcmpne_uli = 1706   ,/** compare int_64 not equal with unsigned type LongInt. **/
    lucmpne_uli = 1707  ,/** compare unsigned uint_64 not equal with unsigned type LongInt. **/
    lmod_ll = 1708      ,/** modulo int_64 with type LongLong. **/
    lcast_ull = 1709    ,/** cast int_64 to unsigned type LongLong. **/
    lucast_ull = 1710   ,/** cast unsigned uint_64 to unsigned type LongLong. **/
    ladd_ull = 1711     ,/** add int_64 with unsigned type LongLong. **/
    luadd_ull = 1712    ,/** add unsigned uint_64 with unsigned type LongLong. **/
    lsub_ull = 1713     ,/** subtract int_64 with unsigned type LongLong. **/
    lusub_ull = 1714    ,/** subtract unsigned uint_64 with unsigned type LongLong. **/
    lmul_ull = 1715     ,/** multiply int_64 with unsigned type LongLong. **/
    lumul_ull = 1716    ,/** multiply unsigned uint_64 with unsigned type LongLong. **/
    ldiv_ull = 1717     ,/** divide int_64 with unsigned type LongLong. **/
    ludiv_ull = 1718    ,/** divide unsigned uint_64 with unsigned type LongLong. **/
    lcmpl_ull = 1719    ,/** compare int_64 less than unsigned type LongLong. **/
    lucmpl_ull = 1720   ,/** compare unsigned uint_64 less than unsigned type LongLong. **/
    lcmpg_ull = 1721    ,/** compare int_64 greater than unsigned type LongLong. **/
    lucmpg_ull = 1722   ,/** compare unsigned uint_64 greater than unsigned type LongLong. **/
    lcmpe_ull = 1723    ,/** compare int_64 equal with unsigned type LongLong. **/
    lucmpe_ull = 1724   ,/** compare unsigned uint_64 equal with unsigned type LongLong. **/
    lcmple_ull = 1725   ,/** compare int_64 less than or equal to unsigned type LongLong. **/
    lucmple_ull = 1726  ,/** compare unsigned uint_64 less than or equal to unsigned type LongLong. **/
    lcmpge_ull = 1727   ,/** compare int_64 greater than or equal to unsigned type LongLong. **/
    lucmpge_ull = 1728  ,/** compare unsigned uint_64 greater than or equal to unsigned type LongLong. **/
    lcmpne_ull = 1729   ,/** compare int_64 not equal with unsigned type LongLong. **/
    lucmpne_ull = 1730  ,/** compare unsigned uint_64 not equal with unsigned type LongLong. **/
    land_b = 1731       ,/** bitwise and int_64 with type Byte. **/
    lor_b = 1732        ,/** bitwise or int_64 with type Byte. **/
    lxor_b = 1733       ,/** bitwise xor int_64 with type Byte. **/
    lshftr_b = 1734     ,/** shift right int_64 with type Byte. **/
    lshftl_b = 1735     ,/** shift left xor int_64 with type Byte. **/
    land_s = 1736       ,/** bitwise and int_64 with type Short. **/
    lor_s = 1737        ,/** bitwise or int_64 with type Short. **/
    lxor_s = 1738       ,/** bitwise xor int_64 with type Short. **/
    lshftr_s = 1739     ,/** shift right int_64 with type Short. **/
    lshftl_s = 1740     ,/** shift left xor int_64 with type Short. **/
    land_i = 1741       ,/** bitwise and int_64 with type Int. **/
    lor_i = 1742        ,/** bitwise or int_64 with type Int. **/
    lxor_i = 1743       ,/** bitwise xor int_64 with type Int. **/
    lshftr_i = 1744     ,/** shift right int_64 with type Int. **/
    lshftl_i = 1745     ,/** shift left xor int_64 with type Int. **/
    land_l = 1746       ,/** bitwise and int_64 with type Long. **/
    lor_l = 1747        ,/** bitwise or int_64 with type Long. **/
    lxor_l = 1748       ,/** bitwise xor int_64 with type Long. **/
    lshftr_l = 1749     ,/** shift right int_64 with type Long. **/
    lshftl_l = 1750     ,/** shift left xor int_64 with type Long. **/
    land_li = 1751      ,/** bitwise and int_64 with type LongInt. **/
    lor_li = 1752       ,/** bitwise or int_64 with type LongInt. **/
    lxor_li = 1753      ,/** bitwise xor int_64 with type LongInt. **/
    lshftr_li = 1754    ,/** shift right int_64 with type LongInt. **/
    lshftl_li = 1755    ,/** shift left xor int_64 with type LongInt. **/
    land_ll = 1756      ,/** bitwise and int_64 with type LongLong. **/
    lor_ll = 1757       ,/** bitwise or int_64 with type LongLong. **/
    lxor_ll = 1758      ,/** bitwise xor int_64 with type LongLong. **/
    lshftr_ll = 1759    ,/** shift right int_64 with type LongLong. **/
    lshftl_ll = 1760    ,/** shift left xor int_64 with type LongLong. **/
    ldup = 1761         ,/** duplicate a int_64 on the stack. **/
    ldup2 = 1762        ,/** duplicate a int_64 2 times on the stack. **/
    ldup3 = 1763        ,/** duplicate a int_64 3 times on the stack. **/
    ldup4 = 1764        ,/** duplicate a int_64 4 times on the stack. **/
    ldup5 = 1765        ,/** duplicate a int_64 5 times on the stack. **/
    lset = 1766         ,/** set a int_64 from stack into a field on base pointer. **/
    lget = 1767         ,/** get a int_64 from a field on base pointer to stack. **/
    lvset = 1768        ,/** set a int_64 from value into a field on base pointer. **/
    lsget = 1769        ,/** get a int_64 from a field on base pointer to stack using address from stack. **/
    lsset = 1770        ,/** set a int_64 from stack into a field on base pointer using address from stack. **/
    lsetl = 1771        ,/** set a int_64 from local variable into a field on base pointer. **/
    linc_1 = 1772       ,/** increment int_64 by 1 on stack. **/
    linc_2 = 1773       ,/** increment int_64 by 2 on stack. **/
    lstinc_1 = 1774     ,/** increment int_64 by 1 on stack. **/
    lstinc_2 = 1775     ,/** increment int_64 by 2 on stack. **/
    lreturn = 1776      ,/** return a int_64 into the main stack. **/
    lmainst = 1777      ,/** store a int_64 from main stack in a local variable.. **/
    lmainst_0 = 1778    ,/** store a int_64 from main stack in local variable 0. **/
    lmainst_1 = 1779    ,/** store a int_64 from main stack in local variable 1. **/
    lmainst_2 = 1780    ,/** store a int_64 from main stack in local variable 2. **/
    lmainst_3 = 1781    ,/** store a int_64 from main stack in local variable 3. **/
    lprint = 1782       ,/** print a int_64 from stack. **/
    luprint = 1783      ,/** print a unsigned uint_64 from stack. **/
    liconst = 1784      ,/** push a const int_128 into the stack. **/
    liconst_0 = 1785    ,/** push a const int_128 into the stack (value = 0). **/
    liconst_1 = 1786    ,/** push a const int_128 into the stack (value = 1). **/
    liconst_2 = 1787    ,/** push a const int_128 into the stack (value = 2). **/
    liconst_3 = 1788    ,/** push a const int_128 into the stack (value = 3). **/
    liconst_4 = 1789    ,/** push a const int_128 into the stack (value = 4). **/
    liconst_5 = 1790    ,/** push a const int_128 into the stack (value = 5). **/
    liconst_6 = 1791    ,/** push a const int_128 into the stack (value = 6). **/
    liconst_9 = 1792    ,/** push a const int_128 into the stack (value = 9). **/
    liconst_10 = 1793   ,/** push a const int_128 into the stack (value = 10). **/
    liconst_11 = 1794   ,/** push a const int_128 into the stack (value = 11). **/
    liconst_12 = 1795   ,/** push a const int_128 into the stack (value = 12). **/
    liload = 1796       ,/** load a int_128 into the stack from local variable. **/
    liload_0 = 1797     ,/** load a int_128 into the stack from local variable 0. **/
    liload_1 = 1798     ,/** load a int_128 into the stack from local variable 1. **/
    liload_2 = 1799     ,/** load a int_128 into the stack from local variable 2. **/
    liload_3 = 1800     ,/** load a int_128 into the stack from local variable 3. **/
    liload_4 = 1801     ,/** load a int_128 into the stack from local variable 4. **/
    listore = 1802      ,/** store a int_128 from stack into local variable. **/
    listore_0 = 1803    ,/** store a int_128 from stack into local variable 0. **/
    listore_1 = 1804    ,/** store a int_128 from stack into local variable 1. **/
    listore_2 = 1805    ,/** store a int_128 from stack into local variable 2. **/
    listore_3 = 1806    ,/** store a int_128 from stack into local variable 3. **/
    listore_4 = 1807    ,/** store a int_128 from stack into local variable 4. **/
    licast_b = 1808     ,/** cast int_128 to type Byte. **/
    liucast_b = 1809    ,/** cast unsigned uint_128 to type Byte. **/
    liadd_b = 1810      ,/** add int_128 with type Byte. **/
    liuadd_b = 1811     ,/** add unsigned uint_128 with type Byte. **/
    lisub_b = 1812      ,/** subtract int_128 with type Byte. **/
    liusub_b = 1813     ,/** subtract unsigned uint_128 with type Byte. **/
    limul_b = 1814      ,/** multiply int_128 with type Byte. **/
    liumul_b = 1815     ,/** multiply unsigned uint_128 with type Byte. **/
    lidiv_b = 1816      ,/** divide int_128 with type Byte. **/
    liudiv_b = 1817     ,/** divide unsigned uint_128 with type Byte. **/
    licmpl_b = 1818     ,/** compare int_128 less than type Byte. **/
    liucmpl_b = 1819    ,/** compare unsigned uint_128 less than type Byte. **/
    licmpg_b = 1820     ,/** compare int_128 greater than type Byte. **/
    liucmpg_b = 1821    ,/** compare unsigned uint_128 greater than type Byte. **/
    licmpe_b = 1822     ,/** compare int_128 equal with type Byte. **/
    liucmpe_b = 1823    ,/** compare unsigned uint_128 equal with type Byte. **/
    licmple_b = 1824    ,/** compare int_128 less than or equal to type Byte. **/
    liucmple_b = 1825   ,/** compare unsigned uint_128 less than or equal to type Byte. **/
    licmpge_b = 1826    ,/** compare int_128 greater than or equal to type Byte. **/
    liucmpge_b = 1827   ,/** compare unsigned uint_128 greater than or equal to type Byte. **/
    licmpne_b = 1828    ,/** compare int_128 not equal with type Byte. **/
    liucmpne_b = 1829   ,/** compare unsigned uint_128 not equal with type Byte. **/
    licast_s = 1830     ,/** cast int_128 to type Short. **/
    liucast_s = 1831    ,/** cast unsigned uint_128 to type Short. **/
    liadd_s = 1832      ,/** add int_128 with type Short. **/
    liuadd_s = 1833     ,/** add unsigned uint_128 with type Short. **/
    lisub_s = 1834      ,/** subtract int_128 with type Short. **/
    liusub_s = 1835     ,/** subtract unsigned uint_128 with type Short. **/
    limul_s = 1836      ,/** multiply int_128 with type Short. **/
    liumul_s = 1837     ,/** multiply unsigned uint_128 with type Short. **/
    lidiv_s = 1838      ,/** divide int_128 with type Short. **/
    liudiv_s = 1839     ,/** divide unsigned uint_128 with type Short. **/
    licmpl_s = 1840     ,/** compare int_128 less than type Short. **/
    liucmpl_s = 1841    ,/** compare unsigned uint_128 less than type Short. **/
    licmpg_s = 1842     ,/** compare int_128 greater than type Short. **/
    liucmpg_s = 1843    ,/** compare unsigned uint_128 greater than type Short. **/
    licmpe_s = 1844     ,/** compare int_128 equal with type Short. **/
    liucmpe_s = 1845    ,/** compare unsigned uint_128 equal with type Short. **/
    licmple_s = 1846    ,/** compare int_128 less than or equal to type Short. **/
    liucmple_s = 1847   ,/** compare unsigned uint_128 less than or equal to type Short. **/
    licmpge_s = 1848    ,/** compare int_128 greater than or equal to type Short. **/
    liucmpge_s = 1849   ,/** compare unsigned uint_128 greater than or equal to type Short. **/
    licmpne_s = 1850    ,/** compare int_128 not equal with type Short. **/
    liucmpne_s = 1851   ,/** compare unsigned uint_128 not equal with type Short. **/
    licast_i = 1852     ,/** cast int_128 to type Int. **/
    liucast_i = 1853    ,/** cast unsigned uint_128 to type Int. **/
    liadd_i = 1854      ,/** add int_128 with type Int. **/
    liuadd_i = 1855     ,/** add unsigned uint_128 with type Int. **/
    lisub_i = 1856      ,/** subtract int_128 with type Int. **/
    liusub_i = 1857     ,/** subtract unsigned uint_128 with type Int. **/
    limul_i = 1858      ,/** multiply int_128 with type Int. **/
    liumul_i = 1859     ,/** multiply unsigned uint_128 with type Int. **/
    lidiv_i = 1860      ,/** divide int_128 with type Int. **/
    liudiv_i = 1861     ,/** divide unsigned uint_128 with type Int. **/
    licmpl_i = 1862     ,/** compare int_128 less than type Int. **/
    liucmpl_i = 1863    ,/** compare unsigned uint_128 less than type Int. **/
    licmpg_i = 1864     ,/** compare int_128 greater than type Int. **/
    liucmpg_i = 1865    ,/** compare unsigned uint_128 greater than type Int. **/
    licmpe_i = 1866     ,/** compare int_128 equal with type Int. **/
    liucmpe_i = 1867    ,/** compare unsigned uint_128 equal with type Int. **/
    licmple_i = 1868    ,/** compare int_128 less than or equal to type Int. **/
    liucmple_i = 1869   ,/** compare unsigned uint_128 less than or equal to type Int. **/
    licmpge_i = 1870    ,/** compare int_128 greater than or equal to type Int. **/
    liucmpge_i = 1871   ,/** compare unsigned uint_128 greater than or equal to type Int. **/
    licmpne_i = 1872    ,/** compare int_128 not equal with type Int. **/
    liucmpne_i = 1873   ,/** compare unsigned uint_128 not equal with type Int. **/
    licast_l = 1874     ,/** cast int_128 to type Long. **/
    liucast_l = 1875    ,/** cast unsigned uint_128 to type Long. **/
    liadd_l = 1876      ,/** add int_128 with type Long. **/
    liuadd_l = 1877     ,/** add unsigned uint_128 with type Long. **/
    lisub_l = 1878      ,/** subtract int_128 with type Long. **/
    liusub_l = 1879     ,/** subtract unsigned uint_128 with type Long. **/
    limul_l = 1880      ,/** multiply int_128 with type Long. **/
    liumul_l = 1881     ,/** multiply unsigned uint_128 with type Long. **/
    lidiv_l = 1882      ,/** divide int_128 with type Long. **/
    liudiv_l = 1883     ,/** divide unsigned uint_128 with type Long. **/
    licmpl_l = 1884     ,/** compare int_128 less than type Long. **/
    liucmpl_l = 1885    ,/** compare unsigned uint_128 less than type Long. **/
    licmpg_l = 1886     ,/** compare int_128 greater than type Long. **/
    liucmpg_l = 1887    ,/** compare unsigned uint_128 greater than type Long. **/
    licmpe_l = 1888     ,/** compare int_128 equal with type Long. **/
    liucmpe_l = 1889    ,/** compare unsigned uint_128 equal with type Long. **/
    licmple_l = 1890    ,/** compare int_128 less than or equal to type Long. **/
    liucmple_l = 1891   ,/** compare unsigned uint_128 less than or equal to type Long. **/
    licmpge_l = 1892    ,/** compare int_128 greater than or equal to type Long. **/
    liucmpge_l = 1893   ,/** compare unsigned uint_128 greater than or equal to type Long. **/
    licmpne_l = 1894    ,/** compare int_128 not equal with type Long. **/
    liucmpne_l = 1895   ,/** compare unsigned uint_128 not equal with type Long. **/
    licast_li = 1896    ,/** cast int_128 to type LongInt. **/
    liucast_li = 1897   ,/** cast unsigned uint_128 to type LongInt. **/
    liadd_li = 1898     ,/** add int_128 with type LongInt. **/
    liuadd_li = 1899    ,/** add unsigned uint_128 with type LongInt. **/
    lisub_li = 1900     ,/** subtract int_128 with type LongInt. **/
    liusub_li = 1901    ,/** subtract unsigned uint_128 with type LongInt. **/
    limul_li = 1902     ,/** multiply int_128 with type LongInt. **/
    liumul_li = 1903    ,/** multiply unsigned uint_128 with type LongInt. **/
    lidiv_li = 1904     ,/** divide int_128 with type LongInt. **/
    liudiv_li = 1905    ,/** divide unsigned uint_128 with type LongInt. **/
    licmpl_li = 1906    ,/** compare int_128 less than type LongInt. **/
    liucmpl_li = 1907   ,/** compare unsigned uint_128 less than type LongInt. **/
    licmpg_li = 1908    ,/** compare int_128 greater than type LongInt. **/
    liucmpg_li = 1909   ,/** compare unsigned uint_128 greater than type LongInt. **/
    licmpe_li = 1910    ,/** compare int_128 equal with type LongInt. **/
    liucmpe_li = 1911   ,/** compare unsigned uint_128 equal with type LongInt. **/
    licmple_li = 1912   ,/** compare int_128 less than or equal to type LongInt. **/
    liucmple_li = 1913  ,/** compare unsigned uint_128 less than or equal to type LongInt. **/
    licmpge_li = 1914   ,/** compare int_128 greater than or equal to type LongInt. **/
    liucmpge_li = 1915  ,/** compare unsigned uint_128 greater than or equal to type LongInt. **/
    licmpne_li = 1916   ,/** compare int_128 not equal with type LongInt. **/
    liucmpne_li = 1917  ,/** compare unsigned uint_128 not equal with type LongInt. **/
    licast_ll = 1918    ,/** cast int_128 to type LongLong. **/
    liucast_ll = 1919   ,/** cast unsigned uint_128 to type LongLong. **/
    liadd_ll = 1920     ,/** add int_128 with type LongLong. **/
    liuadd_ll = 1921    ,/** add unsigned uint_128 with type LongLong. **/
    lisub_ll = 1922     ,/** subtract int_128 with type LongLong. **/
    liusub_ll = 1923    ,/** subtract unsigned uint_128 with type LongLong. **/
    limul_ll = 1924     ,/** multiply int_128 with type LongLong. **/
    liumul_ll = 1925    ,/** multiply unsigned uint_128 with type LongLong. **/
    lidiv_ll = 1926     ,/** divide int_128 with type LongLong. **/
    liudiv_ll = 1927    ,/** divide unsigned uint_128 with type LongLong. **/
    licmpl_ll = 1928    ,/** compare int_128 less than type LongLong. **/
    liucmpl_ll = 1929   ,/** compare unsigned uint_128 less than type LongLong. **/
    licmpg_ll = 1930    ,/** compare int_128 greater than type LongLong. **/
    liucmpg_ll = 1931   ,/** compare unsigned uint_128 greater than type LongLong. **/
    licmpe_ll = 1932    ,/** compare int_128 equal with type LongLong. **/
    liucmpe_ll = 1933   ,/** compare unsigned uint_128 equal with type LongLong. **/
    licmple_ll = 1934   ,/** compare int_128 less than or equal to type LongLong. **/
    liucmple_ll = 1935  ,/** compare unsigned uint_128 less than or equal to type LongLong. **/
    licmpge_ll = 1936   ,/** compare int_128 greater than or equal to type LongLong. **/
    liucmpge_ll = 1937  ,/** compare unsigned uint_128 greater than or equal to type LongLong. **/
    licmpne_ll = 1938   ,/** compare int_128 not equal with type LongLong. **/
    liucmpne_ll = 1939  ,/** compare unsigned uint_128 not equal with type LongLong. **/
    licast_f = 1940     ,/** cast int_128 to type Float. **/
    liucast_f = 1941    ,/** cast unsigned uint_128 to type Float. **/
    liadd_f = 1942      ,/** add int_128 with type Float. **/
    liuadd_f = 1943     ,/** add unsigned uint_128 with type Float. **/
    lisub_f = 1944      ,/** subtract int_128 with type Float. **/
    liusub_f = 1945     ,/** subtract unsigned uint_128 with type Float. **/
    limul_f = 1946      ,/** multiply int_128 with type Float. **/
    liumul_f = 1947     ,/** multiply unsigned uint_128 with type Float. **/
    lidiv_f = 1948      ,/** divide int_128 with type Float. **/
    liudiv_f = 1949     ,/** divide unsigned uint_128 with type Float. **/
    licmpl_f = 1950     ,/** compare int_128 less than type Float. **/
    liucmpl_f = 1951    ,/** compare unsigned uint_128 less than type Float. **/
    licmpg_f = 1952     ,/** compare int_128 greater than type Float. **/
    liucmpg_f = 1953    ,/** compare unsigned uint_128 greater than type Float. **/
    licmpe_f = 1954     ,/** compare int_128 equal with type Float. **/
    liucmpe_f = 1955    ,/** compare unsigned uint_128 equal with type Float. **/
    licmple_f = 1956    ,/** compare int_128 less than or equal to type Float. **/
    liucmple_f = 1957   ,/** compare unsigned uint_128 less than or equal to type Float. **/
    licmpge_f = 1958    ,/** compare int_128 greater than or equal to type Float. **/
    liucmpge_f = 1959   ,/** compare unsigned uint_128 greater than or equal to type Float. **/
    licmpne_f = 1960    ,/** compare int_128 not equal with type Float. **/
    liucmpne_f = 1961   ,/** compare unsigned uint_128 not equal with type Float. **/
    licast_d = 1962     ,/** cast int_128 to type Double. **/
    liucast_d = 1963    ,/** cast unsigned uint_128 to type Double. **/
    liadd_d = 1964      ,/** add int_128 with type Double. **/
    liuadd_d = 1965     ,/** add unsigned uint_128 with type Double. **/
    lisub_d = 1966      ,/** subtract int_128 with type Double. **/
    liusub_d = 1967     ,/** subtract unsigned uint_128 with type Double. **/
    limul_d = 1968      ,/** multiply int_128 with type Double. **/
    liumul_d = 1969     ,/** multiply unsigned uint_128 with type Double. **/
    lidiv_d = 1970      ,/** divide int_128 with type Double. **/
    liudiv_d = 1971     ,/** divide unsigned uint_128 with type Double. **/
    licmpl_d = 1972     ,/** compare int_128 less than type Double. **/
    liucmpl_d = 1973    ,/** compare unsigned uint_128 less than type Double. **/
    licmpg_d = 1974     ,/** compare int_128 greater than type Double. **/
    liucmpg_d = 1975    ,/** compare unsigned uint_128 greater than type Double. **/
    licmpe_d = 1976     ,/** compare int_128 equal with type Double. **/
    liucmpe_d = 1977    ,/** compare unsigned uint_128 equal with type Double. **/
    licmple_d = 1978    ,/** compare int_128 less than or equal to type Double. **/
    liucmple_d = 1979   ,/** compare unsigned uint_128 less than or equal to type Double. **/
    licmpge_d = 1980    ,/** compare int_128 greater than or equal to type Double. **/
    liucmpge_d = 1981   ,/** compare unsigned uint_128 greater than or equal to type Double. **/
    licmpne_d = 1982    ,/** compare int_128 not equal with type Double. **/
    liucmpne_d = 1983   ,/** compare unsigned uint_128 not equal with type Double. **/
    licast_df = 1984    ,/** cast int_128 to type DoubleFloat. **/
    liucast_df = 1985   ,/** cast unsigned uint_128 to type DoubleFloat. **/
    liadd_df = 1986     ,/** add int_128 with type DoubleFloat. **/
    liuadd_df = 1987    ,/** add unsigned uint_128 with type DoubleFloat. **/
    lisub_df = 1988     ,/** subtract int_128 with type DoubleFloat. **/
    liusub_df = 1989    ,/** subtract unsigned uint_128 with type DoubleFloat. **/
    limul_df = 1990     ,/** multiply int_128 with type DoubleFloat. **/
    liumul_df = 1991    ,/** multiply unsigned uint_128 with type DoubleFloat. **/
    lidiv_df = 1992     ,/** divide int_128 with type DoubleFloat. **/
    liudiv_df = 1993    ,/** divide unsigned uint_128 with type DoubleFloat. **/
    licmpl_df = 1994    ,/** compare int_128 less than type DoubleFloat. **/
    liucmpl_df = 1995   ,/** compare unsigned uint_128 less than type DoubleFloat. **/
    licmpg_df = 1996    ,/** compare int_128 greater than type DoubleFloat. **/
    liucmpg_df = 1997   ,/** compare unsigned uint_128 greater than type DoubleFloat. **/
    licmpe_df = 1998    ,/** compare int_128 equal with type DoubleFloat. **/
    liucmpe_df = 1999   ,/** compare unsigned uint_128 equal with type DoubleFloat. **/
    licmple_df = 2000   ,/** compare int_128 less than or equal to type DoubleFloat. **/
    liucmple_df = 2001  ,/** compare unsigned uint_128 less than or equal to type DoubleFloat. **/
    licmpge_df = 2002   ,/** compare int_128 greater than or equal to type DoubleFloat. **/
    liucmpge_df = 2003  ,/** compare unsigned uint_128 greater than or equal to type DoubleFloat. **/
    licmpne_df = 2004   ,/** compare int_128 not equal with type DoubleFloat. **/
    liucmpne_df = 2005  ,/** compare unsigned uint_128 not equal with type DoubleFloat. **/
    licast_dd = 2006    ,/** cast int_128 to type DoubleDouble. **/
    liucast_dd = 2007   ,/** cast unsigned uint_128 to type DoubleDouble. **/
    liadd_dd = 2008     ,/** add int_128 with type DoubleDouble. **/
    liuadd_dd = 2009    ,/** add unsigned uint_128 with type DoubleDouble. **/
    lisub_dd = 2010     ,/** subtract int_128 with type DoubleDouble. **/
    liusub_dd = 2011    ,/** subtract unsigned uint_128 with type DoubleDouble. **/
    limul_dd = 2012     ,/** multiply int_128 with type DoubleDouble. **/
    liumul_dd = 2013    ,/** multiply unsigned uint_128 with type DoubleDouble. **/
    lidiv_dd = 2014     ,/** divide int_128 with type DoubleDouble. **/
    liudiv_dd = 2015    ,/** divide unsigned uint_128 with type DoubleDouble. **/
    licmpl_dd = 2016    ,/** compare int_128 less than type DoubleDouble. **/
    liucmpl_dd = 2017   ,/** compare unsigned uint_128 less than type DoubleDouble. **/
    licmpg_dd = 2018    ,/** compare int_128 greater than type DoubleDouble. **/
    liucmpg_dd = 2019   ,/** compare unsigned uint_128 greater than type DoubleDouble. **/
    licmpe_dd = 2020    ,/** compare int_128 equal with type DoubleDouble. **/
    liucmpe_dd = 2021   ,/** compare unsigned uint_128 equal with type DoubleDouble. **/
    licmple_dd = 2022   ,/** compare int_128 less than or equal to type DoubleDouble. **/
    liucmple_dd = 2023  ,/** compare unsigned uint_128 less than or equal to type DoubleDouble. **/
    licmpge_dd = 2024   ,/** compare int_128 greater than or equal to type DoubleDouble. **/
    liucmpge_dd = 2025  ,/** compare unsigned uint_128 greater than or equal to type DoubleDouble. **/
    licmpne_dd = 2026   ,/** compare int_128 not equal with type DoubleDouble. **/
    liucmpne_dd = 2027  ,/** compare unsigned uint_128 not equal with type DoubleDouble. **/
    limod_b = 2028      ,/** modulo int_128 with type Byte. **/
    licast_ub = 2029    ,/** cast int_128 to unsigned type Byte. **/
    liucast_ub = 2030   ,/** cast unsigned uint_128 to unsigned type Byte. **/
    liadd_ub = 2031     ,/** add int_128 with unsigned type Byte. **/
    liuadd_ub = 2032    ,/** add unsigned uint_128 with unsigned type Byte. **/
    lisub_ub = 2033     ,/** subtract int_128 with unsigned type Byte. **/
    liusub_ub = 2034    ,/** subtract unsigned uint_128 with unsigned type Byte. **/
    limul_ub = 2035     ,/** multiply int_128 with unsigned type Byte. **/
    liumul_ub = 2036    ,/** multiply unsigned uint_128 with unsigned type Byte. **/
    lidiv_ub = 2037     ,/** divide int_128 with unsigned type Byte. **/
    liudiv_ub = 2038    ,/** divide unsigned uint_128 with unsigned type Byte. **/
    licmpl_ub = 2039    ,/** compare int_128 less than unsigned type Byte. **/
    liucmpl_ub = 2040   ,/** compare unsigned uint_128 less than unsigned type Byte. **/
    licmpg_ub = 2041    ,/** compare int_128 greater than unsigned type Byte. **/
    liucmpg_ub = 2042   ,/** compare unsigned uint_128 greater than unsigned type Byte. **/
    licmpe_ub = 2043    ,/** compare int_128 equal with unsigned type Byte. **/
    liucmpe_ub = 2044   ,/** compare unsigned uint_128 equal with unsigned type Byte. **/
    licmple_ub = 2045   ,/** compare int_128 less than or equal to unsigned type Byte. **/
    liucmple_ub = 2046  ,/** compare unsigned uint_128 less than or equal to unsigned type Byte. **/
    licmpge_ub = 2047   ,/** compare int_128 greater than or equal to unsigned type Byte. **/
    liucmpge_ub = 2048  ,/** compare unsigned uint_128 greater than or equal to unsigned type Byte. **/
    licmpne_ub = 2049   ,/** compare int_128 not equal with unsigned type Byte. **/
    liucmpne_ub = 2050  ,/** compare unsigned uint_128 not equal with unsigned type Byte. **/
    limod_s = 2051      ,/** modulo int_128 with type Short. **/
    licast_us = 2052    ,/** cast int_128 to unsigned type Short. **/
    liucast_us = 2053   ,/** cast unsigned uint_128 to unsigned type Short. **/
    liadd_us = 2054     ,/** add int_128 with unsigned type Short. **/
    liuadd_us = 2055    ,/** add unsigned uint_128 with unsigned type Short. **/
    lisub_us = 2056     ,/** subtract int_128 with unsigned type Short. **/
    liusub_us = 2057    ,/** subtract unsigned uint_128 with unsigned type Short. **/
    limul_us = 2058     ,/** multiply int_128 with unsigned type Short. **/
    liumul_us = 2059    ,/** multiply unsigned uint_128 with unsigned type Short. **/
    lidiv_us = 2060     ,/** divide int_128 with unsigned type Short. **/
    liudiv_us = 2061    ,/** divide unsigned uint_128 with unsigned type Short. **/
    licmpl_us = 2062    ,/** compare int_128 less than unsigned type Short. **/
    liucmpl_us = 2063   ,/** compare unsigned uint_128 less than unsigned type Short. **/
    licmpg_us = 2064    ,/** compare int_128 greater than unsigned type Short. **/
    liucmpg_us = 2065   ,/** compare unsigned uint_128 greater than unsigned type Short. **/
    licmpe_us = 2066    ,/** compare int_128 equal with unsigned type Short. **/
    liucmpe_us = 2067   ,/** compare unsigned uint_128 equal with unsigned type Short. **/
    licmple_us = 2068   ,/** compare int_128 less than or equal to unsigned type Short. **/
    liucmple_us = 2069  ,/** compare unsigned uint_128 less than or equal to unsigned type Short. **/
    licmpge_us = 2070   ,/** compare int_128 greater than or equal to unsigned type Short. **/
    liucmpge_us = 2071  ,/** compare unsigned uint_128 greater than or equal to unsigned type Short. **/
    licmpne_us = 2072   ,/** compare int_128 not equal with unsigned type Short. **/
    liucmpne_us = 2073  ,/** compare unsigned uint_128 not equal with unsigned type Short. **/
    limod_i = 2074      ,/** modulo int_128 with type Int. **/
    licast_ui = 2075    ,/** cast int_128 to unsigned type Int. **/
    liucast_ui = 2076   ,/** cast unsigned uint_128 to unsigned type Int. **/
    liadd_ui = 2077     ,/** add int_128 with unsigned type Int. **/
    liuadd_ui = 2078    ,/** add unsigned uint_128 with unsigned type Int. **/
    lisub_ui = 2079     ,/** subtract int_128 with unsigned type Int. **/
    liusub_ui = 2080    ,/** subtract unsigned uint_128 with unsigned type Int. **/
    limul_ui = 2081     ,/** multiply int_128 with unsigned type Int. **/
    liumul_ui = 2082    ,/** multiply unsigned uint_128 with unsigned type Int. **/
    lidiv_ui = 2083     ,/** divide int_128 with unsigned type Int. **/
    liudiv_ui = 2084    ,/** divide unsigned uint_128 with unsigned type Int. **/
    licmpl_ui = 2085    ,/** compare int_128 less than unsigned type Int. **/
    liucmpl_ui = 2086   ,/** compare unsigned uint_128 less than unsigned type Int. **/
    licmpg_ui = 2087    ,/** compare int_128 greater than unsigned type Int. **/
    liucmpg_ui = 2088   ,/** compare unsigned uint_128 greater than unsigned type Int. **/
    licmpe_ui = 2089    ,/** compare int_128 equal with unsigned type Int. **/
    liucmpe_ui = 2090   ,/** compare unsigned uint_128 equal with unsigned type Int. **/
    licmple_ui = 2091   ,/** compare int_128 less than or equal to unsigned type Int. **/
    liucmple_ui = 2092  ,/** compare unsigned uint_128 less than or equal to unsigned type Int. **/
    licmpge_ui = 2093   ,/** compare int_128 greater than or equal to unsigned type Int. **/
    liucmpge_ui = 2094  ,/** compare unsigned uint_128 greater than or equal to unsigned type Int. **/
    licmpne_ui = 2095   ,/** compare int_128 not equal with unsigned type Int. **/
    liucmpne_ui = 2096  ,/** compare unsigned uint_128 not equal with unsigned type Int. **/
    limod_l = 2097      ,/** modulo int_128 with type Long. **/
    licast_ul = 2098    ,/** cast int_128 to unsigned type Long. **/
    liucast_ul = 2099   ,/** cast unsigned uint_128 to unsigned type Long. **/
    liadd_ul = 2100     ,/** add int_128 with unsigned type Long. **/
    liuadd_ul = 2101    ,/** add unsigned uint_128 with unsigned type Long. **/
    lisub_ul = 2102     ,/** subtract int_128 with unsigned type Long. **/
    liusub_ul = 2103    ,/** subtract unsigned uint_128 with unsigned type Long. **/
    limul_ul = 2104     ,/** multiply int_128 with unsigned type Long. **/
    liumul_ul = 2105    ,/** multiply unsigned uint_128 with unsigned type Long. **/
    lidiv_ul = 2106     ,/** divide int_128 with unsigned type Long. **/
    liudiv_ul = 2107    ,/** divide unsigned uint_128 with unsigned type Long. **/
    licmpl_ul = 2108    ,/** compare int_128 less than unsigned type Long. **/
    liucmpl_ul = 2109   ,/** compare unsigned uint_128 less than unsigned type Long. **/
    licmpg_ul = 2110    ,/** compare int_128 greater than unsigned type Long. **/
    liucmpg_ul = 2111   ,/** compare unsigned uint_128 greater than unsigned type Long. **/
    licmpe_ul = 2112    ,/** compare int_128 equal with unsigned type Long. **/
    liucmpe_ul = 2113   ,/** compare unsigned uint_128 equal with unsigned type Long. **/
    licmple_ul = 2114   ,/** compare int_128 less than or equal to unsigned type Long. **/
    liucmple_ul = 2115  ,/** compare unsigned uint_128 less than or equal to unsigned type Long. **/
    licmpge_ul = 2116   ,/** compare int_128 greater than or equal to unsigned type Long. **/
    liucmpge_ul = 2117  ,/** compare unsigned uint_128 greater than or equal to unsigned type Long. **/
    licmpne_ul = 2118   ,/** compare int_128 not equal with unsigned type Long. **/
    liucmpne_ul = 2119  ,/** compare unsigned uint_128 not equal with unsigned type Long. **/
    limod_li = 2120     ,/** modulo int_128 with type LongInt. **/
    licast_uli = 2121   ,/** cast int_128 to unsigned type LongInt. **/
    liucast_uli = 2122  ,/** cast unsigned uint_128 to unsigned type LongInt. **/
    liadd_uli = 2123    ,/** add int_128 with unsigned type LongInt. **/
    liuadd_uli = 2124   ,/** add unsigned uint_128 with unsigned type LongInt. **/
    lisub_uli = 2125    ,/** subtract int_128 with unsigned type LongInt. **/
    liusub_uli = 2126   ,/** subtract unsigned uint_128 with unsigned type LongInt. **/
    limul_uli = 2127    ,/** multiply int_128 with unsigned type LongInt. **/
    liumul_uli = 2128   ,/** multiply unsigned uint_128 with unsigned type LongInt. **/
    lidiv_uli = 2129    ,/** divide int_128 with unsigned type LongInt. **/
    liudiv_uli = 2130   ,/** divide unsigned uint_128 with unsigned type LongInt. **/
    licmpl_uli = 2131   ,/** compare int_128 less than unsigned type LongInt. **/
    liucmpl_uli = 2132  ,/** compare unsigned uint_128 less than unsigned type LongInt. **/
    licmpg_uli = 2133   ,/** compare int_128 greater than unsigned type LongInt. **/
    liucmpg_uli = 2134  ,/** compare unsigned uint_128 greater than unsigned type LongInt. **/
    licmpe_uli = 2135   ,/** compare int_128 equal with unsigned type LongInt. **/
    liucmpe_uli = 2136  ,/** compare unsigned uint_128 equal with unsigned type LongInt. **/
    licmple_uli = 2137  ,/** compare int_128 less than or equal to unsigned type LongInt. **/
    liucmple_uli = 2138 ,/** compare unsigned uint_128 less than or equal to unsigned type LongInt. **/
    licmpge_uli = 2139  ,/** compare int_128 greater than or equal to unsigned type LongInt. **/
    liucmpge_uli = 2140 ,/** compare unsigned uint_128 greater than or equal to unsigned type LongInt. **/
    licmpne_uli = 2141  ,/** compare int_128 not equal with unsigned type LongInt. **/
    liucmpne_uli = 2142 ,/** compare unsigned uint_128 not equal with unsigned type LongInt. **/
    limod_ll = 2143     ,/** modulo int_128 with type LongLong. **/
    licast_ull = 2144   ,/** cast int_128 to unsigned type LongLong. **/
    liucast_ull = 2145  ,/** cast unsigned uint_128 to unsigned type LongLong. **/
    liadd_ull = 2146    ,/** add int_128 with unsigned type LongLong. **/
    liuadd_ull = 2147   ,/** add unsigned uint_128 with unsigned type LongLong. **/
    lisub_ull = 2148    ,/** subtract int_128 with unsigned type LongLong. **/
    liusub_ull = 2149   ,/** subtract unsigned uint_128 with unsigned type LongLong. **/
    limul_ull = 2150    ,/** multiply int_128 with unsigned type LongLong. **/
    liumul_ull = 2151   ,/** multiply unsigned uint_128 with unsigned type LongLong. **/
    lidiv_ull = 2152    ,/** divide int_128 with unsigned type LongLong. **/
    liudiv_ull = 2153   ,/** divide unsigned uint_128 with unsigned type LongLong. **/
    licmpl_ull = 2154   ,/** compare int_128 less than unsigned type LongLong. **/
    liucmpl_ull = 2155  ,/** compare unsigned uint_128 less than unsigned type LongLong. **/
    licmpg_ull = 2156   ,/** compare int_128 greater than unsigned type LongLong. **/
    liucmpg_ull = 2157  ,/** compare unsigned uint_128 greater than unsigned type LongLong. **/
    licmpe_ull = 2158   ,/** compare int_128 equal with unsigned type LongLong. **/
    liucmpe_ull = 2159  ,/** compare unsigned uint_128 equal with unsigned type LongLong. **/
    licmple_ull = 2160  ,/** compare int_128 less than or equal to unsigned type LongLong. **/
    liucmple_ull = 2161 ,/** compare unsigned uint_128 less than or equal to unsigned type LongLong. **/
    licmpge_ull = 2162  ,/** compare int_128 greater than or equal to unsigned type LongLong. **/
    liucmpge_ull = 2163 ,/** compare unsigned uint_128 greater than or equal to unsigned type LongLong. **/
    licmpne_ull = 2164  ,/** compare int_128 not equal with unsigned type LongLong. **/
    liucmpne_ull = 2165 ,/** compare unsigned uint_128 not equal with unsigned type LongLong. **/
    liand_b = 2166      ,/** bitwise and int_128 with type Byte. **/
    lior_b = 2167       ,/** bitwise or int_128 with type Byte. **/
    lixor_b = 2168      ,/** bitwise xor int_128 with type Byte. **/
    lishftr_b = 2169    ,/** shift right int_128 with type Byte. **/
    lishftl_b = 2170    ,/** shift left xor int_128 with type Byte. **/
    liand_s = 2171      ,/** bitwise and int_128 with type Short. **/
    lior_s = 2172       ,/** bitwise or int_128 with type Short. **/
    lixor_s = 2173      ,/** bitwise xor int_128 with type Short. **/
    lishftr_s = 2174    ,/** shift right int_128 with type Short. **/
    lishftl_s = 2175    ,/** shift left xor int_128 with type Short. **/
    liand_i = 2176      ,/** bitwise and int_128 with type Int. **/
    lior_i = 2177       ,/** bitwise or int_128 with type Int. **/
    lixor_i = 2178      ,/** bitwise xor int_128 with type Int. **/
    lishftr_i = 2179    ,/** shift right int_128 with type Int. **/
    lishftl_i = 2180    ,/** shift left xor int_128 with type Int. **/
    liand_l = 2181      ,/** bitwise and int_128 with type Long. **/
    lior_l = 2182       ,/** bitwise or int_128 with type Long. **/
    lixor_l = 2183      ,/** bitwise xor int_128 with type Long. **/
    lishftr_l = 2184    ,/** shift right int_128 with type Long. **/
    lishftl_l = 2185    ,/** shift left xor int_128 with type Long. **/
    liand_li = 2186     ,/** bitwise and int_128 with type LongInt. **/
    lior_li = 2187      ,/** bitwise or int_128 with type LongInt. **/
    lixor_li = 2188     ,/** bitwise xor int_128 with type LongInt. **/
    lishftr_li = 2189   ,/** shift right int_128 with type LongInt. **/
    lishftl_li = 2190   ,/** shift left xor int_128 with type LongInt. **/
    liand_ll = 2191     ,/** bitwise and int_128 with type LongLong. **/
    lior_ll = 2192      ,/** bitwise or int_128 with type LongLong. **/
    lixor_ll = 2193     ,/** bitwise xor int_128 with type LongLong. **/
    lishftr_ll = 2194   ,/** shift right int_128 with type LongLong. **/
    lishftl_ll = 2195   ,/** shift left xor int_128 with type LongLong. **/
    lidup = 2196        ,/** duplicate a int_128 on the stack. **/
    lidup2 = 2197       ,/** duplicate a int_128 2 times on the stack. **/
    lidup3 = 2198       ,/** duplicate a int_128 3 times on the stack. **/
    lidup4 = 2199       ,/** duplicate a int_128 4 times on the stack. **/
    lidup5 = 2200       ,/** duplicate a int_128 5 times on the stack. **/
    liset = 2201        ,/** set a int_128 from stack into a field on base pointer. **/
    liget = 2202        ,/** get a int_128 from a field on base pointer to stack. **/
    livset = 2203       ,/** set a int_128 from value into a field on base pointer. **/
    lisget = 2204       ,/** get a int_128 from a field on base pointer to stack using address from stack. **/
    lisset = 2205       ,/** set a int_128 from stack into a field on base pointer using address from stack. **/
    lisetl = 2206       ,/** set a int_128 from local variable into a field on base pointer. **/
    liinc_1 = 2207      ,/** increment int_128 by 1 on stack. **/
    liinc_2 = 2208      ,/** increment int_128 by 2 on stack. **/
    listinc_1 = 2209    ,/** increment int_128 by 1 on stack. **/
    listinc_2 = 2210    ,/** increment int_128 by 2 on stack. **/
    lireturn = 2211     ,/** return a int_128 into the main stack. **/
    limainst = 2212     ,/** store a int_128 from main stack in a local variable.. **/
    limainst_0 = 2213   ,/** store a int_128 from main stack in local variable 0. **/
    limainst_1 = 2214   ,/** store a int_128 from main stack in local variable 1. **/
    limainst_2 = 2215   ,/** store a int_128 from main stack in local variable 2. **/
    limainst_3 = 2216   ,/** store a int_128 from main stack in local variable 3. **/
    liprint = 2217      ,/** print a int_128 from stack. **/
    liuprint = 2218     ,/** print a unsigned uint_128 from stack. **/
    llconst = 2219      ,/** push a const int_256 into the stack. **/
    llconst_0 = 2220    ,/** push a const int_256 into the stack (value = 0). **/
    llconst_1 = 2221    ,/** push a const int_256 into the stack (value = 1). **/
    llconst_2 = 2222    ,/** push a const int_256 into the stack (value = 2). **/
    llconst_3 = 2223    ,/** push a const int_256 into the stack (value = 3). **/
    llconst_4 = 2224    ,/** push a const int_256 into the stack (value = 4). **/
    llconst_5 = 2225    ,/** push a const int_256 into the stack (value = 5). **/
    llconst_6 = 2226    ,/** push a const int_256 into the stack (value = 6). **/
    llconst_9 = 2227    ,/** push a const int_256 into the stack (value = 9). **/
    llconst_10 = 2228   ,/** push a const int_256 into the stack (value = 10). **/
    llconst_11 = 2229   ,/** push a const int_256 into the stack (value = 11). **/
    llconst_12 = 2230   ,/** push a const int_256 into the stack (value = 12). **/
    llload = 2231       ,/** load a int_256 into the stack from local variable. **/
    llload_0 = 2232     ,/** load a int_256 into the stack from local variable 0. **/
    llload_1 = 2233     ,/** load a int_256 into the stack from local variable 1. **/
    llload_2 = 2234     ,/** load a int_256 into the stack from local variable 2. **/
    llload_3 = 2235     ,/** load a int_256 into the stack from local variable 3. **/
    llload_4 = 2236     ,/** load a int_256 into the stack from local variable 4. **/
    llstore = 2237      ,/** store a int_256 from stack into local variable. **/
    llstore_0 = 2238    ,/** store a int_256 from stack into local variable 0. **/
    llstore_1 = 2239    ,/** store a int_256 from stack into local variable 1. **/
    llstore_2 = 2240    ,/** store a int_256 from stack into local variable 2. **/
    llstore_3 = 2241    ,/** store a int_256 from stack into local variable 3. **/
    llstore_4 = 2242    ,/** store a int_256 from stack into local variable 4. **/
    llcast_b = 2243     ,/** cast int_256 to type Byte. **/
    llucast_b = 2244    ,/** cast unsigned uint_256 to type Byte. **/
    lladd_b = 2245      ,/** add int_256 with type Byte. **/
    lluadd_b = 2246     ,/** add unsigned uint_256 with type Byte. **/
    llsub_b = 2247      ,/** subtract int_256 with type Byte. **/
    llusub_b = 2248     ,/** subtract unsigned uint_256 with type Byte. **/
    llmul_b = 2249      ,/** multiply int_256 with type Byte. **/
    llumul_b = 2250     ,/** multiply unsigned uint_256 with type Byte. **/
    lldiv_b = 2251      ,/** divide int_256 with type Byte. **/
    lludiv_b = 2252     ,/** divide unsigned uint_256 with type Byte. **/
    llcmpl_b = 2253     ,/** compare int_256 less than type Byte. **/
    llucmpl_b = 2254    ,/** compare unsigned uint_256 less than type Byte. **/
    llcmpg_b = 2255     ,/** compare int_256 greater than type Byte. **/
    llucmpg_b = 2256    ,/** compare unsigned uint_256 greater than type Byte. **/
    llcmpe_b = 2257     ,/** compare int_256 equal with type Byte. **/
    llucmpe_b = 2258    ,/** compare unsigned uint_256 equal with type Byte. **/
    llcmple_b = 2259    ,/** compare int_256 less than or equal to type Byte. **/
    llucmple_b = 2260   ,/** compare unsigned uint_256 less than or equal to type Byte. **/
    llcmpge_b = 2261    ,/** compare int_256 greater than or equal to type Byte. **/
    llucmpge_b = 2262   ,/** compare unsigned uint_256 greater than or equal to type Byte. **/
    llcmpne_b = 2263    ,/** compare int_256 not equal with type Byte. **/
    llucmpne_b = 2264   ,/** compare unsigned uint_256 not equal with type Byte. **/
    llcast_s = 2265     ,/** cast int_256 to type Short. **/
    llucast_s = 2266    ,/** cast unsigned uint_256 to type Short. **/
    lladd_s = 2267      ,/** add int_256 with type Short. **/
    lluadd_s = 2268     ,/** add unsigned uint_256 with type Short. **/
    llsub_s = 2269      ,/** subtract int_256 with type Short. **/
    llusub_s = 2270     ,/** subtract unsigned uint_256 with type Short. **/
    llmul_s = 2271      ,/** multiply int_256 with type Short. **/
    llumul_s = 2272     ,/** multiply unsigned uint_256 with type Short. **/
    lldiv_s = 2273      ,/** divide int_256 with type Short. **/
    lludiv_s = 2274     ,/** divide unsigned uint_256 with type Short. **/
    llcmpl_s = 2275     ,/** compare int_256 less than type Short. **/
    llucmpl_s = 2276    ,/** compare unsigned uint_256 less than type Short. **/
    llcmpg_s = 2277     ,/** compare int_256 greater than type Short. **/
    llucmpg_s = 2278    ,/** compare unsigned uint_256 greater than type Short. **/
    llcmpe_s = 2279     ,/** compare int_256 equal with type Short. **/
    llucmpe_s = 2280    ,/** compare unsigned uint_256 equal with type Short. **/
    llcmple_s = 2281    ,/** compare int_256 less than or equal to type Short. **/
    llucmple_s = 2282   ,/** compare unsigned uint_256 less than or equal to type Short. **/
    llcmpge_s = 2283    ,/** compare int_256 greater than or equal to type Short. **/
    llucmpge_s = 2284   ,/** compare unsigned uint_256 greater than or equal to type Short. **/
    llcmpne_s = 2285    ,/** compare int_256 not equal with type Short. **/
    llucmpne_s = 2286   ,/** compare unsigned uint_256 not equal with type Short. **/
    llcast_i = 2287     ,/** cast int_256 to type Int. **/
    llucast_i = 2288    ,/** cast unsigned uint_256 to type Int. **/
    lladd_i = 2289      ,/** add int_256 with type Int. **/
    lluadd_i = 2290     ,/** add unsigned uint_256 with type Int. **/
    llsub_i = 2291      ,/** subtract int_256 with type Int. **/
    llusub_i = 2292     ,/** subtract unsigned uint_256 with type Int. **/
    llmul_i = 2293      ,/** multiply int_256 with type Int. **/
    llumul_i = 2294     ,/** multiply unsigned uint_256 with type Int. **/
    lldiv_i = 2295      ,/** divide int_256 with type Int. **/
    lludiv_i = 2296     ,/** divide unsigned uint_256 with type Int. **/
    llcmpl_i = 2297     ,/** compare int_256 less than type Int. **/
    llucmpl_i = 2298    ,/** compare unsigned uint_256 less than type Int. **/
    llcmpg_i = 2299     ,/** compare int_256 greater than type Int. **/
    llucmpg_i = 2300    ,/** compare unsigned uint_256 greater than type Int. **/
    llcmpe_i = 2301     ,/** compare int_256 equal with type Int. **/
    llucmpe_i = 2302    ,/** compare unsigned uint_256 equal with type Int. **/
    llcmple_i = 2303    ,/** compare int_256 less than or equal to type Int. **/
    llucmple_i = 2304   ,/** compare unsigned uint_256 less than or equal to type Int. **/
    llcmpge_i = 2305    ,/** compare int_256 greater than or equal to type Int. **/
    llucmpge_i = 2306   ,/** compare unsigned uint_256 greater than or equal to type Int. **/
    llcmpne_i = 2307    ,/** compare int_256 not equal with type Int. **/
    llucmpne_i = 2308   ,/** compare unsigned uint_256 not equal with type Int. **/
    llcast_l = 2309     ,/** cast int_256 to type Long. **/
    llucast_l = 2310    ,/** cast unsigned uint_256 to type Long. **/
    lladd_l = 2311      ,/** add int_256 with type Long. **/
    lluadd_l = 2312     ,/** add unsigned uint_256 with type Long. **/
    llsub_l = 2313      ,/** subtract int_256 with type Long. **/
    llusub_l = 2314     ,/** subtract unsigned uint_256 with type Long. **/
    llmul_l = 2315      ,/** multiply int_256 with type Long. **/
    llumul_l = 2316     ,/** multiply unsigned uint_256 with type Long. **/
    lldiv_l = 2317      ,/** divide int_256 with type Long. **/
    lludiv_l = 2318     ,/** divide unsigned uint_256 with type Long. **/
    llcmpl_l = 2319     ,/** compare int_256 less than type Long. **/
    llucmpl_l = 2320    ,/** compare unsigned uint_256 less than type Long. **/
    llcmpg_l = 2321     ,/** compare int_256 greater than type Long. **/
    llucmpg_l = 2322    ,/** compare unsigned uint_256 greater than type Long. **/
    llcmpe_l = 2323     ,/** compare int_256 equal with type Long. **/
    llucmpe_l = 2324    ,/** compare unsigned uint_256 equal with type Long. **/
    llcmple_l = 2325    ,/** compare int_256 less than or equal to type Long. **/
    llucmple_l = 2326   ,/** compare unsigned uint_256 less than or equal to type Long. **/
    llcmpge_l = 2327    ,/** compare int_256 greater than or equal to type Long. **/
    llucmpge_l = 2328   ,/** compare unsigned uint_256 greater than or equal to type Long. **/
    llcmpne_l = 2329    ,/** compare int_256 not equal with type Long. **/
    llucmpne_l = 2330   ,/** compare unsigned uint_256 not equal with type Long. **/
    llcast_li = 2331    ,/** cast int_256 to type LongInt. **/
    llucast_li = 2332   ,/** cast unsigned uint_256 to type LongInt. **/
    lladd_li = 2333     ,/** add int_256 with type LongInt. **/
    lluadd_li = 2334    ,/** add unsigned uint_256 with type LongInt. **/
    llsub_li = 2335     ,/** subtract int_256 with type LongInt. **/
    llusub_li = 2336    ,/** subtract unsigned uint_256 with type LongInt. **/
    llmul_li = 2337     ,/** multiply int_256 with type LongInt. **/
    llumul_li = 2338    ,/** multiply unsigned uint_256 with type LongInt. **/
    lldiv_li = 2339     ,/** divide int_256 with type LongInt. **/
    lludiv_li = 2340    ,/** divide unsigned uint_256 with type LongInt. **/
    llcmpl_li = 2341    ,/** compare int_256 less than type LongInt. **/
    llucmpl_li = 2342   ,/** compare unsigned uint_256 less than type LongInt. **/
    llcmpg_li = 2343    ,/** compare int_256 greater than type LongInt. **/
    llucmpg_li = 2344   ,/** compare unsigned uint_256 greater than type LongInt. **/
    llcmpe_li = 2345    ,/** compare int_256 equal with type LongInt. **/
    llucmpe_li = 2346   ,/** compare unsigned uint_256 equal with type LongInt. **/
    llcmple_li = 2347   ,/** compare int_256 less than or equal to type LongInt. **/
    llucmple_li = 2348  ,/** compare unsigned uint_256 less than or equal to type LongInt. **/
    llcmpge_li = 2349   ,/** compare int_256 greater than or equal to type LongInt. **/
    llucmpge_li = 2350  ,/** compare unsigned uint_256 greater than or equal to type LongInt. **/
    llcmpne_li = 2351   ,/** compare int_256 not equal with type LongInt. **/
    llucmpne_li = 2352  ,/** compare unsigned uint_256 not equal with type LongInt. **/
    llcast_ll = 2353    ,/** cast int_256 to type LongLong. **/
    llucast_ll = 2354   ,/** cast unsigned uint_256 to type LongLong. **/
    lladd_ll = 2355     ,/** add int_256 with type LongLong. **/
    lluadd_ll = 2356    ,/** add unsigned uint_256 with type LongLong. **/
    llsub_ll = 2357     ,/** subtract int_256 with type LongLong. **/
    llusub_ll = 2358    ,/** subtract unsigned uint_256 with type LongLong. **/
    llmul_ll = 2359     ,/** multiply int_256 with type LongLong. **/
    llumul_ll = 2360    ,/** multiply unsigned uint_256 with type LongLong. **/
    lldiv_ll = 2361     ,/** divide int_256 with type LongLong. **/
    lludiv_ll = 2362    ,/** divide unsigned uint_256 with type LongLong. **/
    llcmpl_ll = 2363    ,/** compare int_256 less than type LongLong. **/
    llucmpl_ll = 2364   ,/** compare unsigned uint_256 less than type LongLong. **/
    llcmpg_ll = 2365    ,/** compare int_256 greater than type LongLong. **/
    llucmpg_ll = 2366   ,/** compare unsigned uint_256 greater than type LongLong. **/
    llcmpe_ll = 2367    ,/** compare int_256 equal with type LongLong. **/
    llucmpe_ll = 2368   ,/** compare unsigned uint_256 equal with type LongLong. **/
    llcmple_ll = 2369   ,/** compare int_256 less than or equal to type LongLong. **/
    llucmple_ll = 2370  ,/** compare unsigned uint_256 less than or equal to type LongLong. **/
    llcmpge_ll = 2371   ,/** compare int_256 greater than or equal to type LongLong. **/
    llucmpge_ll = 2372  ,/** compare unsigned uint_256 greater than or equal to type LongLong. **/
    llcmpne_ll = 2373   ,/** compare int_256 not equal with type LongLong. **/
    llucmpne_ll = 2374  ,/** compare unsigned uint_256 not equal with type LongLong. **/
    llcast_f = 2375     ,/** cast int_256 to type Float. **/
    llucast_f = 2376    ,/** cast unsigned uint_256 to type Float. **/
    lladd_f = 2377      ,/** add int_256 with type Float. **/
    lluadd_f = 2378     ,/** add unsigned uint_256 with type Float. **/
    llsub_f = 2379      ,/** subtract int_256 with type Float. **/
    llusub_f = 2380     ,/** subtract unsigned uint_256 with type Float. **/
    llmul_f = 2381      ,/** multiply int_256 with type Float. **/
    llumul_f = 2382     ,/** multiply unsigned uint_256 with type Float. **/
    lldiv_f = 2383      ,/** divide int_256 with type Float. **/
    lludiv_f = 2384     ,/** divide unsigned uint_256 with type Float. **/
    llcmpl_f = 2385     ,/** compare int_256 less than type Float. **/
    llucmpl_f = 2386    ,/** compare unsigned uint_256 less than type Float. **/
    llcmpg_f = 2387     ,/** compare int_256 greater than type Float. **/
    llucmpg_f = 2388    ,/** compare unsigned uint_256 greater than type Float. **/
    llcmpe_f = 2389     ,/** compare int_256 equal with type Float. **/
    llucmpe_f = 2390    ,/** compare unsigned uint_256 equal with type Float. **/
    llcmple_f = 2391    ,/** compare int_256 less than or equal to type Float. **/
    llucmple_f = 2392   ,/** compare unsigned uint_256 less than or equal to type Float. **/
    llcmpge_f = 2393    ,/** compare int_256 greater than or equal to type Float. **/
    llucmpge_f = 2394   ,/** compare unsigned uint_256 greater than or equal to type Float. **/
    llcmpne_f = 2395    ,/** compare int_256 not equal with type Float. **/
    llucmpne_f = 2396   ,/** compare unsigned uint_256 not equal with type Float. **/
    llcast_d = 2397     ,/** cast int_256 to type Double. **/
    llucast_d = 2398    ,/** cast unsigned uint_256 to type Double. **/
    lladd_d = 2399      ,/** add int_256 with type Double. **/
    lluadd_d = 2400     ,/** add unsigned uint_256 with type Double. **/
    llsub_d = 2401      ,/** subtract int_256 with type Double. **/
    llusub_d = 2402     ,/** subtract unsigned uint_256 with type Double. **/
    llmul_d = 2403      ,/** multiply int_256 with type Double. **/
    llumul_d = 2404     ,/** multiply unsigned uint_256 with type Double. **/
    lldiv_d = 2405      ,/** divide int_256 with type Double. **/
    lludiv_d = 2406     ,/** divide unsigned uint_256 with type Double. **/
    llcmpl_d = 2407     ,/** compare int_256 less than type Double. **/
    llucmpl_d = 2408    ,/** compare unsigned uint_256 less than type Double. **/
    llcmpg_d = 2409     ,/** compare int_256 greater than type Double. **/
    llucmpg_d = 2410    ,/** compare unsigned uint_256 greater than type Double. **/
    llcmpe_d = 2411     ,/** compare int_256 equal with type Double. **/
    llucmpe_d = 2412    ,/** compare unsigned uint_256 equal with type Double. **/
    llcmple_d = 2413    ,/** compare int_256 less than or equal to type Double. **/
    llucmple_d = 2414   ,/** compare unsigned uint_256 less than or equal to type Double. **/
    llcmpge_d = 2415    ,/** compare int_256 greater than or equal to type Double. **/
    llucmpge_d = 2416   ,/** compare unsigned uint_256 greater than or equal to type Double. **/
    llcmpne_d = 2417    ,/** compare int_256 not equal with type Double. **/
    llucmpne_d = 2418   ,/** compare unsigned uint_256 not equal with type Double. **/
    llcast_df = 2419    ,/** cast int_256 to type DoubleFloat. **/
    llucast_df = 2420   ,/** cast unsigned uint_256 to type DoubleFloat. **/
    lladd_df = 2421     ,/** add int_256 with type DoubleFloat. **/
    lluadd_df = 2422    ,/** add unsigned uint_256 with type DoubleFloat. **/
    llsub_df = 2423     ,/** subtract int_256 with type DoubleFloat. **/
    llusub_df = 2424    ,/** subtract unsigned uint_256 with type DoubleFloat. **/
    llmul_df = 2425     ,/** multiply int_256 with type DoubleFloat. **/
    llumul_df = 2426    ,/** multiply unsigned uint_256 with type DoubleFloat. **/
    lldiv_df = 2427     ,/** divide int_256 with type DoubleFloat. **/
    lludiv_df = 2428    ,/** divide unsigned uint_256 with type DoubleFloat. **/
    llcmpl_df = 2429    ,/** compare int_256 less than type DoubleFloat. **/
    llucmpl_df = 2430   ,/** compare unsigned uint_256 less than type DoubleFloat. **/
    llcmpg_df = 2431    ,/** compare int_256 greater than type DoubleFloat. **/
    llucmpg_df = 2432   ,/** compare unsigned uint_256 greater than type DoubleFloat. **/
    llcmpe_df = 2433    ,/** compare int_256 equal with type DoubleFloat. **/
    llucmpe_df = 2434   ,/** compare unsigned uint_256 equal with type DoubleFloat. **/
    llcmple_df = 2435   ,/** compare int_256 less than or equal to type DoubleFloat. **/
    llucmple_df = 2436  ,/** compare unsigned uint_256 less than or equal to type DoubleFloat. **/
    llcmpge_df = 2437   ,/** compare int_256 greater than or equal to type DoubleFloat. **/
    llucmpge_df = 2438  ,/** compare unsigned uint_256 greater than or equal to type DoubleFloat. **/
    llcmpne_df = 2439   ,/** compare int_256 not equal with type DoubleFloat. **/
    llucmpne_df = 2440  ,/** compare unsigned uint_256 not equal with type DoubleFloat. **/
    llcast_dd = 2441    ,/** cast int_256 to type DoubleDouble. **/
    llucast_dd = 2442   ,/** cast unsigned uint_256 to type DoubleDouble. **/
    lladd_dd = 2443     ,/** add int_256 with type DoubleDouble. **/
    lluadd_dd = 2444    ,/** add unsigned uint_256 with type DoubleDouble. **/
    llsub_dd = 2445     ,/** subtract int_256 with type DoubleDouble. **/
    llusub_dd = 2446    ,/** subtract unsigned uint_256 with type DoubleDouble. **/
    llmul_dd = 2447     ,/** multiply int_256 with type DoubleDouble. **/
    llumul_dd = 2448    ,/** multiply unsigned uint_256 with type DoubleDouble. **/
    lldiv_dd = 2449     ,/** divide int_256 with type DoubleDouble. **/
    lludiv_dd = 2450    ,/** divide unsigned uint_256 with type DoubleDouble. **/
    llcmpl_dd = 2451    ,/** compare int_256 less than type DoubleDouble. **/
    llucmpl_dd = 2452   ,/** compare unsigned uint_256 less than type DoubleDouble. **/
    llcmpg_dd = 2453    ,/** compare int_256 greater than type DoubleDouble. **/
    llucmpg_dd = 2454   ,/** compare unsigned uint_256 greater than type DoubleDouble. **/
    llcmpe_dd = 2455    ,/** compare int_256 equal with type DoubleDouble. **/
    llucmpe_dd = 2456   ,/** compare unsigned uint_256 equal with type DoubleDouble. **/
    llcmple_dd = 2457   ,/** compare int_256 less than or equal to type DoubleDouble. **/
    llucmple_dd = 2458  ,/** compare unsigned uint_256 less than or equal to type DoubleDouble. **/
    llcmpge_dd = 2459   ,/** compare int_256 greater than or equal to type DoubleDouble. **/
    llucmpge_dd = 2460  ,/** compare unsigned uint_256 greater than or equal to type DoubleDouble. **/
    llcmpne_dd = 2461   ,/** compare int_256 not equal with type DoubleDouble. **/
    llucmpne_dd = 2462  ,/** compare unsigned uint_256 not equal with type DoubleDouble. **/
    llmod_b = 2463      ,/** modulo int_256 with type Byte. **/
    llcast_ub = 2464    ,/** cast int_256 to unsigned type Byte. **/
    llucast_ub = 2465   ,/** cast unsigned uint_256 to unsigned type Byte. **/
    lladd_ub = 2466     ,/** add int_256 with unsigned type Byte. **/
    lluadd_ub = 2467    ,/** add unsigned uint_256 with unsigned type Byte. **/
    llsub_ub = 2468     ,/** subtract int_256 with unsigned type Byte. **/
    llusub_ub = 2469    ,/** subtract unsigned uint_256 with unsigned type Byte. **/
    llmul_ub = 2470     ,/** multiply int_256 with unsigned type Byte. **/
    llumul_ub = 2471    ,/** multiply unsigned uint_256 with unsigned type Byte. **/
    lldiv_ub = 2472     ,/** divide int_256 with unsigned type Byte. **/
    lludiv_ub = 2473    ,/** divide unsigned uint_256 with unsigned type Byte. **/
    llcmpl_ub = 2474    ,/** compare int_256 less than unsigned type Byte. **/
    llucmpl_ub = 2475   ,/** compare unsigned uint_256 less than unsigned type Byte. **/
    llcmpg_ub = 2476    ,/** compare int_256 greater than unsigned type Byte. **/
    llucmpg_ub = 2477   ,/** compare unsigned uint_256 greater than unsigned type Byte. **/
    llcmpe_ub = 2478    ,/** compare int_256 equal with unsigned type Byte. **/
    llucmpe_ub = 2479   ,/** compare unsigned uint_256 equal with unsigned type Byte. **/
    llcmple_ub = 2480   ,/** compare int_256 less than or equal to unsigned type Byte. **/
    llucmple_ub = 2481  ,/** compare unsigned uint_256 less than or equal to unsigned type Byte. **/
    llcmpge_ub = 2482   ,/** compare int_256 greater than or equal to unsigned type Byte. **/
    llucmpge_ub = 2483  ,/** compare unsigned uint_256 greater than or equal to unsigned type Byte. **/
    llcmpne_ub = 2484   ,/** compare int_256 not equal with unsigned type Byte. **/
    llucmpne_ub = 2485  ,/** compare unsigned uint_256 not equal with unsigned type Byte. **/
    llmod_s = 2486      ,/** modulo int_256 with type Short. **/
    llcast_us = 2487    ,/** cast int_256 to unsigned type Short. **/
    llucast_us = 2488   ,/** cast unsigned uint_256 to unsigned type Short. **/
    lladd_us = 2489     ,/** add int_256 with unsigned type Short. **/
    lluadd_us = 2490    ,/** add unsigned uint_256 with unsigned type Short. **/
    llsub_us = 2491     ,/** subtract int_256 with unsigned type Short. **/
    llusub_us = 2492    ,/** subtract unsigned uint_256 with unsigned type Short. **/
    llmul_us = 2493     ,/** multiply int_256 with unsigned type Short. **/
    llumul_us = 2494    ,/** multiply unsigned uint_256 with unsigned type Short. **/
    lldiv_us = 2495     ,/** divide int_256 with unsigned type Short. **/
    lludiv_us = 2496    ,/** divide unsigned uint_256 with unsigned type Short. **/
    llcmpl_us = 2497    ,/** compare int_256 less than unsigned type Short. **/
    llucmpl_us = 2498   ,/** compare unsigned uint_256 less than unsigned type Short. **/
    llcmpg_us = 2499    ,/** compare int_256 greater than unsigned type Short. **/
    llucmpg_us = 2500   ,/** compare unsigned uint_256 greater than unsigned type Short. **/
    llcmpe_us = 2501    ,/** compare int_256 equal with unsigned type Short. **/
    llucmpe_us = 2502   ,/** compare unsigned uint_256 equal with unsigned type Short. **/
    llcmple_us = 2503   ,/** compare int_256 less than or equal to unsigned type Short. **/
    llucmple_us = 2504  ,/** compare unsigned uint_256 less than or equal to unsigned type Short. **/
    llcmpge_us = 2505   ,/** compare int_256 greater than or equal to unsigned type Short. **/
    llucmpge_us = 2506  ,/** compare unsigned uint_256 greater than or equal to unsigned type Short. **/
    llcmpne_us = 2507   ,/** compare int_256 not equal with unsigned type Short. **/
    llucmpne_us = 2508  ,/** compare unsigned uint_256 not equal with unsigned type Short. **/
    llmod_i = 2509      ,/** modulo int_256 with type Int. **/
    llcast_ui = 2510    ,/** cast int_256 to unsigned type Int. **/
    llucast_ui = 2511   ,/** cast unsigned uint_256 to unsigned type Int. **/
    lladd_ui = 2512     ,/** add int_256 with unsigned type Int. **/
    lluadd_ui = 2513    ,/** add unsigned uint_256 with unsigned type Int. **/
    llsub_ui = 2514     ,/** subtract int_256 with unsigned type Int. **/
    llusub_ui = 2515    ,/** subtract unsigned uint_256 with unsigned type Int. **/
    llmul_ui = 2516     ,/** multiply int_256 with unsigned type Int. **/
    llumul_ui = 2517    ,/** multiply unsigned uint_256 with unsigned type Int. **/
    lldiv_ui = 2518     ,/** divide int_256 with unsigned type Int. **/
    lludiv_ui = 2519    ,/** divide unsigned uint_256 with unsigned type Int. **/
    llcmpl_ui = 2520    ,/** compare int_256 less than unsigned type Int. **/
    llucmpl_ui = 2521   ,/** compare unsigned uint_256 less than unsigned type Int. **/
    llcmpg_ui = 2522    ,/** compare int_256 greater than unsigned type Int. **/
    llucmpg_ui = 2523   ,/** compare unsigned uint_256 greater than unsigned type Int. **/
    llcmpe_ui = 2524    ,/** compare int_256 equal with unsigned type Int. **/
    llucmpe_ui = 2525   ,/** compare unsigned uint_256 equal with unsigned type Int. **/
    llcmple_ui = 2526   ,/** compare int_256 less than or equal to unsigned type Int. **/
    llucmple_ui = 2527  ,/** compare unsigned uint_256 less than or equal to unsigned type Int. **/
    llcmpge_ui = 2528   ,/** compare int_256 greater than or equal to unsigned type Int. **/
    llucmpge_ui = 2529  ,/** compare unsigned uint_256 greater than or equal to unsigned type Int. **/
    llcmpne_ui = 2530   ,/** compare int_256 not equal with unsigned type Int. **/
    llucmpne_ui = 2531  ,/** compare unsigned uint_256 not equal with unsigned type Int. **/
    llmod_l = 2532      ,/** modulo int_256 with type Long. **/
    llcast_ul = 2533    ,/** cast int_256 to unsigned type Long. **/
    llucast_ul = 2534   ,/** cast unsigned uint_256 to unsigned type Long. **/
    lladd_ul = 2535     ,/** add int_256 with unsigned type Long. **/
    lluadd_ul = 2536    ,/** add unsigned uint_256 with unsigned type Long. **/
    llsub_ul = 2537     ,/** subtract int_256 with unsigned type Long. **/
    llusub_ul = 2538    ,/** subtract unsigned uint_256 with unsigned type Long. **/
    llmul_ul = 2539     ,/** multiply int_256 with unsigned type Long. **/
    llumul_ul = 2540    ,/** multiply unsigned uint_256 with unsigned type Long. **/
    lldiv_ul = 2541     ,/** divide int_256 with unsigned type Long. **/
    lludiv_ul = 2542    ,/** divide unsigned uint_256 with unsigned type Long. **/
    llcmpl_ul = 2543    ,/** compare int_256 less than unsigned type Long. **/
    llucmpl_ul = 2544   ,/** compare unsigned uint_256 less than unsigned type Long. **/
    llcmpg_ul = 2545    ,/** compare int_256 greater than unsigned type Long. **/
    llucmpg_ul = 2546   ,/** compare unsigned uint_256 greater than unsigned type Long. **/
    llcmpe_ul = 2547    ,/** compare int_256 equal with unsigned type Long. **/
    llucmpe_ul = 2548   ,/** compare unsigned uint_256 equal with unsigned type Long. **/
    llcmple_ul = 2549   ,/** compare int_256 less than or equal to unsigned type Long. **/
    llucmple_ul = 2550  ,/** compare unsigned uint_256 less than or equal to unsigned type Long. **/
    llcmpge_ul = 2551   ,/** compare int_256 greater than or equal to unsigned type Long. **/
    llucmpge_ul = 2552  ,/** compare unsigned uint_256 greater than or equal to unsigned type Long. **/
    llcmpne_ul = 2553   ,/** compare int_256 not equal with unsigned type Long. **/
    llucmpne_ul = 2554  ,/** compare unsigned uint_256 not equal with unsigned type Long. **/
    llmod_li = 2555     ,/** modulo int_256 with type LongInt. **/
    llcast_uli = 2556   ,/** cast int_256 to unsigned type LongInt. **/
    llucast_uli = 2557  ,/** cast unsigned uint_256 to unsigned type LongInt. **/
    lladd_uli = 2558    ,/** add int_256 with unsigned type LongInt. **/
    lluadd_uli = 2559   ,/** add unsigned uint_256 with unsigned type LongInt. **/
    llsub_uli = 2560    ,/** subtract int_256 with unsigned type LongInt. **/
    llusub_uli = 2561   ,/** subtract unsigned uint_256 with unsigned type LongInt. **/
    llmul_uli = 2562    ,/** multiply int_256 with unsigned type LongInt. **/
    llumul_uli = 2563   ,/** multiply unsigned uint_256 with unsigned type LongInt. **/
    lldiv_uli = 2564    ,/** divide int_256 with unsigned type LongInt. **/
    lludiv_uli = 2565   ,/** divide unsigned uint_256 with unsigned type LongInt. **/
    llcmpl_uli = 2566   ,/** compare int_256 less than unsigned type LongInt. **/
    llucmpl_uli = 2567  ,/** compare unsigned uint_256 less than unsigned type LongInt. **/
    llcmpg_uli = 2568   ,/** compare int_256 greater than unsigned type LongInt. **/
    llucmpg_uli = 2569  ,/** compare unsigned uint_256 greater than unsigned type LongInt. **/
    llcmpe_uli = 2570   ,/** compare int_256 equal with unsigned type LongInt. **/
    llucmpe_uli = 2571  ,/** compare unsigned uint_256 equal with unsigned type LongInt. **/
    llcmple_uli = 2572  ,/** compare int_256 less than or equal to unsigned type LongInt. **/
    llucmple_uli = 2573 ,/** compare unsigned uint_256 less than or equal to unsigned type LongInt. **/
    llcmpge_uli = 2574  ,/** compare int_256 greater than or equal to unsigned type LongInt. **/
    llucmpge_uli = 2575 ,/** compare unsigned uint_256 greater than or equal to unsigned type LongInt. **/
    llcmpne_uli = 2576  ,/** compare int_256 not equal with unsigned type LongInt. **/
    llucmpne_uli = 2577 ,/** compare unsigned uint_256 not equal with unsigned type LongInt. **/
    llmod_ll = 2578     ,/** modulo int_256 with type LongLong. **/
    llcast_ull = 2579   ,/** cast int_256 to unsigned type LongLong. **/
    llucast_ull = 2580  ,/** cast unsigned uint_256 to unsigned type LongLong. **/
    lladd_ull = 2581    ,/** add int_256 with unsigned type LongLong. **/
    lluadd_ull = 2582   ,/** add unsigned uint_256 with unsigned type LongLong. **/
    llsub_ull = 2583    ,/** subtract int_256 with unsigned type LongLong. **/
    llusub_ull = 2584   ,/** subtract unsigned uint_256 with unsigned type LongLong. **/
    llmul_ull = 2585    ,/** multiply int_256 with unsigned type LongLong. **/
    llumul_ull = 2586   ,/** multiply unsigned uint_256 with unsigned type LongLong. **/
    lldiv_ull = 2587    ,/** divide int_256 with unsigned type LongLong. **/
    lludiv_ull = 2588   ,/** divide unsigned uint_256 with unsigned type LongLong. **/
    llcmpl_ull = 2589   ,/** compare int_256 less than unsigned type LongLong. **/
    llucmpl_ull = 2590  ,/** compare unsigned uint_256 less than unsigned type LongLong. **/
    llcmpg_ull = 2591   ,/** compare int_256 greater than unsigned type LongLong. **/
    llucmpg_ull = 2592  ,/** compare unsigned uint_256 greater than unsigned type LongLong. **/
    llcmpe_ull = 2593   ,/** compare int_256 equal with unsigned type LongLong. **/
    llucmpe_ull = 2594  ,/** compare unsigned uint_256 equal with unsigned type LongLong. **/
    llcmple_ull = 2595  ,/** compare int_256 less than or equal to unsigned type LongLong. **/
    llucmple_ull = 2596 ,/** compare unsigned uint_256 less than or equal to unsigned type LongLong. **/
    llcmpge_ull = 2597  ,/** compare int_256 greater than or equal to unsigned type LongLong. **/
    llucmpge_ull = 2598 ,/** compare unsigned uint_256 greater than or equal to unsigned type LongLong. **/
    llcmpne_ull = 2599  ,/** compare int_256 not equal with unsigned type LongLong. **/
    llucmpne_ull = 2600 ,/** compare unsigned uint_256 not equal with unsigned type LongLong. **/
    lland_b = 2601      ,/** bitwise and int_256 with type Byte. **/
    llor_b = 2602       ,/** bitwise or int_256 with type Byte. **/
    llxor_b = 2603      ,/** bitwise xor int_256 with type Byte. **/
    llshftr_b = 2604    ,/** shift right int_256 with type Byte. **/
    llshftl_b = 2605    ,/** shift left xor int_256 with type Byte. **/
    lland_s = 2606      ,/** bitwise and int_256 with type Short. **/
    llor_s = 2607       ,/** bitwise or int_256 with type Short. **/
    llxor_s = 2608      ,/** bitwise xor int_256 with type Short. **/
    llshftr_s = 2609    ,/** shift right int_256 with type Short. **/
    llshftl_s = 2610    ,/** shift left xor int_256 with type Short. **/
    lland_i = 2611      ,/** bitwise and int_256 with type Int. **/
    llor_i = 2612       ,/** bitwise or int_256 with type Int. **/
    llxor_i = 2613      ,/** bitwise xor int_256 with type Int. **/
    llshftr_i = 2614    ,/** shift right int_256 with type Int. **/
    llshftl_i = 2615    ,/** shift left xor int_256 with type Int. **/
    lland_l = 2616      ,/** bitwise and int_256 with type Long. **/
    llor_l = 2617       ,/** bitwise or int_256 with type Long. **/
    llxor_l = 2618      ,/** bitwise xor int_256 with type Long. **/
    llshftr_l = 2619    ,/** shift right int_256 with type Long. **/
    llshftl_l = 2620    ,/** shift left xor int_256 with type Long. **/
    lland_li = 2621     ,/** bitwise and int_256 with type LongInt. **/
    llor_li = 2622      ,/** bitwise or int_256 with type LongInt. **/
    llxor_li = 2623     ,/** bitwise xor int_256 with type LongInt. **/
    llshftr_li = 2624   ,/** shift right int_256 with type LongInt. **/
    llshftl_li = 2625   ,/** shift left xor int_256 with type LongInt. **/
    lland_ll = 2626     ,/** bitwise and int_256 with type LongLong. **/
    llor_ll = 2627      ,/** bitwise or int_256 with type LongLong. **/
    llxor_ll = 2628     ,/** bitwise xor int_256 with type LongLong. **/
    llshftr_ll = 2629   ,/** shift right int_256 with type LongLong. **/
    llshftl_ll = 2630   ,/** shift left xor int_256 with type LongLong. **/
    lldup = 2631        ,/** duplicate a int_256 on the stack. **/
    lldup2 = 2632       ,/** duplicate a int_256 2 times on the stack. **/
    lldup3 = 2633       ,/** duplicate a int_256 3 times on the stack. **/
    lldup4 = 2634       ,/** duplicate a int_256 4 times on the stack. **/
    lldup5 = 2635       ,/** duplicate a int_256 5 times on the stack. **/
    llset = 2636        ,/** set a int_256 from stack into a field on base pointer. **/
    llget = 2637        ,/** get a int_256 from a field on base pointer to stack. **/
    llvset = 2638       ,/** set a int_256 from value into a field on base pointer. **/
    llsget = 2639       ,/** get a int_256 from a field on base pointer to stack using address from stack. **/
    llsset = 2640       ,/** set a int_256 from stack into a field on base pointer using address from stack. **/
    llsetl = 2641       ,/** set a int_256 from local variable into a field on base pointer. **/
    llinc_1 = 2642      ,/** increment int_256 by 1 on stack. **/
    llinc_2 = 2643      ,/** increment int_256 by 2 on stack. **/
    llstinc_1 = 2644    ,/** increment int_256 by 1 on stack. **/
    llstinc_2 = 2645    ,/** increment int_256 by 2 on stack. **/
    llreturn = 2646     ,/** return a int_256 into the main stack. **/
    llmainst = 2647     ,/** store a int_256 from main stack in a local variable.. **/
    llmainst_0 = 2648   ,/** store a int_256 from main stack in local variable 0. **/
    llmainst_1 = 2649   ,/** store a int_256 from main stack in local variable 1. **/
    llmainst_2 = 2650   ,/** store a int_256 from main stack in local variable 2. **/
    llmainst_3 = 2651   ,/** store a int_256 from main stack in local variable 3. **/
    llprint = 2652      ,/** print a int_256 from stack. **/
    lluprint = 2653     ,/** print a unsigned uint_256 from stack. **/
    fconst = 2654       ,/** push a const flt_32 into the stack. **/
    fconst_0 = 2655     ,/** push a const flt_32 into the stack (value = 0). **/
    fload = 2656        ,/** load a flt_32 into the stack from local variable. **/
    fload_0 = 2657      ,/** load a flt_32 into the stack from local variable 0. **/
    fload_1 = 2658      ,/** load a flt_32 into the stack from local variable 1. **/
    fload_2 = 2659      ,/** load a flt_32 into the stack from local variable 2. **/
    fload_3 = 2660      ,/** load a flt_32 into the stack from local variable 3. **/
    fload_4 = 2661      ,/** load a flt_32 into the stack from local variable 4. **/
    fstore = 2662       ,/** store a flt_32 from stack into local variable. **/
    fstore_0 = 2663     ,/** store a flt_32 from stack into local variable 0. **/
    fstore_1 = 2664     ,/** store a flt_32 from stack into local variable 1. **/
    fstore_2 = 2665     ,/** store a flt_32 from stack into local variable 2. **/
    fstore_3 = 2666     ,/** store a flt_32 from stack into local variable 3. **/
    fstore_4 = 2667     ,/** store a flt_32 from stack into local variable 4. **/
    fdup = 2668         ,/** duplicate a flt_32 on the stack. **/
    fdup2 = 2669        ,/** duplicate a flt_32 2 times on the stack. **/
    fdup3 = 2670        ,/** duplicate a flt_32 3 times on the stack. **/
    fdup4 = 2671        ,/** duplicate a flt_32 4 times on the stack. **/
    fdup5 = 2672        ,/** duplicate a flt_32 5 times on the stack. **/
    fset = 2673         ,/** set a flt_32 from stack into a field on base pointer. **/
    fget = 2674         ,/** get a flt_32 from a field on base pointer to stack. **/
    fvset = 2675        ,/** set a flt_32 from value into a field on base pointer. **/
    fsget = 2676        ,/** get a flt_32 from a field on base pointer to stack using address from stack. **/
    fsset = 2677        ,/** set a flt_32 from stack into a field on base pointer using address from stack. **/
    fsetl = 2678        ,/** set a flt_32 from local variable into a field on base pointer. **/
    finc_1 = 2679       ,/** increment flt_32 by 1 on stack. **/
    finc_2 = 2680       ,/** increment flt_32 by 2 on stack. **/
    fstinc_1 = 2681     ,/** increment flt_32 by 1 on stack. **/
    fstinc_2 = 2682     ,/** increment flt_32 by 2 on stack. **/
    freturn = 2683      ,/** return a flt_32 into the main stack. **/
    fmainst = 2684      ,/** store a flt_32 from main stack in a local variable.. **/
    fmainst_0 = 2685    ,/** store a flt_32 from main stack in local variable 0. **/
    fmainst_1 = 2686    ,/** store a flt_32 from main stack in local variable 1. **/
    fmainst_2 = 2687    ,/** store a flt_32 from main stack in local variable 2. **/
    fmainst_3 = 2688    ,/** store a flt_32 from main stack in local variable 3. **/
    dconst = 2689       ,/** push a const flt_64 into the stack. **/
    dconst_0 = 2690     ,/** push a const flt_64 into the stack (value = 0). **/
    dload = 2691        ,/** load a flt_64 into the stack from local variable. **/
    dload_0 = 2692      ,/** load a flt_64 into the stack from local variable 0. **/
    dload_1 = 2693      ,/** load a flt_64 into the stack from local variable 1. **/
    dload_2 = 2694      ,/** load a flt_64 into the stack from local variable 2. **/
    dload_3 = 2695      ,/** load a flt_64 into the stack from local variable 3. **/
    dload_4 = 2696      ,/** load a flt_64 into the stack from local variable 4. **/
    dstore = 2697       ,/** store a flt_64 from stack into local variable. **/
    dstore_0 = 2698     ,/** store a flt_64 from stack into local variable 0. **/
    dstore_1 = 2699     ,/** store a flt_64 from stack into local variable 1. **/
    dstore_2 = 2700     ,/** store a flt_64 from stack into local variable 2. **/
    dstore_3 = 2701     ,/** store a flt_64 from stack into local variable 3. **/
    dstore_4 = 2702     ,/** store a flt_64 from stack into local variable 4. **/
    ddup = 2703         ,/** duplicate a flt_64 on the stack. **/
    ddup2 = 2704        ,/** duplicate a flt_64 2 times on the stack. **/
    ddup3 = 2705        ,/** duplicate a flt_64 3 times on the stack. **/
    ddup4 = 2706        ,/** duplicate a flt_64 4 times on the stack. **/
    ddup5 = 2707        ,/** duplicate a flt_64 5 times on the stack. **/
    dset = 2708         ,/** set a flt_64 from stack into a field on base pointer. **/
    dget = 2709         ,/** get a flt_64 from a field on base pointer to stack. **/
    dvset = 2710        ,/** set a flt_64 from value into a field on base pointer. **/
    dsget = 2711        ,/** get a flt_64 from a field on base pointer to stack using address from stack. **/
    dsset = 2712        ,/** set a flt_64 from stack into a field on base pointer using address from stack. **/
    dsetl = 2713        ,/** set a flt_64 from local variable into a field on base pointer. **/
    dinc_1 = 2714       ,/** increment flt_64 by 1 on stack. **/
    dinc_2 = 2715       ,/** increment flt_64 by 2 on stack. **/
    dstinc_1 = 2716     ,/** increment flt_64 by 1 on stack. **/
    dstinc_2 = 2717     ,/** increment flt_64 by 2 on stack. **/
    dreturn = 2718      ,/** return a flt_64 into the main stack. **/
    dmainst = 2719      ,/** store a flt_64 from main stack in a local variable.. **/
    dmainst_0 = 2720    ,/** store a flt_64 from main stack in local variable 0. **/
    dmainst_1 = 2721    ,/** store a flt_64 from main stack in local variable 1. **/
    dmainst_2 = 2722    ,/** store a flt_64 from main stack in local variable 2. **/
    dmainst_3 = 2723    ,/** store a flt_64 from main stack in local variable 3. **/
    dfconst = 2724      ,/** push a const flt_128 into the stack. **/
    dfconst_0 = 2725    ,/** push a const flt_128 into the stack (value = 0). **/
    dfload = 2726       ,/** load a flt_128 into the stack from local variable. **/
    dfload_0 = 2727     ,/** load a flt_128 into the stack from local variable 0. **/
    dfload_1 = 2728     ,/** load a flt_128 into the stack from local variable 1. **/
    dfload_2 = 2729     ,/** load a flt_128 into the stack from local variable 2. **/
    dfload_3 = 2730     ,/** load a flt_128 into the stack from local variable 3. **/
    dfload_4 = 2731     ,/** load a flt_128 into the stack from local variable 4. **/
    dfstore = 2732      ,/** store a flt_128 from stack into local variable. **/
    dfstore_0 = 2733    ,/** store a flt_128 from stack into local variable 0. **/
    dfstore_1 = 2734    ,/** store a flt_128 from stack into local variable 1. **/
    dfstore_2 = 2735    ,/** store a flt_128 from stack into local variable 2. **/
    dfstore_3 = 2736    ,/** store a flt_128 from stack into local variable 3. **/
    dfstore_4 = 2737    ,/** store a flt_128 from stack into local variable 4. **/
    dfdup = 2738        ,/** duplicate a flt_128 on the stack. **/
    dfdup2 = 2739       ,/** duplicate a flt_128 2 times on the stack. **/
    dfdup3 = 2740       ,/** duplicate a flt_128 3 times on the stack. **/
    dfdup4 = 2741       ,/** duplicate a flt_128 4 times on the stack. **/
    dfdup5 = 2742       ,/** duplicate a flt_128 5 times on the stack. **/
    dfset = 2743        ,/** set a flt_128 from stack into a field on base pointer. **/
    dfget = 2744        ,/** get a flt_128 from a field on base pointer to stack. **/
    dfvset = 2745       ,/** set a flt_128 from value into a field on base pointer. **/
    dfsget = 2746       ,/** get a flt_128 from a field on base pointer to stack using address from stack. **/
    dfsset = 2747       ,/** set a flt_128 from stack into a field on base pointer using address from stack. **/
    dfsetl = 2748       ,/** set a flt_128 from local variable into a field on base pointer. **/
    dfinc_1 = 2749      ,/** increment flt_128 by 1 on stack. **/
    dfinc_2 = 2750      ,/** increment flt_128 by 2 on stack. **/
    dfstinc_1 = 2751    ,/** increment flt_128 by 1 on stack. **/
    dfstinc_2 = 2752    ,/** increment flt_128 by 2 on stack. **/
    dfreturn = 2753     ,/** return a flt_128 into the main stack. **/
    dfmainst = 2754     ,/** store a flt_128 from main stack in a local variable.. **/
    dfmainst_0 = 2755   ,/** store a flt_128 from main stack in local variable 0. **/
    dfmainst_1 = 2756   ,/** store a flt_128 from main stack in local variable 1. **/
    dfmainst_2 = 2757   ,/** store a flt_128 from main stack in local variable 2. **/
    dfmainst_3 = 2758   ,/** store a flt_128 from main stack in local variable 3. **/
    ddconst = 2759      ,/** push a const flt_256 into the stack. **/
    ddconst_0 = 2760    ,/** push a const flt_256 into the stack (value = 0). **/
    ddload = 2761       ,/** load a flt_256 into the stack from local variable. **/
    ddload_0 = 2762     ,/** load a flt_256 into the stack from local variable 0. **/
    ddload_1 = 2763     ,/** load a flt_256 into the stack from local variable 1. **/
    ddload_2 = 2764     ,/** load a flt_256 into the stack from local variable 2. **/
    ddload_3 = 2765     ,/** load a flt_256 into the stack from local variable 3. **/
    ddload_4 = 2766     ,/** load a flt_256 into the stack from local variable 4. **/
    ddstore = 2767      ,/** store a flt_256 from stack into local variable. **/
    ddstore_0 = 2768    ,/** store a flt_256 from stack into local variable 0. **/
    ddstore_1 = 2769    ,/** store a flt_256 from stack into local variable 1. **/
    ddstore_2 = 2770    ,/** store a flt_256 from stack into local variable 2. **/
    ddstore_3 = 2771    ,/** store a flt_256 from stack into local variable 3. **/
    ddstore_4 = 2772    ,/** store a flt_256 from stack into local variable 4. **/
    dddup = 2773        ,/** duplicate a flt_256 on the stack. **/
    dddup2 = 2774       ,/** duplicate a flt_256 2 times on the stack. **/
    dddup3 = 2775       ,/** duplicate a flt_256 3 times on the stack. **/
    dddup4 = 2776       ,/** duplicate a flt_256 4 times on the stack. **/
    dddup5 = 2777       ,/** duplicate a flt_256 5 times on the stack. **/
    ddset = 2778        ,/** set a flt_256 from stack into a field on base pointer. **/
    ddget = 2779        ,/** get a flt_256 from a field on base pointer to stack. **/
    ddvset = 2780       ,/** set a flt_256 from value into a field on base pointer. **/
    ddsget = 2781       ,/** get a flt_256 from a field on base pointer to stack using address from stack. **/
    ddsset = 2782       ,/** set a flt_256 from stack into a field on base pointer using address from stack. **/
    ddsetl = 2783       ,/** set a flt_256 from local variable into a field on base pointer. **/
    ddinc_1 = 2784      ,/** increment flt_256 by 1 on stack. **/
    ddinc_2 = 2785      ,/** increment flt_256 by 2 on stack. **/
    ddstinc_1 = 2786    ,/** increment flt_256 by 1 on stack. **/
    ddstinc_2 = 2787    ,/** increment flt_256 by 2 on stack. **/
    ddreturn = 2788     ,/** return a flt_256 into the main stack. **/
    ddmainst = 2789     ,/** store a flt_256 from main stack in a local variable.. **/
    ddmainst_0 = 2790   ,/** store a flt_256 from main stack in local variable 0. **/
    ddmainst_1 = 2791   ,/** store a flt_256 from main stack in local variable 1. **/
    ddmainst_2 = 2792   ,/** store a flt_256 from main stack in local variable 2. **/
    ddmainst_3 = 2793   ,/** store a flt_256 from main stack in local variable 3. **/
    aconst = 2794       ,/** push a const pointer into the stack. **/
    aconst_0 = 2795     ,/** push a const pointer into the stack (value = 0). **/
    aload = 2796        ,/** load a pointer into the stack from local variable. **/
    aload_0 = 2797      ,/** load a pointer into the stack from local variable 0. **/
    aload_1 = 2798      ,/** load a pointer into the stack from local variable 1. **/
    aload_2 = 2799      ,/** load a pointer into the stack from local variable 2. **/
    aload_3 = 2800      ,/** load a pointer into the stack from local variable 3. **/
    aload_4 = 2801      ,/** load a pointer into the stack from local variable 4. **/
    astore = 2802       ,/** store a pointer from stack into local variable. **/
    astore_0 = 2803     ,/** store a pointer from stack into local variable 0. **/
    astore_1 = 2804     ,/** store a pointer from stack into local variable 1. **/
    astore_2 = 2805     ,/** store a pointer from stack into local variable 2. **/
    astore_3 = 2806     ,/** store a pointer from stack into local variable 3. **/
    astore_4 = 2807     ,/** store a pointer from stack into local variable 4. **/
    adup = 2808         ,/** duplicate a pointer on the stack. **/
    adup2 = 2809        ,/** duplicate a pointer 2 times on the stack. **/
    adup3 = 2810        ,/** duplicate a pointer 3 times on the stack. **/
    adup4 = 2811        ,/** duplicate a pointer 4 times on the stack. **/
    adup5 = 2812        ,/** duplicate a pointer 5 times on the stack. **/
    aset = 2813         ,/** set a pointer from stack into a field on base pointer. **/
    aget = 2814         ,/** get a pointer from a field on base pointer to stack. **/
    avset = 2815        ,/** set a pointer from value into a field on base pointer. **/
    asget = 2816        ,/** get a pointer from a field on base pointer to stack using address from stack. **/
    asset = 2817        ,/** set a pointer from stack into a field on base pointer using address from stack. **/
    asetl = 2818        ,/** set a pointer from local variable into a field on base pointer. **/
    ainc_1 = 2819       ,/** increment pointer by 1 on stack. **/
    ainc_2 = 2820       ,/** increment pointer by 2 on stack. **/
    astinc_1 = 2821     ,/** increment pointer by 1 on stack. **/
    astinc_2 = 2822     ,/** increment pointer by 2 on stack. **/
    areturn = 2823      ,/** return a pointer into the main stack. **/
    amainst = 2824      ,/** store a pointer from main stack in a local variable.. **/
    amainst_0 = 2825    ,/** store a pointer from main stack in local variable 0. **/
    amainst_1 = 2826    ,/** store a pointer from main stack in local variable 1. **/
    amainst_2 = 2827    ,/** store a pointer from main stack in local variable 2. **/
    amainst_3 = 2828    ,/** store a pointer from main stack in local variable 3. **/

};

#endif //MVM_OPCODES_H